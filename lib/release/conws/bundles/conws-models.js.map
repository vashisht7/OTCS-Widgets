{"version":3,"file":"conws-models.js","sources":["../../src/models/workspacecreateforms.js","../../src/models/metadata.controller.js","../../src/models/favorite.model.js","../../src/models/workspacecontext/workspacecontext.node.model.js","../../src/models/workspacecontext/workspacecontext.node.factory.js","../../src/models/workspacecontext/workspacecontext.model.js","../../src/models/workspacecontext/workspacecontext.factory.js","../../src/utils/previewpane/impl/nls/previewpane.lang.js","../../src/utils/previewpane/impl/nls/root/previewpane.lang.js","../../src/utils/previewpane/impl/nls/previewpane.lang!i18n","../../src/utils/previewpane/impl/previewheader.model.js","../../src/utils/previewpane/impl/attributes.model.js","../../src/utils/previewpane/impl/role.model.js","../../src/widgets/team/impl/team.model.js","../../src/widgets/team/impl/team.model.factory.js","../../src/widgets/team/impl/participants.columns.js","../../src/widgets/team/impl/roles.columns.js","../../src/widgets/team/impl/cells/metadata.js","../../src/widgets/team/impl/roles.model.js","../../src/widgets/team/impl/nls/team.lang.js","../../src/widgets/team/impl/nls/root/team.lang.js","../../src/widgets/team/impl/participant.model.js","../../src/widgets/team/impl/participants.model.js","../../src/widgets/team/impl/participants.model.factory.js","../../src/widgets/team/impl/roles.model.expanded.js","../../src/widgets/team/impl/roles.model.factory.js","../../src/widgets/team/impl/controls/filter/impl/filter.model.js","../../src/models/categoryforms/categoryforms.model.js","../../src/models/selectedmetadataform/selectedmetadataform.model.js","../../src/models/selectedmetadataform/selectedmetadataform.factory.js","../../src/utils/workspaces/impl/workspaceutil.js","../../src/utils/workspaces/workspace.model.js","../../src/utils/workspaces/impl/workspaces.collection.mixin.js","../../src/widgets/relatedworkspaces/impl/relatedworkspaces.model.js","../../src/widgets/relatedworkspaces/impl/relatedworkspaces.factory.js","../../src/widgets/header/impl/header.model.js","../../src/widgets/header/impl/header.model.factory.js","../../src/widgets/header/impl/header.icon.model.js","../../src/widgets/myworkspaces/impl/myworkspaces.model.js","../../src/widgets/myworkspaces/impl/myworkspaces.model.factory.js","../../src/widgets/outlook/impl/utils/utility.js","../../src/widgets/outlook/impl/recentwksps/impl/recentwksps.model.js","../../src/widgets/outlook/impl/recentwksps/impl/recentwksps.model.factory.js","../../src/widgets/outlook/impl/folder/impl/folders.model.js","../../src/widgets/outlook/impl/wksp/impl/wksp.model.js","../../src/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.js","../../src/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.factory.js","../../src/widgets/outlook/impl/nls/lang.js","../../src/widgets/outlook/impl/nls/root/lang.js","../../src/widgets/outlook/impl/nls/lang!i18n","../../src/widgets/outlook/impl/searchwksps/impl/searchwksps.model.js","../../src/widgets/outlook/impl/searchwksps/impl/searchwksps.model.factory.js","../../src/widgets/outlook/impl/searchwksps/impl/searchresult.model.js","../../src/widgets/outlook/impl/searchwksps/impl/wksptypes.model.js","../../src/models/configurationvolume/configurationvolume.model.js","../../src/models/configurationvolume/configurationvolume.factory.js","conws-models.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by stefang on 09.10.2015.\r\n */\r\ncsui.define('conws/models/workspacecreateforms',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/base\", \"csui/models/nodeforms\"\r\n], function (module, $, _, Backbone, log, base, NodeFormCollection) {\r\n  \"use strict\";\r\n\r\n  // copy values from UI into server form, but not if the fields from the server are readonly.\r\n  // And if the fields from the server are writable and the fields from the UI are readonly, then\r\n  // also don't copy, because then the fields must be set to the default values from the server.\r\n  function copyWritables(dst,dst_options,dst_schema,src,src_options, src_schema) {\r\n    var iskey = _.reduce(_.keys(dst),function(iskey,key){iskey[key]=true;return iskey;},{});\r\n    _.each(src,function(src_val,key) {\r\n      if (iskey[key]) {\r\n        var copyValue = true,\r\n            new_options = dst_options && dst_options.fields && (dst_options.fields[key] ? dst_options.fields[key] : dst_options.fields.item ),\r\n            new_schema  = dst_schema && (dst_schema.properties ? dst_schema.properties[key] : dst_schema.items),\r\n            old_options = src_options && src_options.fields && (src_options.fields[key] ? src_options.fields[key] : src_options.fields.item ),\r\n            old_schema = src_schema && (src_schema.properties ? src_schema.properties[key] : src_schema.items);\r\n        if (new_options && new_options.readonly || new_schema && new_schema.readonly ||\r\n            old_options && old_options.readonly || old_schema && old_schema.readonly) {\r\n          copyValue = false;\r\n        }\r\n        if (copyValue) {\r\n          var dst_val = dst[key],\r\n              is_dst_obj = _.isObject(dst_val),\r\n              is_src_obj = _.isObject(src_val);\r\n          if (is_dst_obj && is_src_obj) {\r\n            copyWritables(dst_val,new_options,new_schema,src_val,old_options,old_schema);\r\n          } else if (!is_dst_obj && !is_src_obj) {\r\n            dst[key] = src[key];\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // WorkspaceCreateFormCollection\r\n  // ------------------------\r\n\r\n  var WorkspaceCreateFormCollection = NodeFormCollection.extend({\r\n\r\n        constructor: function WorkspaceCreateFormCollection(models, options) {\r\n          NodeFormCollection.prototype.constructor.apply(this, arguments);\r\n          this.type = options.type;\r\n          this.actionContext = options.actionContext;\r\n          if (this.type === undefined) {\r\n            throw new Error(WorkspaceCreateFormCollection.ERR_CONSTRUCTOR_NO_TYPE_GIVEN);\r\n          }\r\n          if (this.options.wsType === undefined) {\r\n            throw new Error(WorkspaceCreateFormCollection.ERR_CONSTRUCTOR_NO_WSTYPE_GIVEN);\r\n          }\r\n        },\r\n\r\n        url: function () {\r\n          //var path = 'forms/nodes/create',\r\n          var path = 'forms/businessworkspaces/create',\r\n              wsType = this.options.wsType,\r\n              template = this.options.template,\r\n              params = {\r\n                parent_id: this.node.get(\"id\"),\r\n                type: this.type,\r\n                wksp_type_id: wsType.id,\r\n                template_id: template ? template.id : undefined,\r\n                bo_type_id: this.bo_type_id /*can be set by caller before fetch*/,\r\n                bo_id: this.bo_id /*can be set by caller before fetch*/\r\n              },\r\n              resource = path + '?' + $.param(_.omit(params,function (value) {\r\n                    return value === null || value === undefined || value === '';\r\n                  })),\r\n              url = this.node.connector.connection.url;\r\n          //return base.Url.combine(url, resource);\r\n          return base.Url.combine(url&&url.replace('/v1', '/v2')||url, resource);\r\n        },\r\n\r\n        parse: function (response) {\r\n          var forms = response.forms;\r\n\r\n          // TODO this should be sent by server, remove when possible\r\n          _.each(forms, function (form) {\r\n            form.id = form.schema.title;\r\n          });\r\n          forms.length && (forms[0].id = \"general\");\r\n\r\n          if (forms.length>0) {\r\n            var forms_map = _.reduce(forms, function (map,form) {form.role_name && (map[form.role_name] = form); return map;},{}),\r\n                schema_map = _.reduce(this.formsSchema, function (map,form) {form.role_name && (map[form.role_name] = form); return map;},{}),\r\n                general = forms[0];\r\n\r\n            // if server sends name as readonly and required but empty name, set required to false.\r\n            if (general && general.schema && general.schema.properties && general.schema.properties.name) {\r\n              if (general.schema.properties.name.readonly && general.schema.properties.name.required) {\r\n                if (!general.data || !general.data.name) {\r\n                  general.schema.properties.name.required = false;\r\n                }\r\n              }\r\n            }\r\n\r\n            // for simplicity, we avoid category and others be manually added. PM decision.\r\n            // And at least as long as issue LPAD-50706 exists, we have to avoid that as well.\r\n            if (general && general.data && general.data.bo_type_id) {\r\n              if (!forms_map.categories) {\r\n                forms_map.categories = { role_name: \"categories\" };\r\n                forms.push(forms_map.categories);\r\n              }\r\n              _.each(forms, function (form) {\r\n                if (form.role_name) {\r\n                  form.schema || (form.schema = {});\r\n                  form.schema.additionalProperties = false;\r\n                }\r\n              });\r\n            }\r\n\r\n            if (general && general.data) {\r\n              // because rest call does not deliver bo_type_id and bo_id, if these params\r\n              // were send with the request, we must propagate it here.\r\n              var old = this.at(0) && this.at(0).get(\"data\") || {};\r\n              _.defaults(general.data,{bo_id:this.bo_id},_.pick(old,\"bo_id\",\"bo_type_id\",\"bo_type_name\",\"ext_system_id\",\"ext_system_name\"));\r\n            }\r\n\r\n            // copy all values from before the server call to the writable fields\r\n            if (this.formsValues) {\r\n              var role_options, role_schema;\r\n              if (general && general.data) {\r\n                role_options = this.formsSchema && this.formsSchema[0] && this.formsSchema[0].options;\r\n                role_schema = this.formsSchema && this.formsSchema[0] && this.formsSchema[0].schema;\r\n                copyWritables(general.data,general.options,general.schema,\r\n                    {\r\n                      name: this.formsValues.name,\r\n                      description: this.formsValues.description\r\n                    },role_options,role_schema);\r\n              }\r\n              if (this.formsValues.roles) {\r\n                _.each(this.formsValues.roles, function(role_data,role_name) {\r\n                  var role_form = forms_map[role_name];\r\n                  if (role_form) {\r\n                    role_options = schema_map[role_name] && schema_map[role_name].options;\r\n                    role_schema = schema_map[role_name] && schema_map[role_name].schema;\r\n                    copyWritables(\r\n                        role_form.data,role_form.options,role_form.schema,\r\n                        role_data, role_options, role_schema\r\n                    );\r\n                  }\r\n                }, this);\r\n              }\r\n            }\r\n          }\r\n\r\n          this.serverForms = forms;\r\n          return forms;\r\n        }\r\n\r\n      },\r\n      // statics\r\n      {\r\n        // errors\r\n        ERR_CONSTRUCTOR_NO_TYPE_GIVEN: \"No creation type given in constructor\",\r\n        ERR_CONSTRUCTOR_NO_WSTYPE_GIVEN: \"No workspace type given in constructor\"\r\n      });\r\n\r\n  // Module\r\n  // ------\r\n\r\n  _.extend(WorkspaceCreateFormCollection, {\r\n    version: '1.0'\r\n  });\r\n\r\n  return WorkspaceCreateFormCollection;\r\n\r\n});\r\n\r\n\r\n\n","/**\r\n * Created by stefang on 12.10.2015.\r\n */\r\ncsui.define('conws/models/metadata.controller',[\"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\", \"csui/utils/url\",\r\n  \"csui/utils/base\"\r\n], function (_, $, Backbone, Url, base) {\r\n\r\n  // handling server calls for metadata\r\n  function MetadataController(status, options, attributes) {\r\n    this.status = status || {};\r\n    this.options = options || {};\r\n    this.attributes = attributes || {};\r\n  }\r\n\r\n  _.extend(MetadataController.prototype, Backbone.Events, {\r\n\r\n    save: function (model, data) {\r\n      // Pass the data via 'attributes' param.  They would be set to the node model.\r\n\r\n      // Note: if data does not contain common attributes,\r\n      // it should be passed via the second param as options as the following:\r\n      //   model.save({}, {data: data, wait: true, patch: true})\r\n      // We'll revisit this later if such scenario arises.\r\n\r\n      return model.save(data, {\r\n        wait: true,\r\n        patch: true\r\n      });\r\n    },\r\n\r\n    createItem: function (model, formsValues) {\r\n      if (!model.connector) {\r\n        return $.Deferred().reject();\r\n      }\r\n\r\n      if(!!model && !!model.attributes && !!model.attributes.parent_id){\r\n        formsValues.source_parent_id = model.attributes.parent_id;\r\n      }\r\n\r\n      // FormData available (IE10+, WebKit)\r\n      var formData = new FormData();\r\n      formData.append('body', JSON.stringify(_.extend({\r\n        template_id: this.options.template ? this.options.template.id : undefined\r\n      },formsValues)));\r\n\r\n      var url = model.connector.connection.url;\r\n      var options = {\r\n        type: 'POST',\r\n        //url: Url.combine(model.connector.connection.url, \"nodes\"),\r\n        url: Url.combine(url&&url.replace('/v1', '/v2')||url, \"businessworkspaces\"),\r\n        data: formData,\r\n        contentType: false,\r\n        processData: false\r\n      };\r\n\r\n      model.connector.extendAjaxOptions(options);\r\n\r\n      var collection = this.options.collection;\r\n      return model.connector.makeAjaxCall(options)\r\n        .then(function (response) {\r\n          // Update all attributes sent from the server. Currently there is only the id.\r\n          // But do not propagate the events to the view.\r\n          // As we fetch the new node to also get all actions, all change events are triggered,\r\n          // except \"change:id\". But this event is not needed: only the MetadataPropertiesView\r\n          // is listening on it, to get the create forms again.\r\n          // But this is not needed and not desired in this case. So we are safe to do a silent set.\r\n          model.set(response.results, { silent: true });\r\n          //updating the model collection \r\n          model.collection = collection;\r\n          model.attributes.sub_folder_id = response.results.sub_folder_id;\r\n          return model.fetch({ collection: collection });\r\n        });\r\n    }\r\n\r\n  });\r\n\r\n  MetadataController.prototype.get = Backbone.Model.prototype.get;\r\n  _.extend(MetadataController, {version: \"1.0\"});\r\n\r\n  return MetadataController;\r\n});\r\n\n","csui.define('conws/models/favorite.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  'csui/utils/url',\r\n], function (module, $, _, Backbone, Url) {\r\n  \"use strict\";\r\n\r\n  var Favorite = Backbone.Model.extend({\r\n\r\n    constructor: function Favorite(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n      //assign mode to connector so all header info is made available.\r\n      options.connector.assignTo(this);\r\n\r\n\r\n      var nodeid = options.node.get('id');\r\n      if (nodeid) {\r\n        this.set('id',nodeid);\r\n        this.set('selected',options.node.get('favorite'));\r\n      }\r\n      this.listenTo(options.node,'change:id',function(){\r\n        this.set('id',options.node.get('id'));\r\n      })\r\n    },\r\n\r\n    url: function () {\r\n      var nodeId = this.get('id'),\r\n          url = this.connector.connection.url.replace('/v1', '/v2');\r\n      url = Url.combine(url, 'members', 'favorites', nodeId);\r\n      return url;\r\n    },\r\n\r\n    isNew: function () {\r\n      return this.get('selected'); // this.attributes.selected\r\n    },\r\n\r\n    add: function () {\r\n      this.set('selected', true);\r\n      return this.save();\r\n    },\r\n\r\n    remove: function () {\r\n      this.set('selected', false);\r\n      return this.destroy();\r\n    }\r\n  });\r\n\r\n  return Favorite;\r\n});\n","/**\r\n * Created by stefang on 26.11.2015.\r\n */\r\n// Fetches the workspace id of the effective businessworkspace for a given node.\r\ncsui.define('conws/models/workspacecontext/workspacecontext.node.model',['csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  'csui/utils/url',\r\n  \"csui/models/resource\"\r\n], function ($, _, Backbone,\r\n    log,\r\n    Url,\r\n    ResourceModel) {\r\n\r\n  var WorkspaceContextNode = Backbone.Model.extend(\r\n      _.defaults({\r\n\r\n        workspaceSpecific: true,\r\n\r\n        constructor: function WorkspaceContextNode(attributes, options) {\r\n          options || (options = {});\r\n\r\n          Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n          this.options = options;\r\n\r\n          this.makeResource(options);\r\n\r\n          this.listenTo(this.options.node, 'change:id', this.syncToNode);\r\n\r\n          // and initially set id if it fits.\r\n          this.syncToNode();\r\n        },\r\n\r\n        syncToNode: function() {\r\n          var node = this.options.node;\r\n          var node_id = node.get(\"id\");\r\n          if (node.get(\"type\")===848) {\r\n            this.set({id:node_id,type:848});\r\n          }\r\n        },\r\n\r\n        url: function () {\r\n          var nodeId = this.options.node.get('id');\r\n          // URLs like /nodes/:id/blablabla\r\n          //var url = this.node.urlBase() + '/blablabla';\r\n          // Alternative for URLs like /businessworkspace/:id\r\n          var url = Url.combine(this.options.connector.connection.url, 'nodes', nodeId,\r\n              'businessworkspace');\r\n          url = url.replace('/v2', '/v1'); // yes, we need to send a v1 call!!!\r\n          return url;\r\n        },\r\n\r\n        fetch: function (options) {\r\n          if (this.options.node.get('type')!==848) {\r\n            log.debug(\"Fetching the workspace id for {0} from server.\", this) && console.log(log.last);\r\n            options || (options = {});\r\n            // If not overridden, Use the v1 URL for GET requests\r\n            if (!options.url) {\r\n              options.url = _.result(this, 'url');\r\n            }\r\n            return this.Fetchable.fetch.call(this, options);\r\n          } else {\r\n            log.debug(\"Fetching the workspace id for {0} from node.\", this) && console.log(log.last);\r\n            this.set({id:this.options.node.get('id'),type:848});\r\n            return $.Deferred().resolve().promise();\r\n          }\r\n        },\r\n\r\n        parse: function (response) {\r\n          return {id:response.id,type:response.type};\r\n        },\r\n\r\n        toString: function () {\r\n          // Format a string for logging purposes\r\n          return \"node:\" + this.get('id');\r\n        }\r\n\r\n      }, ResourceModel(Backbone.Model)));\r\n\r\n  return WorkspaceContextNode;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 26.11.2015.\r\n */\r\ncsui.define('conws/models/workspacecontext/workspacecontext.node.factory',['csui/lib/underscore',\r\n  'csui/utils/contexts/factories/factory',\r\n  'csui/utils/contexts/factories/connector',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/models/workspacecontext/workspacecontext.node.model'\r\n], function (_,\r\n    ModelFactory,\r\n    ConnectorFactory,\r\n    NodeModelFactory,\r\n    WorkspaceContextNodeModel) {\r\n\r\n  var WorkspaceContextNodeFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'workspaceContextNode',\r\n\r\n    constructor: function WorkspaceContextNodeFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      var node = options.workspaceContextNode.node || context.getModel(NodeModelFactory, options),\r\n          connector = options.workspaceContextNode.connector || context.getObject(ConnectorFactory, options);\r\n\r\n      this.property = new WorkspaceContextNodeModel({},{connector: connector,node:node});\r\n\r\n    },\r\n\r\n    fetch: function (options) {\r\n      return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceContextNodeFactory;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('conws/models/workspacecontext/workspacecontext.model',['csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  'csui/utils/contexts/context',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/models/workspacecontext/workspacecontext.node.factory'\r\n], function ($, _, Backbone,\r\n    log,\r\n    Context,\r\n    NodeModelFactory,\r\n    WorkspaceContextNodeFactory) {\r\n\r\n  var WorkspaceContextModel = Context.extend({\r\n\r\n    constructor: function WorkspaceContextModel(attributes, options) {\r\n      options || (options = {});\r\n\r\n      Context.prototype.constructor.apply(this, arguments);\r\n\r\n      this.options = options;\r\n\r\n      this.workspaceSpecific = {};\r\n      this.workspaceSpecific[NodeModelFactory.prototype.propertyPrefix] = true;\r\n      this.workspaceSpecific[WorkspaceContextNodeFactory.prototype.propertyPrefix] = true;\r\n\r\n      this.workspaceSpecificFactories = [\r\n        NodeModelFactory,\r\n        WorkspaceContextNodeFactory\r\n      ];\r\n\r\n      // get the navigation node, that triggers the workspace context node\r\n      this.options.node = this.options.context.getModel(NodeModelFactory);\r\n\r\n      // workspace context node is the first model in the workspace context and we fetch it first\r\n      this.wkspid = this.getModel(WorkspaceContextNodeFactory, {node: this.options.node, connector: this.options.node.connector});\r\n\r\n      // and provide a workspace node, for compatibility with the outer context\r\n      this.node = this.getModel(NodeModelFactory);\r\n      if (this.wkspid.get(\"id\") === this.options.node.get(\"id\")) {\r\n        this.node.set(this.options.node.attributes);\r\n      } else {\r\n        this.node.set(\"id\", this.wkspid.get(\"id\"));\r\n      }\r\n\r\n      this.listenTo(this.options.node, 'change', function() {\r\n        if (this.node.get(\"id\") === this.options.node.get(\"id\")) {\r\n          this.node.set(this.options.node.attributes);\r\n        }\r\n      });\r\n    },\r\n\r\n    setWorkspaceSpecific: function(Factory) {\r\n      this.workspaceSpecific[Factory.prototype.propertyPrefix] = true;\r\n      if (!this._isWorkspaceSpecificFactory(Factory)) {\r\n        this.workspaceSpecificFactories.push(Factory);\r\n      }\r\n    },\r\n\r\n    isWorkspaceSpecific: function (Factory) {\r\n      var found = false;\r\n      if (this.workspaceSpecific[Factory.prototype.propertyPrefix]) {\r\n        found = true;\r\n      } else if (this._isWorkspaceSpecificFactory(Factory)) {\r\n        // remember property prefix, so we find it faster next time.\r\n        this.workspaceSpecific[Factory.prototype.propertyPrefix] = true;\r\n        found = true;\r\n      }\r\n      return found;\r\n    },\r\n\r\n    _isWorkspaceSpecificFactory: function (Factory) {\r\n      var found = false;\r\n      for (var ii=0; ii<this.workspaceSpecificFactories.length; ii++) {\r\n        if (this.workspaceSpecificFactories[ii]===Factory) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      return found;\r\n    },\r\n\r\n    getOuterContext: function () {\r\n      return this.options.context;\r\n    },\r\n\r\n    getModel: function () { return this._getWorkspaceObject(\"getModel\", arguments); },\r\n    getCollection: function () { return this._getWorkspaceObject(\"getCollection\", arguments); },\r\n    getObject: function () { return this._getWorkspaceObject(\"getObject\", arguments); },\r\n\r\n    _getWorkspaceObject: function (methodName, params) {\r\n\r\n      var model;\r\n\r\n      if (this.isWorkspaceSpecific(params[0])) {\r\n        model = Context.prototype[methodName].apply(this, params);\r\n      } else {\r\n        model = this.options.context[methodName].apply(this.options.context, params);\r\n      }\r\n\r\n      return model;\r\n    },\r\n\r\n    fetch: function (options) {\r\n      var old_id = this.wkspid.get(\"id\"),\r\n          self   = this;\r\n      // First fetch workspace context node and wait for the result.\r\n      // As we do this in the fetch, we delay the slide-in animation of the perspective,\r\n      // so the perspective is sliding in only after we have triggered all fetches here.\r\n      // This is for sliding in smoothly, as otherwise it is stumbling on mobiles/tablets.\r\n      var result = this.wkspid\r\n          .fetch()\r\n          .then(function () {\r\n            log.debug(\"wkspid old {0}, new {1}.\", old_id, self.wkspid.get(\"id\")) &&\r\n            console.log(log.last);\r\n            var new_id = self.wkspid.get(\"id\");\r\n\r\n            // then, if possible, first get values for node models from context node\r\n            // and for all other models do a normal fetch using the factory.\r\n            // note: node models represent persisted or non persisted nodes for an id.\r\n            // They are triggered from outside by setting the id.\r\n            // So if the workspace id of the workspace context node changes\r\n            // we must set the id of all our node models in the workspace context.\r\n            var factories = self.getFactories ? self.getFactories() : self._factories;\r\n            var obj = _.find(factories, function (f) {return f.property === self.node});\r\n            log.debug(\"going to fetch {0}.\", obj.propertyPrefix) && console.log(log.last);\r\n            var nodepromise, isWksp;\r\n            if (new_id === self.options.node.get(\"id\")) {\r\n              self.node.set(self.options.node.attributes, {silent: true});\r\n              // Check if the current workspace is already fetched.No need to fetch again\r\n              // if the workspace is already fetched( breadcrumb/links from other widgets like\r\n              // related,business attachments,workspaces etc.,)\r\n              if (self.wkspStatus && self.wkspStatus.wksp_id == new_id &&\r\n                  self.wkspStatus.fetched) {\r\n                return $.Deferred()\r\n                    .resolve(self, {}, options)\r\n                    .promise();\r\n              }\r\n              isWksp = true;\r\n            } else {\r\n              isWksp = false;\r\n              self.node.set(\"id\", new_id);\r\n              if (obj.fetch) {\r\n                // Node other than a workspace - accessed via bookmark/shortcut/direct-access\r\n                // 1) Fetch if the node is accessed directly via bookmark and workspace context is\r\n                //    not already fetched(!old_id)\r\n                // 2) Fetch if the node is accessed via shortcut where the workspace context is\r\n                //    changed (old_id !== new_id)\r\n                // 3) Skip the fetch when the node belongs to already fetched workspace\r\n                if (!old_id || (old_id && new_id && old_id !== new_id)) {\r\n                  nodepromise = obj.fetch();\r\n                }\r\n              }\r\n            }\r\n            // after setting the id in the node model, again get the factories to be sure, that\r\n            // we have also the factories, that were added during the change:id propagation.\r\n            factories = self.getFactories ? self.getFactories() : self._factories;\r\n            var promises = _.chain(factories)\r\n                .map(function (obj) {\r\n                  log.debug(\"going to fetch {0}.\", obj.propertyPrefix) && console.log(log.last);\r\n                  if (obj.property !== self.wkspid && obj.property !== self.node) {\r\n                    if (obj.fetch) {\r\n                      // 1. Fetch if the workspace is accessed for the first time (isWksp)\r\n                      // 2. Fetch if the node inside a workspace is accessed directly and the\r\n                      //    workspace context is not fetched even once // (!old_id)\r\n                      // 3. Fetch if the workspace is changed (ie., old_id !== new_id)\r\n                      if (isWksp || !old_id || (old_id && new_id && old_id !== new_id)) {\r\n                        return obj.fetch();\r\n                      }\r\n                    }\r\n                  }\r\n                })\r\n                .compact()\r\n                .value();\r\n            if (nodepromise) {\r\n              promises.unshift(nodepromise);\r\n            }\r\n            // Set the workspace fetched status for subsequent workspace access via other widgets/breadcrumbs\r\n            if (promises.length > 0) {\r\n              self.wkspStatus = {\r\n                wksp_id: new_id,\r\n                fetched: true\r\n              }\r\n            }\r\n            return $.when.apply($, promises);\r\n          });\r\n      return result;\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceContextModel;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('conws/models/workspacecontext/workspacecontext.factory',['csui/lib/underscore',\r\n  'csui/utils/contexts/factories/factory',\r\n  'conws/models/workspacecontext/workspacecontext.model'\r\n], function (_,\r\n    ModelFactory,\r\n    WorkspaceContextModel) {\r\n\r\n  var WorkspaceContextFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'workspaceContext',\r\n\r\n    constructor: function WorkspaceContextFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      this.property = new WorkspaceContextModel({}, {context: context});\r\n\r\n    },\r\n\r\n    fetch: function (options) {\r\n      return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceContextFactory;\r\n\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('conws/utils/previewpane/impl/nls/previewpane.lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\r\n\n","// Defines localizable strings in the default language (English)\r\ncsui.define('conws/utils/previewpane/impl/nls/root/previewpane.lang',{\r\n  noMetadataMessage: 'No metadata available',\r\n  noRoleMembersMessage: 'No role members assigned',\r\n  quickLinkTooltipText: 'Open in external system'\r\n});\r\n\n","\n","csui.define('conws/utils/previewpane/impl/previewheader.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/utils/base',\r\n  'i18n!conws/utils/previewpane/impl/nls/previewpane.lang'\r\n], function (_, Backbone, Url, base, lang) {\r\n\r\n  var PreviewHeaderModel = Backbone.Model.extend({\r\n\r\n    // constructor gives an explicit name to the object in the debugger\r\n    constructor: function PreviewHeaderModel(options) {\r\n      Backbone.Model.prototype.constructor.call(this, {\r\n            id: options.node.get('id'),\r\n            typeName: base.getClosestLocalizedString(options.config.typeName, \"\"),\r\n            name: options.node.get('name'),\r\n            quickLinkTooltip: lang.quickLinkTooltipText\r\n          },\r\n          options\r\n      );\r\n\r\n      options || (options = {});\r\n\r\n      // enable the model for communication with the CS REST API\r\n      if (options && options.node && options.node.connector) {\r\n        options.node.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return true;\r\n    },\r\n\r\n    // computes the REST API URL used to access the metadata.\r\n    url: function () {\r\n      var url = Url.combine(this.connector.connection.url, 'businessworkspaces/' + this.get('id'));\r\n      url = url.replace('/v1/', '/v2/');\r\n      return url;\r\n    },\r\n\r\n    // parses the REST call response and stores the data\r\n    parse: function (response) {\r\n      var ret = response.results && response.results.data && response.results.data.business_properties;\r\n      this.display_url = ret && ret.display_url;\r\n      return ret;\r\n    }\r\n  });\r\n\r\n  // return the model\r\n  return PreviewHeaderModel;\r\n});\r\n\n","csui.define('conws/utils/previewpane/impl/attributes.model',[\r\n  'module',\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, Url, NodeModel) {\r\n\r\n  var config = module.config();\r\n\r\n  var PreviewAttributesModel = Backbone.Model.extend({\r\n\r\n    // constructor gives an explicit name to the object in the debugger\r\n    constructor: function PreviewAttributesModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      options || (options={});\r\n\r\n      // enable the model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n\r\n      this.categoryId = options.categoryId;\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return true;\r\n    },\r\n\r\n    // computes the REST API URL used to access the metadata.\r\n    url: function () {\r\n      return Url.combine(\r\n        this.connector.connection.url,\r\n        '/forms/nodes/categories/update?id=' + this.get('id') + '&category_id=' + this.categoryId);\r\n    },\r\n\r\n    // parses the REST call response and stores the data\r\n    parse: function (response) {\r\n      return response.forms[0];\r\n    }\r\n  });\r\n\r\n  // return the model\r\n  return PreviewAttributesModel;\r\n});\r\n\n","csui.define('conws/utils/previewpane/impl/role.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function (_, Backbone, base, Url, NodeConnectableMixin, FetchableMixin) {\r\n\r\n  var RoleMemberModel = Backbone.Model.extend({\r\n\r\n        constructor: function RoleMemberModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.call(this, attributes.member, options);\r\n\r\n            this.memberType = attributes.memberType;\r\n            this.member = attributes.member;\r\n            this.roles = attributes.roles;\r\n            this.connector = options.connector;\r\n        },\r\n\r\n        getLeadingRole: function () {\r\n            var first = '';\r\n            var lead = '';\r\n            var roles = this.roles;\r\n            _.each(roles, function (role) {\r\n                first = roles[0].name;\r\n                if (role.leader){\r\n                    lead = role.name;\r\n                }\r\n            });\r\n            return lead || first;\r\n        },\r\n\r\n        getRolesIndicator: function () {\r\n            var ret = '';\r\n            if (this.roles.length > 1) {\r\n                ret = '+' + (this.roles.length - 1);\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        getMemberType: function(){\r\n          var ret = 'user';\r\n            var member = this.member;\r\n            if (member && member.type !== 0){\r\n                ret = 'group';\r\n            }\r\n            return ret;\r\n        },\r\n\r\n        // whenever the icon url has changed, trigger model\r\n        // change event\r\n        setIconUrl: function(url){\r\n            if (this.iconUrl !== url){\r\n                this.iconUrl = url;\r\n                this.trigger('change', this, this.options);\r\n            }\r\n        },\r\n\r\n        // gets the icon url\r\n        getIconUrl: function(){\r\n            return this.iconUrl;\r\n        }\r\n    });\r\n\r\n    var RoleMemberCollection = Backbone.Collection.extend({\r\n\r\n        model: RoleMemberModel,\r\n\r\n        constructor: function RoleMemberCollection(models, options) {\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.roleId = options.config.roleId;\r\n            this.context = options && options.context ? options.context : undefined;\r\n            this.makeNodeConnectable(options);\r\n            this.makeFetchable(options);\r\n        },\r\n\r\n        url: function () {\r\n            var id = this.node.get('id');\r\n            var url = this.connector.connection.url.replace('/v1', '/v2');\r\n            url = Url.combine(url, 'businessworkspaces', id, 'roles');\r\n            url = url + '?fields=members';\r\n            return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n            var team = {};\r\n\r\n            var roles = response.results;\r\n            //var members = [response.results.data.members];\r\n\r\n            var self = this;\r\n            _.each(roles, function (role, i) {\r\n                if(role && role.data && role.data.properties && self.roleId === role.data.properties.name) {\r\n                  // add display_name to role\r\n                  var r = _.clone(role.data.properties);\r\n                  r = _.extend({display_name: r.name}, r);\r\n                  var hasMembers = role.data.members.length;\r\n                  if (hasMembers) {\r\n                    // role has members\r\n                    _.each(role.data.members, function (member, j) {\r\n\r\n                      var teamMember = team[member.id];\r\n                      if (!teamMember) {\r\n                        teamMember = {\r\n                          data: {\r\n                            properties: _.clone(member)\r\n                          },\r\n                          memberType: 'member',\r\n                          member: _.clone(member),\r\n                          roles: []\r\n                        };\r\n                        team[member.id] = teamMember;\r\n                      }\r\n                      teamMember.roles.push(r);\r\n                    });\r\n                  }\r\n                }\r\n            });\r\n\r\n            // return team\r\n            var ret = _.values(team);\r\n            ret.sort(function (a,b) {\r\n              var ma  = a.member, mb = b.member;\r\n              var ret = base.localeCompareString(ma.display_name  , mb.display_name  , {usage:'sort'}) ;\r\n              return ret;\r\n            });\r\n            return ret;\r\n        }\r\n    });\r\n\r\n    NodeConnectableMixin.mixin(RoleMemberCollection.prototype);\r\n    FetchableMixin.mixin(RoleMemberCollection.prototype);\r\n\r\n    return RoleMemberCollection;\r\n});\r\n\n","csui.define('conws/widgets/team/impl/team.model',['csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  \"csui/models/nodechildren\"\r\n], function (_, Backbone, Url, ConnectableMixin, NodeChildrenColumnModel,\r\n    NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection) {\r\n\r\n  var TeamColumnModel = NodeChildrenColumnModel.extend({});\r\n\r\n  var TeamColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    model: TeamColumnModel,\r\n\r\n    // private\r\n    getColumnModels: function (columnKeys, definitions) {\r\n      var columns = NodeChildrenColumnCollection.prototype.getColumnModels.call(\r\n          this, columnKeys, definitions);\r\n      _.each(columns, function (column) {\r\n        var columnKey = column['column_key'];\r\n        if (columnKey === 'type' || columnKey === 'name' || columnKey === 'modify_date') {\r\n          column.sort = true;\r\n        }\r\n      });\r\n      return columns;\r\n    }\r\n\r\n  });\r\n\r\n  var TeamModel = NodeModel.extend({\r\n\r\n    parse: function (response, options) {\r\n      this.memberType = response.memberType;\r\n      this.member = response.member;\r\n      this.roles = response.roles;\r\n      return NodeModel.prototype.parse.call(this, response, options);\r\n    },\r\n\r\n    getLeadingRole: function () {\r\n      var first = '';\r\n      var lead = '';\r\n      var roles = this.roles;\r\n      _.each(roles, function (role) {\r\n        first = roles[0].name;\r\n        if (role.leader) {\r\n          lead = role.name;\r\n        }\r\n      });\r\n      return lead || first;\r\n    },\r\n\r\n    getRolesIndicator: function () {\r\n      var ret = '';\r\n      if (this.roles.length > 1) {\r\n        ret = '+' + (this.roles.length - 1);\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberType: function () {\r\n      var ret = 'user';\r\n      var member = this.member;\r\n      if (member && member.type !== 0) {\r\n        ret = 'group';\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    // whenever the icon url has changed, trigger model\r\n    // change event\r\n    setIconUrl: function (url) {\r\n      if (this.iconUrl !== url) {\r\n        this.iconUrl = url;\r\n        this.trigger('change', this, this.options);\r\n      }\r\n    },\r\n\r\n    // gets the icon url\r\n    getIconUrl: function () {\r\n      return this.iconUrl;\r\n    }\r\n  });\r\n\r\n  var TeamCollection = NodeChildrenCollection.extend({\r\n\r\n        model: TeamModel,\r\n\r\n        constructor: function TeamCollection(attributes, options) {\r\n          Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n          this.context = options && options.context ? options.context : undefined;\r\n          this.makeNodeResource(options)\r\n              .makeConnectable(options);\r\n\r\n          this.columns = new TeamColumnCollection();\r\n          this.listenTo(this, \"sync\", this._sortByName);\r\n        },\r\n\r\n        url: function () {\r\n          var id = this.node.get('id');\r\n          var url = this.connector.connection.url.replace('/v1', '/v2');\r\n          return Url.combine(url, 'businessworkspaces', id, 'roles?fields=members');\r\n        },\r\n\r\n        fetch: function () {\r\n          return this.Fetchable.fetch.apply(this, arguments);\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var team = {};\r\n\r\n          var roles = response.results;\r\n          _.each(roles, function (role, i) {\r\n            // add display_name to role\r\n            var r = _.clone(role.data.properties);\r\n            r = _.extend({display_name: r.name}, r);\r\n            var hasMembers = role.data.members.length;\r\n            if (hasMembers) {\r\n              // role has members\r\n              _.each(role.data.members, function (member, j) {\r\n                var teamMember = team[member.id];\r\n                if (!teamMember) {\r\n                  teamMember = {\r\n                    data: {\r\n                      properties: _.clone(member)\r\n                    },\r\n                    memberType: 'member',\r\n                    member: _.clone(member),\r\n                    roles: []\r\n                  };\r\n                  team[member.id] = teamMember;\r\n                }\r\n                teamMember.roles.push(r);\r\n              });\r\n            }\r\n            else {\r\n              // role is empty\r\n              var teamRole = {\r\n                data: {\r\n                  properties: r\r\n                },\r\n                memberType: 'role',\r\n                member: undefined,\r\n                roles: [r]\r\n              };\r\n              team[role.data.properties.id] = teamRole;\r\n            }\r\n          });\r\n\r\n          // return team\r\n          return _.values(team);\r\n        },\r\n\r\n        _sortByName: function () {\r\n          this.comparator = function (model1, model2) {\r\n            // sorting by memeber type -> 'role' or 'member'\r\n            // if both from the same type, sorting by display_name\r\n            var type1 = model1.memberType;\r\n            var type2 = model2.memberType;\r\n\r\n            var name1, name2;\r\n            if (type1 === type2) {\r\n              name1 = model1.get('display_name').toLowerCase();\r\n              name2 = model2.get('display_name').toLowerCase();\r\n            }\r\n            return type1 > type2 ? 1 :\r\n                   type1 < type2 ? -1 : type1 === type2 && name1 > name2 ? 1 :\r\n                                        type1 === type2 && name1 < name2 ? -1 : 0;\r\n          };\r\n          this.sort();\r\n        }\r\n      }\r\n  );\r\n\r\n  ConnectableMixin.mixin(TeamCollection.prototype);\r\n  return TeamCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/team.model.factory',['module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/team/impl/team.model'\r\n], function (module, _, Backbone, CollectionFactory, NodeModelFactory, ConnectorFactory, TeamCollection) {\r\n\r\n    var TeamCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'team',\r\n\r\n        constructor: function TeamCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var team = this.options.team || {};\r\n            if (!(team instanceof Backbone.Collection)) {\r\n                var node = context.getModel(NodeModelFactory, options),\r\n                    connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n\r\n                team = new TeamCollection(team.models, _.extend({\r\n                    context: context,\r\n                    node: node,\r\n                    connector: connector\r\n                }, team.options, config.options, {\r\n                    autoreset: true\r\n                }));\r\n            }\r\n            this.property = team;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return TeamCollectionFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participants.columns',[\r\n    'csui/lib/backbone'\r\n], function (Backbone) {\r\n\r\n    var ParticipantsTableColumnModel = Backbone.Model.extend({\r\n\r\n        idAttribute: 'key',\r\n\r\n        defaults: {\r\n            key: null,  // key from the resource definitions\r\n            sequence: 0 // smaller number moves the column to the front\r\n        }\r\n    });\r\n\r\n    var ParticipantsTableColumnCollection = Backbone.Collection.extend({\r\n\r\n        columnNames: {\r\n            avatar: 'conws_participantavatar',\r\n            name: 'conws_participantname',\r\n            roles: 'conws_participantroles',\r\n            login: 'conws_participantlogin',\r\n            email: 'conws_participantemail',\r\n            department: 'conws_participantdepartment'\r\n        },\r\n\r\n        model: ParticipantsTableColumnModel,\r\n        comparator: 'sequence',\r\n\r\n        getColumnKeys: function () {\r\n            return this.pluck('key');\r\n        },\r\n\r\n        deepClone: function () {\r\n            return new ParticipantsTableColumnCollection(\r\n                this.map(function (column) {\r\n                    return column.attributes;\r\n                }));\r\n        }\r\n    });\r\n\r\n    // Fixed (system) columns have sequence number < 100, dynamic columns\r\n    // have sequence number > 1000\r\n\r\n    var tableColumns = new ParticipantsTableColumnCollection([\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.avatar,\r\n            sequence: 10\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.name,\r\n            sequence: 20\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.roles,\r\n            sequence: 30\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.login,\r\n            sequence: 40\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.email,\r\n            sequence: 50\r\n        },\r\n        {\r\n            key: ParticipantsTableColumnCollection.prototype.columnNames.department,\r\n            sequence: 60\r\n        }\r\n    ]);\r\n\r\n    return tableColumns;\r\n\r\n});\r\n\r\n\n","csui.define('conws/widgets/team/impl/roles.columns',[\r\n    'csui/lib/backbone'\r\n], function (Backbone) {\r\n\r\n    var RolesTableColumnModel = Backbone.Model.extend({\r\n\r\n        idAttribute: 'key',\r\n\r\n        defaults: {\r\n            key: null,  // key from the resource definitions\r\n            sequence: 0 // smaller number moves the column to the front\r\n        }\r\n    });\r\n\r\n    var RolesTableColumnCollection = Backbone.Collection.extend({\r\n\r\n        columnNames: {\r\n            avatar: 'conws_roleavatar',\r\n            name: 'conws_rolename',\r\n            members: 'conws_rolemembers'\r\n        },\r\n\r\n        model: RolesTableColumnModel,\r\n        comparator: 'sequence',\r\n\r\n        getColumnKeys: function () {\r\n            return this.pluck('key');\r\n        },\r\n\r\n        deepClone: function () {\r\n            return new RolesTableColumnCollection(\r\n                this.map(function (column) {\r\n                    return column.attributes;\r\n                }));\r\n        }\r\n    });\r\n\r\n    // Fixed (system) columns have sequence number < 100, dynamic columns\r\n    // have sequence number > 1000\r\n\r\n    var tableColumns = new RolesTableColumnCollection([\r\n        {\r\n            key: RolesTableColumnCollection.prototype.columnNames.avatar,\r\n            sequence: 10\r\n        },\r\n        {\r\n            key: RolesTableColumnCollection.prototype.columnNames.name,\r\n            sequence: 20\r\n        },\r\n        {\r\n            key: RolesTableColumnCollection.prototype.columnNames.members,\r\n            sequence: 30\r\n        }\r\n    ]);\r\n\r\n    return tableColumns;\r\n\r\n});\r\n\r\n\n","csui.define('conws/widgets/team/impl/cells/metadata',[], function () {\r\n\r\n  function integer(key, name) {\r\n    return {\r\n      \"allow_undefined\": false,\r\n      \"bulk_shared\": false,\r\n      \"default_value\": null,\r\n      \"description\": null,\r\n      \"hidden\": false,\r\n      \"key\": key,\r\n      \"max_value\": null,\r\n      \"min_value\": null,\r\n      \"multi_value\": null,\r\n      \"name\": name,\r\n      \"persona\": \"node\",\r\n      \"read_only\": false,\r\n      \"required\": false,\r\n      \"title\": undefined,\r\n      \"type\": 2,\r\n      \"type_name\": \"Integer\",\r\n      \"valid_values\": [],\r\n      \"valid_values_name\": []\r\n    }\r\n  }\r\n\r\n  function string(key, name) {\r\n    return {\r\n      \"allow_undefined\": false,\r\n      \"bulk_shared\": false,\r\n      \"default_value\": null,\r\n      \"description\": null,\r\n      \"hidden\": false,\r\n      \"key\": key,\r\n      \"max_length\": null,\r\n      \"min_length\": null,\r\n      \"multiline\": false,\r\n      \"multilingual\": false,\r\n      \"multi_value\": false,\r\n      \"name\": name,\r\n      \"password\": false,\r\n      \"persona\": \"\",\r\n      \"read_only\": false,\r\n      \"regex\": \"\",\r\n      \"required\": true,\r\n      \"title\": undefined,\r\n      \"type\": -1,\r\n      \"type_name\": \"String\",\r\n      \"valid_values\": [],\r\n      \"valid_values_name\": []\r\n    }\r\n  }\r\n\r\n  return {\r\n    integer: integer,\r\n    string: string\r\n  }\r\n});\n","csui.define('conws/widgets/team/impl/roles.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base'\r\n], function (_, $, Backbone, base) {\r\n\r\n  var RoleModel = Backbone.Model.extend({\r\n\r\n    constructor: function RoleModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n  var RolesCollection = Backbone.Collection.extend({\r\n    model: RoleModel,\r\n\r\n    constructor: function RolesCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    comparator: function (left, right) {\r\n      return base.localeCompareString(left.get('name'), right.get('name'));\r\n    },\r\n\r\n    // Filter method for the roles collection, used from the two roles lists in the role dialog\r\n    // The method filters the roles for a given value, the filter is done case insensitive (toLowerCase)\r\n    filterList: function (value) {\r\n      if (!_.isUndefined(value) && value.length > 0) {\r\n        var models = this.filter(function (model) {\r\n          var name = model.get('name').toLowerCase();\r\n          return name.indexOf(value.toLowerCase()) > -1;\r\n        });\r\n\r\n        return new Backbone.Collection(models);\r\n      } else {\r\n        return this;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return RolesCollection;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('conws/widgets/team/impl/nls/team.lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\r\n\n","// Defines localizable strings in the default language (English)\r\ncsui.define('conws/widgets/team/impl/nls/root/team.lang',{\r\n  dialogTitle: 'Team',\r\n  noResultsPlaceholder: 'No team configured for this business workspace.',\r\n  zeroRecordsOrFilteredParticipants: 'This business workspace has no participants, or no participants match your search criteria. Add new participants, or clear the search box.',\r\n  zeroRecordsOrFilteredRoles: 'This business workspace has no roles, or no roles match your search criteria. Add new roles, or clear the search box.',\r\n\r\n  searchAria: 'Search for team members',\r\n  expandAria: 'Expand the team widget',\r\n\r\n  participantNameColTitle: 'Name',\r\n  participantAvatarColTitle: 'Avatar',\r\n  participantRolesColTitle: 'Roles',\r\n  participantLoginColTitle: 'Login',\r\n  participantEmailColTitle: 'Business e-mail',\r\n  participantDepartmentColTitle: 'Department',\r\n  participantRrolesColTooltip: 'View or edit participant role memberships',\r\n\r\n  participantStateNew: 'Newly added participant',\r\n\r\n  userRolesDialogTitle: 'Roles for user {0}',\r\n  groupRolesDialogTitle: 'Roles for group {0}',\r\n  rolesAvatarColTitle: 'Avatar',\r\n  rolesNameColTitle: 'Name',\r\n  rolesNameColTooltip: 'View or edit role details',\r\n  rolesNameColTeamLead: 'Team lead',\r\n  rolesNameColInherited: 'Inherited',\r\n  rolesParticipantsColTitle: 'Participants',\r\n  rolesParticipantsColTooltip: 'Participants',\r\n  rolesParticipantsColNoParticipants: 'No participants',\r\n\r\n  rolesDialogAssignedRoles: 'Assigned roles',\r\n  rolesDialogTooltipAssignedRoles: 'assigned roles',\r\n  rolesDialogAvailableRoles: 'Available roles',\r\n  rolesDialogTooltipAvailableRoles: 'available roles',\r\n\r\n  rolesDialogRemoveParticipant1: 'This participant is not a member of any role. A participant with no roles will be removed from the team.',\r\n  rolesDialogRemoveParticipant2: 'You can assign new roles to keep the participant in the team.',\r\n  rolesDialogRemoveParticipantWarning: 'Warning',\r\n  rolesDialogRemoveRole: 'Remove role',\r\n\r\n  rolesDialogButtonClose: 'Close',\r\n  rolesDialogButtonSave: 'Save',\r\n  rolesDialogButtonCancel: 'Cancel',\r\n  rolesDialogButtonReset: 'Reset',\r\n  rolesDialogButtonRemove: 'Remove',\r\n\r\n  rolesEditDialogErrorTitleUser: 'Cannot save roles for user {0}.',\r\n  rolesEditDialogErrorTitleGroup: 'Cannot save roles for group {0}.',\r\n\r\n  rolesEditDialogSuccessfulAdded: 'Roles successfully added:',\r\n  rolesEditDialogSuccessfulRemoved: 'Roles successfully removed:',\r\n  rolesEditDialogNotAdded: 'Roles not added:',\r\n  rolesEditDialogNotRemoved: 'Roles not removed:',\r\n  rolesEditDialogDataNotUptoDateUser: 'Roles for this user have been changed by someone else.',\r\n  rolesEditDialogDataNotUptoDateGroup: 'Roles for this group have been changed by someone else.',\r\n\r\n  searchPlaceholder: 'Search {0}',\r\n  searchIconTooltip: '{0}',\r\n  searchClearIconTooltip: 'Clear filter',\r\n\r\n  roleDetailsTitle: 'Role details',\r\n  roleDetailsName: 'Role name',\r\n  roleDetailsDescription: 'Description',\r\n  roleDetailsPermissions: 'Permissions',\r\n  roleDetailsRead: 'Read',\r\n  roleDetailsWrite: 'Write',\r\n  roleDetailsManage: 'Manage',\r\n  roleDetailsAdvanced: 'Advanced',\r\n\r\n  addParticipantsTitle: 'Add participants',\r\n  addParticipantsRolesHelp: 'All participants must have a role.',\r\n  addParticipantsUserPickerPlaceholder: 'Enter a name.',\r\n  addParticipantsRolePickerPlaceholder: 'Assign the same role to all.',\r\n  addParticipantsRolePickerPlaceholderMore: 'Assign role.',\r\n  addParticipantsRolePickerClear: 'Clear search value',\r\n  addParticipantsRolePickerShow: 'Show available roles',\r\n  addParticipantsSearchAria: 'Search for participants',\r\n  addParticipantsButtonClear: 'Clear all',\r\n  addParticipantsButtonSave: 'Save',\r\n  addParticipantsButtonCancel: 'Cancel',\r\n  addParticipantsDisabledMemberMessage: 'Is already a participant.',\r\n  addParticipantsErrorMessageDefault: 'Cannot add one or more participants.',\r\n  addParticipantsRemove: 'Remove participant',\r\n  removeParticipantAria: 'Remove participant {0}'\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participant.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/nodeconnectable',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  'csui/models/nodechildren',\r\n  'conws/widgets/team/impl/cells/metadata',\r\n  'conws/widgets/team/impl/participants.columns',\r\n  'conws/widgets/team/impl/roles.model',\r\n  'i18n!conws/widgets/team/impl/nls/team.lang'\r\n], function (_, $, Backbone, Url, NodeConnectableModel, NodeChildrenColumnModel,\r\n    NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection, Metadata,\r\n    ParticipantsTableColumnCollection, Roles, lang) {\r\n\r\n  // TODO: ParticipantModel and TeamModel have the same implementation. Refactor to have\r\n  // TODO: a base implementation.\r\n  var ParticipantModel = NodeModel.extend({\r\n\r\n    constructor: function ParticipantModel(attributes, options) {\r\n      NodeModel.prototype.constructor.apply(this, arguments);\r\n      // update the participant attributes\r\n      this.set({\r\n        'conws_participantname': this.displayName(),\r\n        'conws_participantroles': this.displayRoles(),\r\n        'conws_participantlogin': this.displayLogin(),\r\n        'conws_participantemail': this.displayEmail(),\r\n        'conws_participantdepartment': this.displayDepartment()\r\n      });\r\n    },\r\n\r\n    parse: function (response, options) {\r\n      if (!_.isUndefined(options.parse) && options.parse === false) {\r\n        return this;\r\n      }\r\n      this.roles = new Roles(response.roles);\r\n\r\n      return NodeModel.prototype.parse.call(this, response, options);\r\n    },\r\n\r\n    save: function (data, options) {\r\n\r\n      if (!this.collection || !this.collection.node) {\r\n        return;\r\n      }\r\n\r\n      var id = this.collection.node.get('id');\r\n      var url = this.connector.connection.url.replace('/v1', '/v2');\r\n      var memberId = this.get('id');\r\n\r\n      var successRemove = [];\r\n      var errorRemove = [];\r\n      var successAdd = [];\r\n      var errorAdd = [];\r\n\r\n      // add all new roles, which is transformed into an add member call for the role\r\n      _.each(data.add, function (role) {\r\n        var roleId = role.get('id');\r\n        var postUrl = Url.combine(url, 'businessworkspaces', id, 'roles', roleId, 'members');\r\n\r\n        // FormData available (IE10+, WebKit)\r\n        var formData = new FormData();\r\n        formData.append('body', '{\"id\":' + memberId + '}');\r\n\r\n        var options = {\r\n          type: 'POST',\r\n          url: postUrl,\r\n          async: false, // set the call as synchronous, so that one call after the other is done and the results are collected\r\n          data: formData,\r\n          contentType: false,\r\n          processData: false\r\n        };\r\n        this.connector && this.connector.extendAjaxOptions(options);\r\n\r\n        // do the AJAX call\r\n        this.connector.makeAjaxCall(options).done(_.bind(function (response) {\r\n              successAdd.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this))\r\n            .fail(_.bind(function (response) {\r\n              errorAdd.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this));\r\n      }, this);\r\n\r\n      // remove all marked roles, which is transformed into a remove member call for the role\r\n      _.each(data.remove, function (role) {\r\n        var roleId = role.get('id');\r\n        var delUrl = Url.combine(url, 'businessworkspaces', id, 'roles', roleId, 'members',\r\n            memberId);\r\n\r\n        var options = {\r\n          type: 'DELETE',\r\n          url: delUrl,\r\n          async: false // set the call as synchronous, so that one call after the other is done and the results are collected\r\n        };\r\n        this.connector && this.connector.extendAjaxOptions(options);\r\n\r\n        // do the AJAX call\r\n        this.connector.makeAjaxCall(options).done(_.bind(function (response) {\r\n              successRemove.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this))\r\n            .fail(_.bind(function (response) {\r\n              errorRemove.push({\r\n                status: response.status,\r\n                error: undefined,\r\n                role: role\r\n              });\r\n            }, this));\r\n      }, this);\r\n\r\n      // call the registered callbacks\r\n      if (errorAdd.length <= 0 && errorRemove.length <= 0) {\r\n        if (!_.isUndefined(options.success)) {\r\n          options.success({successAdd: successAdd, successRemove: successRemove});\r\n        }\r\n      } else {\r\n        if (!_.isUndefined(options.error)) {\r\n          options.error({\r\n            successAdd: successAdd,\r\n            errorAdd: errorAdd,\r\n            successRemove: successRemove,\r\n            errorRemove: errorRemove\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    displayName: function () {\r\n      return this.get('display_name');\r\n    },\r\n\r\n    displayRoles: function () {\r\n      var ret = this.getLeadingRole();\r\n      if (ret) {\r\n        var indicator = this.getRolesIndicator();\r\n        if (indicator) {\r\n          ret = ret + ' ' + indicator;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    displayLogin: function () {\r\n      var ret = '';\r\n      if (this.getMemberType() === 'user') {\r\n        ret = this.get('name');\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    displayEmail: function () {\r\n      var ret = this.get('business_email');\r\n      if (_.isUndefined(ret) || _.isNull(ret)) {\r\n        ret = '';\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    displayTitle: function () {\r\n      var ret = this.get('title');\r\n      return ret;\r\n    },\r\n\r\n    displayOffice: function () {\r\n      var ret = this.get('office_location');\r\n      return ret;\r\n    },\r\n\r\n    displayDepartment: function () {\r\n      // either the group name is stored in\r\n      // the 'group_name' property, or in the\r\n      // expanded 'group_id' object.\r\n      var ret = this.get('group_name');\r\n      if (_.isUndefined(ret)) {\r\n        var group = this.get('group_id');\r\n        if (_.isObject(group)) {\r\n          ret = group.name;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getLeadingRole: function () {\r\n      var first = '';\r\n      var lead = '';\r\n      var roles = this.roles;\r\n\r\n      if (roles && (roles.length > 0)) {\r\n        first = roles.at(0).get('name');\r\n        roles.each(function (role) {\r\n          if (role.get('leader')) {\r\n            lead = role.get('name');\r\n          }\r\n        });\r\n      }\r\n      return lead || first;\r\n    },\r\n\r\n    canEdit: function () {\r\n      var roles = this.collection.availableRoles;\r\n      var edit = roles.find(function (role) {\r\n        // the role can be edited by the current user and is not inherited from parent\r\n        return (role.get('actions').actionEdit && _.isNull(role.get('inherited_from_id')));\r\n      });\r\n      // exits a role with the edit permission\r\n      return !_.isUndefined(edit);\r\n    },\r\n\r\n    canRemove: function () {\r\n      var roles = this.roles;\r\n      var editable = roles.filter(function (role) {\r\n        // the role can be edited by the current user and is not inherited from parent\r\n        return (role.get('actions').actionEdit && _.isNull(role.get('inherited_from_id')));\r\n      });\r\n      // all participant roles must be editable\r\n      return (roles.length === editable.length);\r\n    },\r\n\r\n    getRolesIndicator: function () {\r\n      var ret = '';\r\n      if (this.roles.length > 1) {\r\n        ret = '+' + (this.roles.length - 1);\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberType: function () {\r\n      var ret = 'user';\r\n      if (this.get('type') !== 0) {\r\n        ret = 'group';\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    // whenever the icon url has changed, trigger model\r\n    // change event\r\n    setIconUrl: function (url) {\r\n      if (this.iconUrl !== url) {\r\n        this.iconUrl = url;\r\n        this.trigger('change', this, this.options);\r\n      }\r\n    },\r\n\r\n    // gets the icon url\r\n    getIconUrl: function () {\r\n      return this.iconUrl;\r\n    }\r\n\r\n  });\r\n\r\n  return ParticipantModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participants.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/mixins/fetchable/fetchable.mixin',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  'csui/models/nodechildren',\r\n  'csui/models/browsable/client-side.mixin',\r\n  'conws/models/workspacecontext/workspacecontext.factory',\r\n  'conws/widgets/team/impl/cells/metadata',\r\n  'conws/widgets/team/impl/participant.model',\r\n  'conws/widgets/team/impl/participants.columns',\r\n  'conws/widgets/team/impl/roles.model',\r\n  'i18n!conws/widgets/team/impl/nls/team.lang',\r\n  'csui/utils/deepClone/deepClone'\r\n], function (_, $, Backbone, base, Url, ConnectableMixin, NodeConnectableMixin, FetchableMixin,\r\n    NodeChildrenColumnModel, NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection,\r\n    ClientSideBrowsableMixin, WorkspaceContextFactory, Metadata, ParticipantModel,\r\n    ParticipantsTableColumnCollection, Roles, lang) {\r\n\r\n  var ParticipantsColumnModel = NodeChildrenColumnModel.extend({\r\n    constructor: function ParticipantsColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  var ParticipantsColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    model: ParticipantsColumnModel,\r\n\r\n    // private\r\n    getColumnModels: function (columnKeys, definitions) {\r\n      // get column collection\r\n      var columns = NodeChildrenColumnCollection.prototype.getColumnModels.call(\r\n          this, columnKeys, definitions);\r\n      // enable sorting for all columns except 'avatar' column.\r\n      _.each(columns, function (column) {\r\n        var columnKey = column['column_key'];\r\n        if (columnKey !== ParticipantsTableColumnCollection.columnNames.avatar) {\r\n          column.sort = true;\r\n        }\r\n      });\r\n      // return\r\n      return columns;\r\n    }\r\n  });\r\n\r\n  // TODO: ParticipantCollection and TeamCollection differ only in the parsing\r\n  // TODO: function. Refactor to have a base implementation.\r\n  var ParticipantCollection = Backbone.Collection.extend({\r\n\r\n        model: ParticipantModel,\r\n\r\n        // a property which contains all available roles\r\n        availableRoles: new Roles(),\r\n\r\n        constructor: function ParticipantCollection(attributes, options) {\r\n          _.defaults(options, {orderBy:  ParticipantsTableColumnCollection.columnNames.name + ' asc'});\r\n          Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n          // Support collection cloning\r\n          if (options) {\r\n            this.options = _.pick(options, ['connector', 'context', 'autoreset', 'node',\r\n              'includeResources', 'fields', 'expand', 'commands']);\r\n          }\r\n          this.makeConnectable(options)\r\n              .makeNodeConnectable(options)\r\n              .makeFetchable(options)\r\n              .makeClientSideBrowsable(options);\r\n          // get workspace context\r\n          if (options !== undefined) {\r\n            if (!options.workspaceContext) {\r\n              options.workspaceContext = options.context.getObject(WorkspaceContextFactory);\r\n            }\r\n            this.workspaceContext = options.workspaceContext;\r\n          }\r\n          this.columns = new ParticipantsColumnCollection();\r\n        },\r\n\r\n        url: function () {\r\n          var id = this.node.get('id');\r\n          var url = this.connector.connection.url.replace('/v1', '/v2');\r\n          return Url.combine(url, 'businessworkspaces', id, 'roles?fields=members');\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var team = {};\r\n          var availableRoles = [];\r\n\r\n          // we don't want empty roles to be displayed in the\r\n          // participants list, so only roles with members are parsed.\r\n          var roles = response.results;\r\n          _.each(roles, function (role, i) {\r\n\r\n            var r = _.clone(role.data.properties);\r\n\r\n            // get the possible actions for the role\r\n            var a = {};\r\n            a.actionDelete = !_.isUndefined(role.actions.data['delete-role']);\r\n            a.actionEdit = !_.isUndefined(role.actions.data['edit-role']);\r\n            // add the actions to the cloned roles object\r\n            r = _.extend({actions: a}, r);\r\n            // add display name to role\r\n            r = _.extend({display_name: r.name}, r);\r\n\r\n            // add all roles to this array\r\n            availableRoles.push(r);\r\n\r\n            var hasMembers = role.data.members.length;\r\n            if (hasMembers) {\r\n              // role has members\r\n              _.each(role.data.members, function (member, j) {\r\n\r\n                var teamMember = team[member.id];\r\n                if (!teamMember) {\r\n                  teamMember = {\r\n                    data: {\r\n                      properties: member\r\n                    },\r\n                    member: member,\r\n                    roles: []\r\n                  };\r\n                  team[member.id] = teamMember;\r\n                }\r\n                teamMember.roles.push(r);\r\n              });\r\n            }\r\n          });\r\n\r\n          // create metadata for custom column models\r\n          var metadata = {\r\n            conws_participantavatar: Metadata.integer(\r\n                ParticipantsTableColumnCollection.columnNames.avatar,\r\n                lang.participantAvatarColTitle),\r\n            conws_participantname: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.name,\r\n                lang.participantNameColTitle),\r\n            conws_participantroles: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.roles,\r\n                lang.participantRolesColTitle),\r\n            conws_participantlogin: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.login,\r\n                lang.participantLoginColTitle),\r\n            conws_participantemail: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.email,\r\n                lang.participantEmailColTitle),\r\n            conws_participantdepartment: Metadata.string(\r\n                ParticipantsTableColumnCollection.columnNames.department,\r\n                lang.participantDepartmentColTitle)\r\n          };\r\n\r\n          // create column models\r\n          this.columns && this.columns.resetCollection(\r\n              this.columns.getColumnModels(_.keys(metadata), metadata), this.options);\r\n\r\n          // build a roles model with all available roles\r\n          this.availableRoles = new Roles(availableRoles);\r\n\r\n          // return team\r\n          return _.values(team);\r\n        },\r\n\r\n        clone: function () {\r\n          // Provide the options; they may include connector and other parameters\r\n          var clone = new this.constructor(this.models, this.options);\r\n          // Clone sub-models not covered by Backbone\r\n          if (this.columns) {\r\n            clone.columns.reset(this.columns.toJSON());\r\n          }\r\n          // Clone properties about the full (not-yet fetched) collection\r\n          clone.actualSkipCount = this.actualSkipCount;\r\n          clone.totalCount = this.totalCount;\r\n          clone.filteredCount = this.filteredCount;\r\n          return clone;\r\n        },\r\n\r\n        addNewParticipant: function (model) {\r\n          // clone the model, as otherwise strange behaviour can occur when\r\n          // saving the model the same time. E.g. the add participant dialog\r\n          // doesn't close after safe.\r\n          // We do not know the exact cause, but cloning helps ;-)\r\n          var clone = model.clone();\r\n\r\n          var exist = false;\r\n          if (!_.isUndefined(this.newParticipants) && this.newParticipants.length > 0) {\r\n            for (var participant in this.newParticipants) {\r\n              if (this.newParticipants[participant].get('id') === clone.get('id')) {\r\n                exist = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (!exist) {\r\n            clone.set({isNew: true});\r\n            this.newParticipants.push(clone);\r\n          }\r\n        },\r\n\r\n        setNewParticipant: function () {\r\n          if (!_.isUndefined(this.newParticipants) && this.newParticipants.length > 0) {\r\n            for (var participant in this.newParticipants) {\r\n              for (var item in this.models) {\r\n                if (this.models[item].get('id') ===\r\n                    this.newParticipants[participant].get('id')) {\r\n                  this.models[item].set({isNew: true});\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n  );\r\n  ClientSideBrowsableMixin.mixin(ParticipantCollection.prototype);\r\n  ConnectableMixin.mixin(ParticipantCollection.prototype);\r\n  NodeConnectableMixin.mixin(ParticipantCollection.prototype);\r\n  FetchableMixin.mixin(ParticipantCollection.prototype);\r\n  return ParticipantCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/participants.model.factory',['module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/team/impl/participants.model',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (module, _, Backbone, CollectionFactory, NodeModelFactory, ConnectorFactory, ParticipantCollection) {\r\n  'use strict';\r\n    var ParticipantCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'participants',\r\n\r\n        constructor: function ParticipantCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var participants = this.options.participants || {};\r\n            if (!(participants instanceof Backbone.Collection)) {\r\n                var node = context.getModel(NodeModelFactory, options),\r\n                    connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n\r\n                participants = new ParticipantCollection(participants.models, _.extend({\r\n                    context: context,\r\n                    node: node,\r\n                    connector: connector\r\n                }, participants.options, config.options,\r\n                    ParticipantCollectionFactory.getDefaultResourceScope(), {\r\n                      autoreset: true\r\n                    }));\r\n            }\r\n            this.property = participants;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n    }, {\r\n      getDefaultResourceScope: function () {\r\n        return _.deepClone({\r\n          // Return only assignment-specific properties\r\n          fields: {\r\n            properties: [],\r\n            'versions.element(0)': []\r\n          },\r\n          // User information needs to be resolved to support UI and actions.\r\n          expand: {\r\n            properties: []\r\n          },\r\n          // Get property definitions to support table columns or similar\r\n          // and actions to support clickability and others\r\n          includeResources: ['metadata']\r\n        });\r\n      }\r\n    });\r\n\r\n    return ParticipantCollectionFactory;\r\n});\r\n\r\n\n","csui.define('conws/widgets/team/impl/roles.model.expanded',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/base',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/mixins/fetchable/fetchable.mixin',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/node/node.model',\r\n  'csui/models/nodechildren',\r\n  'csui/models/browsable/client-side.mixin',\r\n  'conws/widgets/team/impl/cells/metadata',\r\n  'conws/widgets/team/impl/roles.columns',\r\n  'conws/widgets/team/impl/participant.model',\r\n  'i18n!conws/widgets/team/impl/nls/team.lang'\r\n], function (_, $, Backbone, base, Url, ConnectableMixin, NodeConnectableMixin, FetchableMixin,\r\n    NodeChildrenColumnModel, NodeChildrenColumnCollection, NodeModel, NodeChildrenCollection,\r\n    ClientSideBrowsableMixin, Metadata, RolesTableColumnCollection, ParticipantModel, lang) {\r\n\r\n  var RolesColumnModel = NodeChildrenColumnModel.extend({\r\n    constructor: function RolesColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  var RolesColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    model: RolesColumnModel,\r\n\r\n    // private\r\n    getColumnModels: function (columnKeys, definitions) {\r\n      // get column collection\r\n      var columns = NodeChildrenColumnCollection.prototype.getColumnModels.call(\r\n          this, columnKeys, definitions);\r\n      // enable sorting for all columns except 'avatar' column.\r\n      _.each(columns, function (column) {\r\n        var columnKey = column['column_key'];\r\n        if (columnKey !== RolesTableColumnCollection.columnNames.avatar) {\r\n          column.sort = true;\r\n        }\r\n      });\r\n      // return\r\n      return columns;\r\n    }\r\n  });\r\n\r\n  // TODO: RolesModel and TeamModel have the same implementation. Refactor to have\r\n  // TODO: a base implementation.\r\n  var RoleModel = NodeModel.extend({\r\n\r\n    constructor: function RoleModel(attributes, options) {\r\n      NodeModel.prototype.constructor.apply(this, arguments);\r\n      // update the role attributes\r\n      this.set({\r\n        'conws_rolename': this.displayName(),\r\n        'conws_rolemembers': this.displayMembers()\r\n      });\r\n    },\r\n\r\n    url: function () {\r\n      var wid = this.collection && this.collection.node && this.collection.node.get('id');\r\n      var rid = this.get('id');\r\n      var url = this.connector.connection.url.replace('/v1', '/v2');\r\n      return Url.combine(url, 'businessworkspaces', wid, 'roles', rid);\r\n    },\r\n\r\n    parse: function (response, options) {\r\n\r\n      var self = this;\r\n      // members\r\n      var col = new Backbone.Collection();\r\n\r\n      // comperator for members collection using the display name\r\n      col.comparator = function (m1, m2) {\r\n        var ret1 = m1.get('display_name');\r\n        var ret2 = m2.get('display_name');\r\n\r\n        return ret1.localeCompare(ret2);\r\n      }\r\n\r\n      _.each(response.data.members, function (m) {\r\n        var mm = new ParticipantModel(m, options);\r\n        col.push(mm);\r\n      });\r\n\r\n      // sort the members collection for the role\r\n      col.sort();\r\n\r\n      this.members = col;\r\n      // parse\r\n      return NodeModel.prototype.parse.call(this, response, options);\r\n    },\r\n\r\n    displayName: function () {\r\n      var ret = this.get('display_name');\r\n      return ret;\r\n    },\r\n\r\n    displayMembers: function () {\r\n      var ret = this.getLeadingMember();\r\n      if (ret) {\r\n        var indicator = this.getMembersIndicator();\r\n        if (indicator) {\r\n          ret = ret + ' ' + indicator;\r\n        }\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getLeadingMember: function () {\r\n      var first = '';\r\n      if (this.members && this.members.length > 0) {\r\n        first = this.getMemberName(this.members.at(0));\r\n      }\r\n      return first;\r\n    },\r\n\r\n    getMembersIndicator: function () {\r\n      var ret = '';\r\n      if (this.members.length > 1) {\r\n        ret = '+' + (this.members.length - 1);\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberName: function (member) {\r\n      var ret = '';\r\n      if (member) {\r\n        ret = member.get('display_name') ? member.get('display_name') : member.get('name');\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getMemberType: function () {\r\n      return 'role';\r\n    },\r\n\r\n    // whenever the icon url has changed, trigger model\r\n    // change event\r\n    setIconUrl: function (url) {\r\n      if (this.iconUrl !== url) {\r\n        this.iconUrl = url;\r\n        this.trigger('change', this, this.options);\r\n      }\r\n    },\r\n\r\n    // gets the icon url\r\n    getIconUrl: function () {\r\n      return this.iconUrl;\r\n    },\r\n\r\n    // evaluates the 'delete-role' action and returns\r\n    // true if available\r\n    canDelete: function () {\r\n      return (this.actions.get('delete-role') !== undefined);\r\n    }\r\n  });\r\n\r\n  // TODO: RoleCollection and TeamCollection differ only in the parsing\r\n  // TODO: function. Refactor to have a base implementation.\r\n  var RoleCollection = Backbone.Collection.extend({\r\n\r\n        model: RoleModel,\r\n\r\n        constructor: function RoleCollection(attributes, options) {\r\n          _.defaults(options, {orderBy:  RolesTableColumnCollection.columnNames.name + ' asc'});\r\n          Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n          this.context = options && options.context ? options.context : undefined;\r\n          // Support collection cloning\r\n          if (options) {\r\n            this.options = _.pick(options, ['connector', 'context', 'autoreset', 'node',\r\n              'includeResources', 'fields', 'expand', 'commands']);\r\n          }\r\n          this.makeConnectable(options)\r\n              .makeNodeConnectable(options)\r\n              .makeFetchable(options)\r\n              .makeClientSideBrowsable(options);\r\n\r\n          this.columns = new RolesColumnCollection();\r\n        },\r\n\r\n        clone: function () {\r\n          // Provide the options; they may include connector and other parameters\r\n          var clone = new this.constructor(this.models, this.options);\r\n          // Clone sub-models not covered by Backbone\r\n          if (this.columns) {\r\n            clone.columns.reset(this.columns.toJSON());\r\n          }\r\n          // Clone properties about the full (not-yet fetched) collection\r\n          clone.actualSkipCount = this.actualSkipCount;\r\n          clone.totalCount = this.totalCount;\r\n          clone.filteredCount = this.filteredCount;\r\n          return clone;\r\n        },\r\n\r\n        url: function () {\r\n          var id = this.node.get('id');\r\n          var url = this.connector.connection.url.replace('/v1', '/v2');\r\n          return Url.combine(url, 'businessworkspaces', id, 'roles?fields=members');\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          // roles\r\n          var roles = response.results;\r\n          _.each(roles, function (role) {\r\n            // add display name to role\r\n            role.data.properties = _.extend({display_name: role.data.properties.name},\r\n                role.data.properties);\r\n          });\r\n\r\n          // create metadata for custom column models\r\n          var metadata = {\r\n            conws_roleavatar: Metadata.integer(\r\n                RolesTableColumnCollection.columnNames.avatar, lang.rolesAvatarColTitle),\r\n            conws_rolename: Metadata.string(\r\n                RolesTableColumnCollection.columnNames.name, lang.rolesNameColTitle),\r\n            conws_rolemembers: Metadata.string(\r\n                RolesTableColumnCollection.columnNames.roles, lang.rolesParticipantsColTitle)\r\n          };\r\n\r\n          // create column models\r\n          this.columns && this.columns.resetCollection(\r\n              this.columns.getColumnModels(_.keys(metadata), metadata), this.options);\r\n\r\n          // return roles\r\n          return roles;\r\n        }\r\n      }\r\n  );\r\n  ClientSideBrowsableMixin.mixin(RoleCollection.prototype);\r\n  ConnectableMixin.mixin(RoleCollection.prototype);\r\n  NodeConnectableMixin.mixin(RoleCollection.prototype);\r\n  FetchableMixin.mixin(RoleCollection.prototype);\r\n  return RoleCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/team/impl/roles.model.factory',['module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/team/impl/roles.model.expanded'\r\n], function (module, _, Backbone, CollectionFactory, NodeModelFactory, ConnectorFactory, RolesCollection) {\r\n\r\n    var RoleCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'roles',\r\n\r\n        constructor: function RoleCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var roles = this.options.roles || {};\r\n            if (!(roles instanceof Backbone.Collection)) {\r\n                var node = context.getModel(NodeModelFactory, options),\r\n                    connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n\r\n                roles = new RolesCollection(roles.models, _.extend({\r\n                    context: context,\r\n                    node: node,\r\n                    connector: connector\r\n                }, roles.options, config.options, {\r\n                    autoreset: true\r\n                }));\r\n            }\r\n            this.property = roles;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n    });\r\n\r\n    return RoleCollectionFactory;\r\n});\r\n\n","csui.define('conws/widgets/team/impl/controls/filter/impl/filter.model',[\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone'\r\n], function ($, _, Backbone) {\r\n\r\n  var FilterModel = Backbone.Model.extend({\r\n\r\n    defaults: {\r\n      // the filter header control caption\r\n      caption: '',\r\n      // the tooltip for the filter control\r\n      tooltip: '',\r\n      // the filter value\r\n      filter: '',\r\n      // defines whether the filter elements are active or not\r\n      active: true,\r\n      // defines whether the search box is visible or not\r\n      showSearch: false\r\n    },\r\n\r\n    constructor: function FilterModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  // return the model\r\n  return FilterModel;\r\n\r\n});\r\n\r\n\n","csui.define('conws/models/categoryforms/categoryforms.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n    \"csui/utils/log\", \"csui/utils/base\", 'csui/utils/url',\r\n    \"csui/models/appliedcategoryform\",\r\n    'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n    'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function (module, $, _, Backbone, log, base, Url, AppliedCategoryFormModel,\r\n    NodeConnectableMixin, FetchableMixin) {\r\n\r\n    \"use strict\";\r\n\r\n    var CategoryFormCollection = Backbone.Collection.extend({\r\n\r\n        constructor: function CategoryFormCollection(models, options) {\r\n\r\n            this.isReadOnly = true;\r\n            this.options = options;\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.makeNodeConnectable(options);\r\n            this.makeFetchable(options);\r\n        },\r\n\r\n        sync: function (method, model, options) {\r\n\r\n            if (method === 'read') {\r\n                if (this.node.get(\"id\")) {\r\n                    options.categoryFilter = this.options.categoryFilter;\r\n                    return this._getMetadataForms(method, model, options);\r\n                }\r\n            } else {\r\n                // create/delete/update\r\n                return Backbone.Collection.prototype.sync.apply(this, arguments);\r\n            }\r\n\r\n        },\r\n\r\n        // Get metadata forms for an existing node\r\n        _getMetadataForms: function (method, model, options) {\r\n\r\n            var deferred = $.Deferred();\r\n\r\n            model.trigger('request', model, undefined, options);\r\n\r\n            // filter categories to be fetched\r\n            var categoryFilter = options.categoryFilter;\r\n\r\n            // fetch categories\r\n            var node = this.node;\r\n            var catsUrl = Url.combine(node.urlBase(), 'categories');\r\n            this.connector.makeAjaxCall(this.connector.extendAjaxOptions({\r\n                type: 'GET',\r\n                url: catsUrl\r\n            }))\r\n                .done(_.bind(function (data) {\r\n\r\n                    // get read-only flag\r\n                    var actionsUrl = Url.combine(node.urlBase(), 'categories/actions');\r\n                    this.connector.makeAjaxCall(this.connector.extendAjaxOptions({\r\n                        type: 'GET',\r\n                        url: actionsUrl\r\n                    }))\r\n                        .done(_.bind(function (data2) {\r\n\r\n                            this.isReadOnly = data2.data === null || !data2.data.hasOwnProperty(\"categories_add\");\r\n\r\n                            // have categories -> fetch forms\r\n                            var promises = [],\r\n                                forms = [];\r\n\r\n                            // category form models\r\n                            _.each(data.data, function (curCategory) {\r\n                                if (!categoryFilter || _.contains(categoryFilter, curCategory.id)) {\r\n                                    var nodeId = node.get('id');\r\n                                    var categoryId = curCategory.id;\r\n                                    var catModel = new AppliedCategoryFormModel({\r\n                                        id: curCategory.id,\r\n                                        title: curCategory.name,\r\n                                        allow_delete: true\r\n                                    }, {\r\n                                        node: node,\r\n                                        categoryId: categoryId,\r\n                                        action: 'update'\r\n                                    });\r\n                                    if (this.options.reset || this.options.autoreset) {\r\n                                        forms.push(catModel);\r\n                                    } else {\r\n                                        this.add(catModel);\r\n                                    }\r\n                                    promises.push(catModel.fetch());\r\n                                }\r\n                            }, this);\r\n\r\n                            $.when.apply($, promises).then(\r\n                                _.bind(function () {\r\n                                    if (options.success) {\r\n                                        options.success(forms, 'success');\r\n                                    }\r\n                                    deferred.resolve();\r\n                                }, this),\r\n                                _.bind(function () {\r\n                                    if (options.error) {\r\n                                        options.error.apply(options.error, arguments);\r\n                                    }\r\n                                    deferred.reject();\r\n                                }));\r\n\r\n                        }, this))\r\n                        .fail(_.bind(function () {\r\n                            deferred.reject();\r\n                        }, this));\r\n\r\n                }, this))\r\n                .fail(_.bind(function () {\r\n                    deferred.reject();\r\n                }, this));\r\n\r\n            return deferred.promise();\r\n\r\n        },\r\n\r\n    });\r\n\r\n    NodeConnectableMixin.mixin(CategoryFormCollection.prototype);\r\n    FetchableMixin.mixin(CategoryFormCollection.prototype);\r\n\r\n    return CategoryFormCollection;\r\n\r\n});\r\n\n","csui.define('conws/models/selectedmetadataform/selectedmetadataform.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n    'csui/utils/url', 'csui/utils/base',\r\n    'conws/models/categoryforms/categoryforms.model'\r\n], function (module, $, _, Backbone, Url, BaseUtils, CategoryFormCollection) {\r\n\r\n    \"use strict\";\r\n\r\n  function updateData(groupNames,data,changes) {\r\n    _.each(groupNames,function(groupId){\r\n      if (data[groupId]) {\r\n        updateData(groupNames,data[groupId],changes);\r\n      }\r\n    });\r\n    _.each(changes,function(value,propertyId){\r\n      // should not occur, that a propertyId starts with the group prefix.\r\n      // but for safety, we check it, and do nothing if it occurs.\r\n      if (propertyId.indexOf(\"conwsgroup_\")<0) {\r\n        if (data.hasOwnProperty(propertyId)) {\r\n          data[propertyId] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n    var SelectedMetadataFormModel = Backbone.Model.extend({\r\n\r\n        constructor: function SelectedMetadataFormModel(attributes, options) {\r\n\r\n            this.node = options.node;\r\n\r\n            if(options.metadataConfig) {\r\n                this.metadataConfig = options.metadataConfig.metadata;\r\n                this.hideEmptyFields = options.metadataConfig.hideEmptyFields || false;\r\n                this.isReadOnly = options.metadataConfig.readonly ? true : false;\r\n            }\r\n\r\n            this.categoryForms = this.metadataConfig && new CategoryFormCollection(undefined, {\r\n                    node: options.node,\r\n                    autofetch: true,\r\n                    autoreset: true,\r\n                    categoryFilter: this._createCategoryFilter(this.metadataConfig)\r\n                });\r\n\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n            this.categoryForms && this.listenTo(this.categoryForms, 'reset', function () {\r\n                this.update(this.metadataConfig);\r\n            });\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.categoryForms && this.categoryForms.fetch(options)\r\n                    .done(_.bind(this._saveData,this));\r\n        },\r\n\r\n        _getChanges: function (catModel) {\r\n            var changes = catModel.get(\"data\");\r\n            var schema = catModel.get(\"schema\");\r\n            var options = catModel.get('options');\r\n            var key;\r\n\r\n            // workaround for LPAD-47456: set value of hidden string fields\r\n            // to \"\" instead of null\r\n            for (key in options.fields) {\r\n                if(options.fields[key].hidden === true) {\r\n                    if(schema.properties[key].type === 'string') {\r\n                        if(key in changes && changes[key] === null) {\r\n                            changes[key] = \"\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return changes;\r\n        },\r\n\r\n        _createCategoryFilter: function (config) {\r\n            var categoryFilter = [];\r\n            _.each(config, function (configElement) {\r\n                if (configElement.type === \"attribute\" || configElement.type === \"category\") {\r\n                    if (!_.contains(categoryFilter, configElement.categoryId)) {\r\n                        categoryFilter.push(configElement.categoryId);\r\n                    }\r\n                } else if (configElement.type === \"group\") {\r\n                    var innerCategoryFilter = this._createCategoryFilter(configElement.attributes);\r\n                    _.each(innerCategoryFilter, function (innerCategory) {\r\n                        if (!_.contains(categoryFilter, innerCategory)) {\r\n                            categoryFilter.push(innerCategory);\r\n                        }\r\n                    })\r\n                }\r\n            }, this);\r\n            return categoryFilter;\r\n        },\r\n\r\n      _saveData: function() {\r\n        function flatten(groupNames,oldData,data) {\r\n          _.each(groupNames,function(groupId) {\r\n            var groupData = data[groupId];\r\n            if (groupData) {\r\n              delete data[groupId];\r\n              flatten(groupNames,oldData,groupData);\r\n              _.extend(oldData,groupData);\r\n            }\r\n          });\r\n        }\r\n        var data = this.get(\"data\");\r\n        this.oldData = data? JSON.parse(JSON.stringify(data)) : {};\r\n        flatten(this.groupNames,this.oldData,this.oldData);\r\n      },\r\n\r\n      restoreData: function (changes) {\r\n        var restore = _.pick(this.oldData,_.keys(changes));\r\n        restore = JSON.parse(JSON.stringify(restore));\r\n        updateData(this.groupNames,this.get(\"data\"),restore);\r\n        return restore;\r\n      },\r\n\r\n      updateData: function (changes) {\r\n          updateData(this.groupNames,this.get(\"data\"),changes);\r\n          this._saveData();\r\n        },\r\n\r\n      update: function (config) {\r\n\r\n        // Initialize backbone model with empty objects - will be filled afterwards\r\n        var data = {};\r\n        var schema = {properties: {}};\r\n        var options = {fields: {}};\r\n\r\n        // Provide easy access to backbone model\r\n        var destinationModel = {\r\n          data: data,\r\n          properties: schema.properties,\r\n          fields: options.fields,\r\n\t\t  title:\"\"\r\n        };\r\n\r\n        this.groupCnt = 1;\r\n        this.groupNames = [];\r\n\r\n        this._fillModel(config, destinationModel);\r\n        this.set({data: data, schema: schema, options: options}); // triggers change event\r\n        this._saveData();\r\n      },\r\n\r\n        _fillModel: function (config, destinationModel, prefix) {\r\n            // Iterate over all metadata sections of widget configuration\r\n            _.each(config, function (configElement) {\r\n                if (configElement.type === \"attribute\") { // Single attribute row\r\n                    this._createAttribute(configElement, destinationModel, prefix);\r\n                } else if (configElement.type === \"category\") {  // All attributes of a category\r\n                    this._createCategory(configElement, destinationModel, prefix);\r\n                } else if (configElement.type === \"group\") { // Group of attributes\r\n                    // Create an artifact using set schema, as expected by FormView\r\n                    var groupId = \"conwsgroup_\" + this.groupCnt++; // Define a unique group name\r\n\t\t\t\t\tvar groupName = configElement.label;\r\n                    this.groupNames.push(groupId);\r\n                    var innerData = {};\r\n                    var innerProperties = {properties: {}};\r\n                    var innerFields = {\r\n                        label: BaseUtils.getClosestLocalizedString(configElement.label, \"Undefined\"),\r\n                        fields: {}\r\n                    };\r\n                    var innerDestinationModel = {\r\n                        data: innerData,\r\n                        properties: innerProperties.properties,\r\n                        fields: innerFields.fields,\r\n\t\t\t\t\t\ttitle:\"\"\r\n                    };\r\n                    this._fillModel(configElement.attributes, innerDestinationModel, groupName);\r\n                    if (!_.isEmpty(innerData)) { // empty groups are hidden\r\n\t\t\t\t\t\t// instead of using groupId we are now using group name\r\n                        destinationModel.data[groupName] = innerData;\r\n                        destinationModel.properties[groupName] = innerProperties;\r\n                        destinationModel.fields[groupName] = innerFields;\r\n                    }\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _createAttribute: function (configElement, destinationModel, prefix) {\r\n            var fieldId = configElement.categoryId + \"_\" + configElement.attributeId;\r\n            _.each(this.categoryForms.models, function (modelElement) {\r\n                if (configElement.categoryId === modelElement.id) {\r\n                    var sourceModel;\r\n                    if (configElement.columnId) {\r\n                        var setType = modelElement.attributes.schema.properties[fieldId].type;\r\n                        if (setType === \"object\") { // single-row set\r\n                            var subFieldId = fieldId + \"_1_\" + configElement.columnId;\r\n                            sourceModel = {\r\n                                data: modelElement.attributes.data[fieldId],\r\n                                properties: modelElement.attributes.schema.properties[fieldId].properties,\r\n                                fields: modelElement.attributes.options.fields[fieldId].fields\r\n                            };\r\n                            this._createRow(subFieldId, configElement, destinationModel, sourceModel, prefix);\r\n                        } else if (setType === \"array\") { // multi-row set (has a different, more complex structure)\r\n                            var subFieldId = fieldId + \"_x_\" + configElement.columnId;\r\n                            sourceModel = {\r\n                                data: modelElement.attributes.data[fieldId][0],\r\n                                properties: modelElement.attributes.schema.properties[fieldId].items.properties,\r\n                                fields: modelElement.attributes.options.fields[fieldId].fields.item.fields\r\n                            };\r\n                            this._createRow(subFieldId, configElement, destinationModel, sourceModel, prefix);\r\n                        }\r\n                    } else {\r\n                        sourceModel = {\r\n                            data: modelElement.attributes.data,\r\n                            properties: modelElement.attributes.schema.properties,\r\n                            fields: modelElement.attributes.options.fields\r\n                        };\r\n                        this._createRow(fieldId, configElement, destinationModel, sourceModel, prefix);\r\n                    }\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _createCategory: function (configElement, destinationModel, prefix) {\r\n            _.each(this.categoryForms.models, function (modelElement) {\r\n                if (configElement.categoryId === modelElement.id) {\r\n                    var sourceModel = {\r\n                        data: modelElement.attributes.data,\r\n                        properties: modelElement.attributes.schema.properties,\r\n                        fields: modelElement.attributes.options.fields,\r\n\t\t\t\t\t\ttitle: modelElement.attributes.title\r\n                    };\r\n                    _.each(modelElement.attributes.data, function (fieldElement, fieldIndex) {\r\n                        this._createRow(fieldIndex, configElement, destinationModel, sourceModel, prefix);\r\n                    }, this);\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _createRow: function (fieldId, config, destinationModel, sourceModel, prefix) {\r\n\t\t\tvar fieldVal = sourceModel.data[fieldId],\r\n\t\t\t\tprop \t = sourceModel.properties[fieldId],\r\n\t\t\t\tfield \t = sourceModel.fields[fieldId],\r\n\t\t\t\tkey;\r\n\t\t\tif (!this.hideEmptyFields || !this._isEmpty(fieldVal)) {\r\n\t\t\t\tdestinationModel.data[fieldId] = fieldVal;\r\n\t\t\t\tdestinationModel.properties[fieldId] = prop;\r\n\t\t\t\tdestinationModel.fields[fieldId] = field;\r\n\t\t\t\tif (config.label) {\r\n\t\t\t\t\tdestinationModel.fields[fieldId].label =\r\n\t\t\t\t\t\tBaseUtils.getClosestLocalizedString(config.label, \"Undefined\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this.isReadOnly === true || this.categoryForms.isReadOnly === true || config.readOnly === true) {\r\n\t\t\t\t\tdestinationModel.properties[fieldId].readonly = true;\r\n\t\t\t\t\tdestinationModel.fields[fieldId].readonly = true;\r\n\t\t\t\t\t// if this is a Set attribute (contains an 'items' member) the readonly=true\r\n\t\t\t\t\t// is propagated down to the members of the Set attribute\r\n\t\t\t\t\tif('items' in prop) {\r\n\t\t\t\t\t\tfor(key in prop.items.properties) {\r\n\t\t\t\t\t\t\tprop.items.properties[key].readonly = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('properties' in prop) {\r\n\t\t\t\t\t\tfor(key in prop.properties) {\r\n\t\t\t\t\t\t\tprop.properties[key].readonly = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif('fields' in field) {\r\n\t\t\t\t\t\tfor(key in field.fields) {\r\n\t\t\t\t\t\t\tfield.fields[key].readonly = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n        _isEmpty: function (val) {\r\n            if (val === null || val === undefined || val === \"\")\r\n                return true;\r\n            var uniqueElements = _.uniq(_.values(val));\r\n            if (uniqueElements.length > 0) {\r\n                var allEmpty = true;\r\n                for (var i = 0; i < uniqueElements.length; i++) {\r\n                    if (!this._isEmpty(uniqueElements[i])) {\r\n                        allEmpty = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (allEmpty) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        _removeGroupPrefix: function(path, prefix) {\r\n            var modifiedPath = path;\r\n            _.each(this.groupNames, function(groupName) {\r\n                var actGroupName = (prefix || \"\") + groupName;\r\n                if (modifiedPath.indexOf(actGroupName) == 0) {\r\n                    modifiedPath = modifiedPath.substr(actGroupName.length);\r\n                    if (modifiedPath[0] == '_') {\r\n                        modifiedPath = modifiedPath.substr(1);\r\n                    }\r\n                }\r\n            }, this);\r\n            return modifiedPath;\r\n        }\r\n\r\n    });\r\n\r\n    return SelectedMetadataFormModel;\r\n\r\n});\r\n\n","csui.define('conws/models/selectedmetadataform/selectedmetadataform.factory',[\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/node',\r\n    'conws/models/categoryforms/categoryforms.model',\r\n    'conws/models/selectedmetadataform/selectedmetadataform.model'\r\n], function (ModelFactory, NodeModelFactory, CategoryFormCollection, SelectedMetadataFormModel) {\r\n\r\n    var SelectedMetadataFormFactory = ModelFactory.extend({\r\n\r\n        // unique prefix for the metadata model instance.\r\n        propertyPrefix: 'metadata',\r\n\r\n        constructor: function SelectedMetadataFormFactory(context, options) {\r\n\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var node = context.getModel(NodeModelFactory);\r\n            this.property = new SelectedMetadataFormModel(undefined, {\r\n                node: node,\r\n                metadataConfig: options[this.propertyPrefix].metadataConfig,\r\n                autofetch: true,\r\n                autoreset: true\r\n            });\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            // fetch the model contents exposed by this factory.\r\n            return this.property.fetch(options);\r\n        }\r\n    });\r\n\r\n    return SelectedMetadataFormFactory;\r\n});\r\n\n","/**\r\n * Created by stefang on 11.12.2015.\r\n */\r\ncsui.define('conws/utils/workspaces/impl/workspaceutil',[\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore'\r\n], function ($, _, Backbone, NodeModel) {\r\n\r\n  function WorkspaceUtil () {}\r\n\r\n  _.extend(WorkspaceUtil.prototype,{\r\n\r\n    orderByAsString: function (orderBy,defCol,defOrd) {\r\n      var sc;\r\n\r\n      var ret, order = {sc:defCol, so:defOrd};\r\n      if (orderBy) {\r\n        order = _.defaults({sc:orderBy.sortColumn,so:orderBy.sortOrder},order);\r\n      }\r\n      // strip curly braces from sortColumn\r\n      if (order.sc) {\r\n        // syntax of the sortColumn is to be checked in the constructors, so no need to\r\n        // raise a message here\r\n        var parameterPlaceholder = /{([^:}]+)(:([^}]+))?}/g;\r\n        var match = parameterPlaceholder.exec(order.sc);\r\n        if (match) {\r\n          order.sc = match[1];\r\n        } else {\r\n          order.sc = undefined;\r\n        }\r\n      }\r\n      // if one of column or order is defined, then we must deliver something defined\r\n      if (order.sc || order.so) {\r\n        // and use a constant default, if one is undefined\r\n        ret = _.str.sformat(\"{0} {1}\", order.sc?order.sc:\"name\", order.so?order.so:\"asc\");\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    getFilterValueString: function(colattrs,colvalue,allowempty) {\r\n      var format = filter_map[type_key(colattrs.type)];\r\n      if (!format) {\r\n        if (allowempty) {\r\n          return undefined;\r\n        }\r\n        format = \"{0}\";\r\n      }\r\n      return _.str.sformat(format,colvalue);\r\n    },\r\n\r\n    getFormFieldTemplate: function (colattrs) {\r\n      // currently only support text fields (CWS-5783) in search form.\r\n      if (colattrs.type!==-1) {\r\n        return undefined;\r\n      }\r\n      return template_map[type_key(colattrs.type,colattrs.persona)] || template_map[type_key(colattrs.type)];\r\n    }\r\n\r\n  });\r\n\r\n  function type_key(type,persona) {\r\n    return [type,persona].toString();\r\n  }\r\n\r\n  var filter_map = {};\r\n  filter_map[type_key(-1,\"\")] = \"contains_{0}\";\r\n\r\n  var template_map = {};\r\n  template_map[type_key(-1,\"\")] = {\r\n    // normal text attribute\r\n    options: { type: \"text\"},\r\n    schema: { type: \"string\" } };\r\n  template_map[type_key(2,\"\")] =  {\r\n    // normal integer, like size and others\r\n    options: { type: \"integer\" },\r\n    schema: { type: \"integer\" }\r\n  };\r\n    undefined; \r\n  template_map[type_key(2,\"node\")] =\r\n    // node picker\r\n    undefined/*= not supported */; \r\n  template_map[type_key(2,\"user\")] = {\r\n    // user picker\r\n    options: {\r\n      \"type\": \"otcs_user_picker\",\r\n      \"type_control\": {\r\n        \"action\": \"api/v1/members\",\r\n        \"method\": \"GET\",\r\n        \"name\": \"user001\",\r\n        \"parameters\": {\r\n          \"filter_types\": [\r\n            0\r\n          ],\r\n          \"select_types\": [\r\n            0\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    schema: {\r\n      \"type\": \"otcs_user_picker\"\r\n    }\r\n  };\r\n  template_map[type_key(14,\"user\")] = template_map[type_key(2,\"user\")];\r\n  template_map[type_key(-7,\"\")] = {\r\n    // date attribute\r\n    options: { type: \"date\" },\r\n    schema: { type: \"string\" }\r\n  };\r\n  template_map[type_key(5,\"\")] = {\r\n    // boolean attribute\r\n    options: { type: \"checkbox\" },\r\n    schema: { type: \"boolean\" }\r\n  };\r\n\r\n  return new WorkspaceUtil();\r\n});\r\n\n","/**\r\n * The workspaces model for fetching the workspaces from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n *   - Fetch custom attributes (categories)\r\n *   - Provide Workspace type icon\r\n */\r\ncsui.define('conws/utils/workspaces/workspace.model',[\r\n  'module',\r\n  'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, NodeModel) {\r\n\r\n  var WorkspaceModel = NodeModel.extend({\r\n\r\n    constructor: function WorkspaceModel(attributes, options) {\r\n      // The connector needs to be passed to teh NodeModel constructor\r\n      // to be processed correctly\r\n      options || (options = {});\r\n      if (!options.connector) {\r\n        options.connector = options.collection && options.collection.connector || undefined;\r\n      }\r\n\r\n      NodeModel.prototype.constructor.call(this, attributes, options);\r\n    },\r\n\r\n    // Set id attribute to support endless scrolling\r\n    // Needed to support compare workspaces and add workspaces to a existing collection\r\n    idAttribute: 'id',\r\n\r\n    // Parse one workspace and add category properties\r\n    parse: function (response, options) {\r\n      var node = NodeModel.prototype.parse.call(this, response, options);\r\n\r\n      // Add container attribute that core ui allow browse\r\n      if (!node.container) {\r\n        node.container = true;\r\n      }\r\n\r\n      return node;\r\n    }\r\n\r\n  });\r\n\r\n  return WorkspaceModel;\r\n});\r\n\n","/**\r\n * The workspaces mixin model parts for fetching the workspaces from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n *   - Fetch custom attributes (categories)\r\n *   - Provide Workspace type icon\r\n */\r\ncsui.define('conws/utils/workspaces/impl/workspaces.collection.mixin',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/nodechildrencolumn', 'csui/models/nodechildrencolumns',\r\n  'conws/utils/workspaces/workspace.model', 'conws/utils/workspaces/impl/workspaceutil'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeChildrenColumnModel, NodeChildrenColumnCollection,\r\n    WorkspaceModel, WorkspaceUtil) {\r\n\r\n  // Model for display columns in expanded view\r\n  var WorkspacesColumnModel = NodeChildrenColumnModel.extend({\r\n\r\n    idAttribute: \"column_key\",\r\n\r\n    constructor: function WorkspacesColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  // Collection for display columns in expanded view\r\n  var WorkspacesColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    dataCollectionName: \"properties\",\r\n    model: WorkspacesColumnModel,\r\n\r\n    constructor: function WorkspacesColumnCollection(models,options) {\r\n      this.dataCollectionName = options && options.dataCollectionName;\r\n      NodeChildrenColumnCollection.prototype.constructor.apply(this,arguments);\r\n    },\r\n\r\n    resetColumns: function (response, options) {\r\n      var definitions = (response.meta_data && response.meta_data[this.dataCollectionName]) || {};\r\n      var coldefstr = JSON.stringify(definitions);\r\n      if (this.coldefstr!==coldefstr) {\r\n        this.coldefstr = coldefstr;\r\n        this.resetCollection(this.getColumns(response), options);\r\n      }\r\n    },\r\n\r\n    getColumns: function (response) {\r\n      var definitions = (response.meta_data &&\r\n                         response.meta_data[this.dataCollectionName]) || {};\r\n\r\n      var columnKeys   = _.keys(definitions),\r\n          columnModels = this.getColumnModels(columnKeys, definitions);\r\n\r\n      _.each(columnModels, function (model) {\r\n        // To format user columns they must have type 14\r\n        if (model.persona === \"user\" || model.persona === \"member\") {\r\n          model.type = 14;\r\n        }\r\n      });\r\n\r\n      return columnModels;\r\n    }\r\n\r\n  });\r\n\r\n  var WorkspacesCollectionMixin = {\r\n    mixin: function(prototype) {\r\n      var defaults = _.defaults({},prototype);\r\n\r\n      return _.extend(prototype,{\r\n        dataCollectionName: \"properties\",\r\n        model: WorkspaceModel,\r\n\r\n        makeWorkspacesCollection: function (options) {\r\n          this.columns = new WorkspacesColumnCollection([],{dataCollectionName:this.dataCollectionName});\r\n          this.listenTo(this, \"sync\", this._cacheCollection);\r\n          this.totalCount = 0;\r\n          this.titleIcon = undefined;\r\n          // API returns if there are more pages to fetch or not\r\n          this.next = undefined;\r\n          this.listenTo(this,\"sync reset\",function() {\r\n            this.updateSelectableState();\r\n          });\r\n        },\r\n\r\n        updateSelectableState: function (models) {\r\n          models || (models = this.models);\r\n          var selectActions = this.selectActions;\r\n          if (selectActions) {\r\n            this.existsSelectable = false;\r\n            this.existsNonSelectable = false;\r\n            if (models && models.length>0) {\r\n              // look for actions and set selectable flags accordingly\r\n              var self = this;\r\n              _.each(models,function(el){\r\n                var selectable = true;\r\n                if (el.attributes) {\r\n                  if (el.actions) {\r\n                    selectable = !!_.find(selectActions,function(act){\r\n                      if (el.actions.models) {\r\n                        return el.actions.get(act);\r\n                      } else {\r\n                        return el.actions[act];\r\n                      }\r\n                    });\r\n                  } else {\r\n                    selectable = false\r\n                  }\r\n                  el.attributes.selectable = selectable;\r\n                }\r\n                if (selectable) {\r\n                  self.existsSelectable = true;\r\n                } else {\r\n                  self.existsNonSelectable = true;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n\r\n        fetch: function () {\r\n          if (!this.fetching) {\r\n            // reset total count\r\n            this.totalCount = 0;\r\n          }\r\n          return defaults.fetch.apply(this, arguments);\r\n        },\r\n\r\n        clone: function () {\r\n          // Don't share something between collapsed and expanded view (models, ...)\r\n          // Sorting, filtering, columns, ... must also be shared since e.g. the modal view has\r\n          // specific sorting\r\n          var options = $.extend(true, {}, this.options);\r\n          this._cleanupQuery(options.query);\r\n          var collection = new this.constructor([], options);\r\n          collection.connector = this.connector;\r\n          collection.titleIcon = this.titleIcon;\r\n          return collection;\r\n        },\r\n\r\n        /**\r\n         * Cleanup query, e.g. all custom filters, expand\r\n         *\r\n         * @private\r\n         */\r\n        _cleanupQuery: function (query) {\r\n          if (this.wherePart) {\r\n            _.each(query, function (value, key, obj) {\r\n              if (key.substring(0, 6) === 'where_' && $.inArray(key, this.wherePart) < 0) {\r\n                delete obj[key];\r\n              }\r\n            }, this);\r\n          }\r\n\r\n          // delete expand\r\n          if (query.expand) {\r\n            delete query.expand;\r\n          }\r\n\r\n          return query;\r\n        },\r\n\r\n        parse: function (response,options) {\r\n\r\n          // In case api returns properties use them, otherwise use defaults\r\n          this.totalCount = response.paging.total_count;\r\n          this.titleIcon = response.wksp_info && response.wksp_info.wksp_type_icon;\r\n\r\n          this.options.orderBy = this.orderBy;\r\n          this.columns && this.columns.resetColumns(response, this.options);\r\n\r\n          // If more pages available set next to true, otherwise to false\r\n          this.next = response.paging.actions && response.paging.actions.next ? true : false;\r\n    \r\n          // pass the array of v2 nodes to the model parse methods\r\n          return response.results;\r\n        },\r\n\r\n        /**\r\n         * Set paging parameter for rest call\r\n         *\r\n         * @param skip Number of items to skip at current rest call\r\n         * @param top  Number of items to fetch at current rest call\r\n         * @param fetch true to fetch items from server\r\n         */\r\n        setLimit: function (skip, top, fetch) {\r\n          if (this.skipCount !== skip || this.topCount !== top) {\r\n            this.skipCount = skip;\r\n            this.topCount = top;\r\n\r\n            // Fetch next page from server and show data\r\n            if (fetch) {\r\n              this.fetch();\r\n            }\r\n          }\r\n          return true;\r\n        },\r\n\r\n        /**\r\n         * Reset paging parameter\r\n         */\r\n        resetLimit: function () {\r\n          this.setLimit(0, this.topCount, false);\r\n        },\r\n\r\n        setFilter: function (value, attributes, fetch) {\r\n          // In case filter is changed, reset paging to get first page\r\n          this.setLimit(0, this.topCount, false);\r\n\r\n          return defaults.setFilter.apply(this, arguments);\r\n        },\r\n\r\n        clearFilter: function () {\r\n          defaults.clearFilter.apply(this, arguments);\r\n          if (this.options.query) {\r\n            this._cleanupQuery(this.options.query);\r\n          }\r\n        },\r\n\r\n        mergeUrlPaging: function (config, queryParams) {\r\n          var limit = this.topCount || config.defaultPageSize;\r\n          if (limit) {\r\n            queryParams.limit = limit;\r\n            queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n          }\r\n          return queryParams;\r\n        },\r\n\r\n        mergeUrlSorting: function (queryParams) {\r\n          var orderBy;\r\n          if (this.orderBy) {\r\n            orderBy = this.orderBy;\r\n            queryParams.sort = this._formatSorting(orderBy);\r\n          } else if (_.isUndefined(queryParams.sort)) {\r\n            queryParams.sort = \"asc_name\";\r\n            this.orderBy = \"name asc\";\r\n          } else if (queryParams.sort.indexOf(\" \") > -1) {\r\n            orderBy = queryParams.sort;\r\n            this.orderBy = queryParams.sort;\r\n            queryParams.sort = this._formatSorting(orderBy);\r\n          }\r\n          return queryParams;\r\n        },\r\n\r\n        _formatSorting: function (orderBy) {\r\n          var slicePosition = orderBy.lastIndexOf(\" \");\r\n          return orderBy.slice(slicePosition + 1) + '_' + orderBy.slice(0, slicePosition);\r\n        },\r\n\r\n        mergeUrlFiltering: function (queryParams) {\r\n          if (!$.isEmptyObject(this.filters)) {\r\n            for (var name in this.filters) {\r\n              if (this.filters.hasOwnProperty(name)) {\r\n                if (this.filters[name]) {\r\n                  var column = this.columns && this.columns.get(name);\r\n                  var attributes = column && column.attributes;\r\n                  var valstring = WorkspaceUtil.getFilterValueString(attributes,this.filters[name]);\r\n                  queryParams[\"where_\" + name] = encodeURIComponent(valstring);\r\n                } else {\r\n                  // Clear filter\r\n                  delete queryParams[\"where_\" + name];\r\n                  delete this.options.query[\"where_\" + name];\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return queryParams;\r\n        },\r\n\r\n        queryParamsToString: function (params) {\r\n          var queryParamsStr = \"\";\r\n          for (var param in params) {\r\n            if (params.hasOwnProperty(param)) {\r\n              if (queryParamsStr.length > 0) {\r\n                queryParamsStr += \"&\";\r\n              }\r\n\r\n              if (params[param] === undefined) {\r\n                queryParamsStr += param;\r\n              } else {\r\n                queryParamsStr += param + \"=\" + params[param];\r\n              }\r\n            }\r\n          }\r\n          return queryParamsStr;\r\n        },\r\n\r\n        getBaseUrl: function () {\r\n          var url = this.connector && this.connector.connection &&\r\n                    this.connector.connection.url;\r\n          if (_.isUndefined(url)) {\r\n            url = this.options.connector.connection.url;\r\n          }\r\n          return url;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return WorkspacesCollectionMixin;\r\n\r\n});\r\n\n","// Fetches the list of related workspaces\r\ncsui.define('conws/widgets/relatedworkspaces/impl/relatedworkspaces.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/nodes',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/mixins/node.resource/node.resource.mixin',\r\n  'csui/models/mixins/expandable/expandable.mixin',\r\n  'conws/utils/workspaces/impl/workspaces.collection.mixin',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeCollection, BrowsableMixin, NodeResourceMixin, ExpandableMixin,\r\n    WorkspacesCollectionMixin) {\r\n\r\n  var config = module.config();\r\n\r\n  var RelatedWorkspacesCollection = NodeCollection.extend({\r\n\r\n    constructor: function RelatedWorkspacesCollection(models, options) {\r\n      // Core filter values needed for rest api\r\n      this.wherePart = [\"where_workspace_type_id\", \"where_relationtype\"];\r\n      NodeCollection.prototype.constructor.apply(this, arguments);\r\n      options || (options = {});\r\n      this.options = options;\r\n\r\n      this.makeBrowsable(options);\r\n      this.makeNodeResource(options);\r\n      this.makeExpandable(options);\r\n      this.makeWorkspacesCollection(options);\r\n\r\n    }\r\n  });\r\n\r\n  BrowsableMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n  NodeResourceMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n  ExpandableMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n  WorkspacesCollectionMixin.mixin(RelatedWorkspacesCollection.prototype);\r\n\r\n  _.extend(RelatedWorkspacesCollection.prototype, {\r\n\r\n    url: function () {\r\n      var queryParams = this.options.query || {};\r\n\r\n      // Paging\r\n      queryParams = this.mergeUrlPaging(config, queryParams);\r\n\r\n      // Sorting\r\n      queryParams = this.mergeUrlSorting(queryParams);\r\n\r\n      // Filtering\r\n      queryParams = this.mergeUrlFiltering(queryParams);\r\n\r\n      // URLs like /nodes/:id/relatedworkspaces\r\n      //var url = this.node.urlBase() + '/relatedworkspaces';\r\n      // Alternative for URLs like /businessworkspaces/:id\r\n      var workspaceNodeId = this.node.get('id');\r\n      var url = Url.combine(this.getBaseUrl(),\r\n          'businessworkspaces', workspaceNodeId, 'relateditems');\r\n      url = url.replace('/v1', '/v2');\r\n      queryParams = _.omit(queryParams, function (value, key) {\r\n        return value == null || value === '';\r\n      });\r\n      queryParams.metadata = undefined;\r\n      return url + '?' + this.queryParamsToString(queryParams);\r\n    }\r\n\r\n  });\r\n\r\n  return RelatedWorkspacesCollection;\r\n\r\n});\r\n\n","csui.define('conws/widgets/relatedworkspaces/impl/relatedworkspaces.factory',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/contexts/factories/factory',\r\n  'csui/utils/contexts/factories/node',\r\n  'conws/widgets/relatedworkspaces/impl/relatedworkspaces.model'\r\n], function (module, _, Backbone,\r\n             CollectionFactory,\r\n             NodeModelFactory,\r\n             RelatedWorkspaceCollection) {\r\n\r\n  var RelatedWorkspaceCollectionFactory = CollectionFactory.extend({\r\n\r\n    propertyPrefix: 'relatedWorkspaces',\r\n\r\n    constructor: function RelatedWorkspacesCollectionFactory(context, options) {\r\n      CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      var relatedWorkspaces = this.options.relatedWorkspaces || {};\r\n      if (!(relatedWorkspaces instanceof Backbone.Collection)) {\r\n        var node = context.getModel(NodeModelFactory, options),\r\n            config = module.config();\r\n        relatedWorkspaces = new RelatedWorkspaceCollection(relatedWorkspaces.models, _.extend({\r\n          node: node\r\n        }, relatedWorkspaces.options, config.options, {\r\n          autoreset: true\r\n        }, options));\r\n      }\r\n      this.property = relatedWorkspaces;\r\n    },\r\n\r\n    fetch: function(options) {\r\n      return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return RelatedWorkspaceCollectionFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/header/impl/header.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/node.connectable/node.connectable.mixin',\r\n  'csui/models/member',\r\n  'csui/lib/jquery.when.all'\r\n], function (_, $, Backbone, Url, NodeConnectableMixin, MemberModel) {\r\n\r\n  var HeaderModel = Backbone.Model.extend({\r\n\r\n    // constructor gives an explicit name to the object in the debugger\r\n    constructor: function HeaderModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      this.makeNodeConnectable(options);\r\n      if (this.node.get(\"type\") === 848) {\r\n        // if we are initialized with a workspace node, we get initially all attributes from it\r\n        // but note: there are no business properties yet, as the model is not yet fetched\r\n        this.set(this.node.attributes);\r\n      }\r\n      this.listenTo(this.node,\"change:name\",function(){\r\n        if (this.node.get(\"type\") === 848) {\r\n          this.set(\"name\",this.node.get(\"name\"));\r\n        }\r\n      })\r\n    },\r\n\r\n    // computes the REST API URL used to access the business workspace information\r\n    // required for the header.\r\n    url: function () {\r\n      return Url.combine(new Url(this.connector.connection.url).getApiBase('v2'),\r\n          '/businessworkspaces/' + this.node.get('id') +\r\n          '?metadata&fields=categories&include_icon=true&expand=' +\r\n          encodeURIComponent('properties{create_user_id,modify_user_id,owner_group_id,owner_user_id,reserved_user_id}'));\r\n    },\r\n\r\n    // parses the REST call response and stores the data\r\n    parse: function (response) {\r\n      // store allowed actions\r\n      this.actions = response.results.actions && response.results.actions.data;\r\n      // store business properties\r\n      var data = response.results.data || {};\r\n      this.display_urls = data.display_urls || {};\r\n      this.business_properties = data.business_properties || {};\r\n      // store icon information\r\n      if (this.business_properties.workspace_widget_icon_content) {\r\n        this.icon = {\r\n          content: this.business_properties.workspace_widget_icon_content,\r\n          location: 'node'\r\n        }\r\n      } else if (this.business_properties.workspace_type_widget_icon_content) {\r\n        this.icon = {\r\n          content: this.business_properties.workspace_type_widget_icon_content,\r\n          location: 'type'\r\n        }\r\n      } else {\r\n        this.icon = {\r\n          content: null,\r\n          location: 'none'\r\n        }\r\n      }\r\n      // store category information\r\n      this.categories = data.categories || {};\r\n      // store metadata information\r\n      this.metadata = response.results.metadata || {};\r\n      // as a workaround I set these properties, as\r\n      // otherwise the model doesn't change\r\n      data.properties.workspace_type_id = this.business_properties.workspace_type_id;\r\n      data.properties.workspace_type_name = this.business_properties.workspace_type_name;\r\n      data.properties.workspace_widget_icon_content = this.icon.content;\r\n      // return workspace node info\r\n      return data.properties;\r\n    },\r\n\r\n    // true if the model is fetched already\r\n    isWorkspaceType: function () {\r\n      return (this.get('workspace_type_id') !== undefined);\r\n    },\r\n\r\n    // returns the available action if available,\r\n    // otherwise undefined.\r\n    hasAction: function (name) {\r\n      var ret;\r\n      if (this.actions) {\r\n        ret = this.actions[name];\r\n      }\r\n      return ret;\r\n    },\r\n\r\n    expandMemberValue: function (value) {\r\n      var self = this;\r\n      var key = value.name + '_expand';\r\n      var category = key.split('_')[0];\r\n      // fetch the member information if it doesn't exist already\r\n      if (_.isUndefined(self.categories[category][key])) {\r\n        var ids = _.isArray(value.value) ? value.value : [value.value];\r\n        var values = ids.slice(0);\r\n\r\n        var deferred = [];\r\n        _.each(ids, function (id) {\r\n          var member = new MemberModel({id: id}, {connector: self.connector});\r\n          deferred.push(member.fetch({\r\n            success: function (response) {\r\n              // append to expanded values\r\n              values[_.indexOf(values, id)] = response.attributes;\r\n            },\r\n            error: function (response) {\r\n              // append to expanded values\r\n              values[_.indexOf(values, id)] = id;\r\n            }\r\n          }));\r\n        });\r\n        // trigger change when all items are fetched\r\n        $.whenAll.apply($, deferred).done(function () {\r\n          // set values and trigger 'change' event.\r\n          self.categories[category][key] = values;\r\n          self.trigger('change');\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  NodeConnectableMixin.mixin(HeaderModel.prototype)\r\n\r\n  // return the model\r\n  return HeaderModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/header/impl/header.model.factory',[\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'conws/widgets/header/impl/header.model'\r\n], function (ModelFactory, ConnectorFactory, NodeModelFactory, HeaderModel) {\r\n\r\n  var HeaderModelFactory = ModelFactory.extend({\r\n\r\n      // unique prefix for the header model instance.\r\n      propertyPrefix: 'header',\r\n\r\n      constructor: function HeaderModelFactory(context, options){\r\n          ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n          // get the server connector from the application context\r\n          var node = context.getModel(NodeModelFactory),\r\n              connector = context.getObject(ConnectorFactory, options);\r\n\r\n          // the model is contained in the 'property' key\r\n          this.property = new HeaderModel( {}, {\r\n            node: node,\r\n              connector: connector\r\n          });\r\n      },\r\n\r\n      fetch: function(options){\r\n          // fetch the model contents exposed by this factory.\r\n          return this.property.fetch(options);\r\n      }\r\n  });\r\n\r\n  return HeaderModelFactory;\r\n});\r\n\n","csui.define('conws/widgets/header/impl/header.icon.model',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'csui/utils/commands/delete'\r\n], function (_, Backbone, Url, DeleteCommand) {\r\n\r\n    var HeaderIconModel = Backbone.Model.extend({\r\n\r\n        // default icon\r\n        blankImage: 'data:image\\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAScAAAEpCAYAAADRUOQxAAAABmJLR0QA\\/wD\\/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3QUbEBMqi\\/7RiwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAgAElEQVR42uydd3hc1Zn\\/v+fe6X0kjXqXLVnFHdtgg22KKaY4GExISAiQAEnIbjbZ\\/SXZ3WyAZDdlN8mmQQJJlkBIQmx6BwO2sXEvsmWrWn1Up\\/dyy\\/n9IUOIdUeWbUkeSefzPH7g8VijW875nve85y0Ag8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYKQ9lD7Iffj\\/D1LKbaaUp6P\\/EOWfpSr2BBmpIOwRMFIIB79lC7AFW\\/CVlTfk72\\/xc01NnSjJU2frjebijmEew14PErEEN+QJymoV5WrK7NW5WcYqEKgJ4UAplagkywPeSPOJk\\/5mmRI5J9PCGQw6mp+TSUqzk5yr39fi9xNfTXUZ5paQ2O8O7\\/R8s3wTZ7G0cZWVlQn2Jpg4MWYpmynl57vdOQ29gu31948LtgzbvEF3LENn1Cxyh1HQN+hSaTSqSl8MxnA0CZlKepWKy4wKPERRBKWAKEkAAFmWOQpKAEJAANCREUZAJI4QCgAqngchBCoVD4NGgpAUXTynTpgMGuh4cRgyuosLcpBn4z1iPHEky6weDEQjrbetnW+pssd8hY7CDkKIxN4cEyfGDMIZcGYGRX3eEy81JAQY5rUOi\\/lyMrQoKsh1rhgpHPKGoFHzhaG4DFGWVYJMQClAQU8JzSQOF0o\\/FLIR8eJkaHhONOk4Koi0P9Nmohkaucem4xo5jbm+xM51alXCyS9trLM4KO3MyMgIsDfMxIkxPbZl6oe2b6cX6Utqm1zh8rbB8Fx\\/WFo+EEzWtvf5dRyHQk+UIilRFT2lPdNhsHIEUHGcaDcQkeO4weoiKzHw3Ac2A793SZmpr6Y0r2O3q\\/H4w2vXSiN6SigbDUycGBeYbZ2duh6nJrulb6DaHRQvaxsK1Q75EzWBuFToCyU1CYmqJHmSLaCpV2FwHIFOBTHDpE5a9RpntlndWJhpOlyardpbYss+YckPuW+rq0uyEcLEiTGF7O7p0b+1N1jmisRX9QyHLu33J5a5gvESV0jQJiTwVKYzS4zGIVaEI9DxRHJY+IRVp27JtenqKwvte+0G1Y6Vi\\/Rd65mjnYkTY1ImH9m8p1fXOuBbeKI\\/uKLfG73C6Y4t8kbl\\/GBcnFrL6JSf6EPH9\\/h+ZqotNwqeEFh1nGjRq3oKM7T1pdmmXRU5lp21BbYTt60sjrFBxcSJcc4aQMmWLeB2xI5WxCLhDR3DsXVOX3Rxvz9piwlQ0Yn\\/haOc03oVB42Kh1ajglGrhl6jgk7Nw6wFdDyFRSdDw8kpvzIhc4jEOcREgmASSAgSwgkB0YSIpCBCECVEBBkS5UApHXHCT8Lw5ECh13BijknlLskxHS21a94yGzJfvdRU07FpEwghRGQjjokT4wy0trZq97qtRU29gzceahte2dQXWRCIixWhBOUnTpAoOEKgUwF6rQaZJg4Okw4Fdg0KMwzIzrKhyK5GgUkFk04Dk0EDo04NFc9DzXNQqziQUz8\\/lkEkUUAQKWQKCKIMQZKQEGXE4gIisQSCsSScYQn9PgHDbj+c3iicvgRc4QS8ERnReBIJCZDpxIkWAWDSQLTp1R0VucZDy+bYd82vKHjj4oxQP4uxYuLEUOB4T0\\/Glr3Diw62+69z+oRr+32xeZ6opJLPV5FOOY+NGoIMkxYFdh3m5hpRlWdBVb4ZBRkmOKxq2HQaGHRqqHmAkBHraSoGCh2xEkEphSBRROIiAvEkhgMC+jwhtA6E0dQfxMnBKPr9MXhCCUQFev6Cdeq5ZOi5RGGWsa00U\\/fm0vKsN5bO1xy8bu6fwoQ8LLNRycRp1vIgfZBb0fYP+ZvfaV\\/dMhDc0OeLrh0OJLLj4vn4aCh4AlgNahTZtajKt2BhqR0Li60oyzYhx6KHyaCCmhBwXPoPBVmmEGSKcEzAUCCOjuEwjvb4cazbh+a+EJz+BAJREdL5iBWl0KsJ8u06b45V905dkfWVTyzP275+YZGTUkpYaAITp1nF955vqDjc4b25P5DY1DEUWeAOCzp6jq+GgMKs5VGcqceCYguWV2RgcUUWKhwGZJh10PLctBCisxGshCTDE4yj3RXF4XY3DnR4cbQniF5PFOEEPecYLo4AWSZVfE6O6WhRpn7z9RcVv\\/3ZlUUnmEAxcZrRUEr5\\/3m5ofb1w4M3DASFTf2+WF0oKavO5ZVwBHCY1KjON2FlZRZWVWWiptCGHJseWhUHbhaFEsiUIiHKGPLF0NDrx542D3a3uNDUH4E7IuDctsYUVi0nluaY2nJN\\/F\\/WL3G8+o\\/XLTzG0miYOM04UXrk7daL3jwyuKltKHJjtztcHhehOqut2ykfSbZZjfnFNlxZ48Ca6mzMzTPDZtSAnyLL6O9SW\\/Dhf6jiMCMfG3Ejp4BT87wlmcIXTqBtIIydzUN4r9GFYz0BDIXOTah0PBXn5Jp6Sx2m56+qK\\/jrV68rP8xEionTdFcl8rM3Oi56t6Hn9k5XdGOnK1oaEc5+y2Y3qLCwyIwr63JxeV0OqgtssOpVE7pVowCoPHKcHxMoEkkBcUGEL0YRigqIJxIIJZIYjgDBqIRYPAFBEJFICkgmk6OCADQaNbQaDdRqFfQ6LcwGFbKNgEWrgV6rgcWggk3PQatWQatRQ68mIwLGTawjXpYpAjERzX1+vHd8CO8eH8SRnhACMRFnu402qoFyh6Gr3GF4fv3Swj\\/dd2XiOCEsCp2J0zTjBy90lr57ov2OoaBwd\\/tQpCKalMfv5KYUWhVBZa4RV9bl4JoFuVhanoFMk3ZCBOkjJ3NcRDCSwIA\\/gT5vBCeHY+hz+9HlTcITSiIcjcMbp4gnKQRRhCBJGEkMJn+zmcawRMjHTCdCADUnQ83zUKtUMGgAm46DyaBDhlmL0gwtihwWVOToUGAzIdemhc2ohVmvAj9BzntZpvCEEtjf4cXWYwN47\\/gQWoeiSIj0rN6NQcOh0K5rKMvUPXPVgsK\\/\\/L8N8zrZiGfilO7bN7JlZ1vWloPDn2nqD32y0xW+KCKAPxv7JcOgwqq5dly\\/OB9Xzs9FqcMEFc+d1zZMkmUET512dQ6HccIZxHFnACeHonAHY3CHRUQTSSSlDysSXJhBSQig4WXoNVo4zCo4LHpU5hoxr8CCmkIrKnJMyLFoYTWowRHuvLaJgiSjaziEdxsG8dqRAXzQ5oMvJo5\\/elAKk5aTyhzGg7VF5r\\/euLjoD3dcVuJjs4CJU9pRP0CNv39t\\/ye2tXg2Dfji6z1RUT3eR80BKM7Q4JqFebhxST5WVTlgNWjOefKJkgxfRECvJ4L6bj+OdHlxrNuPHk8c7nAC0SSd0MDGSZZ8cITAoOGQZdagJEOHBSV2LCmzY0GxDcVZRtgM6nMWcEoBfySBXS1uvHq4D28eG4TTm4B8Frk5WSa1kGnUvHDpvJxnP3\\/d0ldXFhOWHsPEKR2spc38j16oueSFQ\\/2fdQXjd3R44sbxPmKeUFTlmrDhogLcfFE+FpbaoVHx53ANFFFBRp87jPouP\\/a1DWNfhx8drhjcYQGiREFn2ADW8ECGSYOKbANWlNtw8ZxsLCy1oiDLBL16JIL9bEkKEo50+fDiwX68dKgPrYNhSJSM+5rKHfpInlX3p\\/ULc373b7fMP8BmBxOnC8ajO7vtr+3qvK\\/HF7u\\/qT9cJo4zppgnwOJiC25eVoANFxWgKt9y1iu\\/TEeiqU8OhrC7ZRjbW7w41uVFj09AQjh7Z+\\/0HtAUejWPIrsGC0ozcXl1Bi6e60BFrhkmneqswypESUZzXxDP7Xfi5UN9ONYbgjhOdVdzwLw848nyLMPv1i8p+s396ypYQTwmTlNlKYEAlPvXPzdsfOlQz20D\\/sQGf1xWj9dSWlxsxq0rinDL8iKU55jPytFLKRBLSmgdDGLHiUFsPzGEA11BuIIJJGX2Wj9Ew1M4LDosLbHiqrpsrK3JQUWeBXo1f1ZbZUmm6BwK4rl9TjyztxcNzjCkcYpUhp4X8qzaFy6dm\\/G733zx4vdY6AETp0kXpjePuSp\\/8frxu7vc8fuaB0L28VgoBBTz8kz45MWF+OQlRajMs56VKIkSRa87jG2Nw9jaMIzdJ73o88UgyZS9zjOg4giK7FpcUpmJdfNzsKY6G0WZhrOyVGWZorEvgOf29eKZPb1oGYxgvO+90K7rmpdneuZLG2p\\/t3F+Tjt7I0ycJkGYKP+NP9dv3HbCdW\\/bYHhdID6ehZCiwKbF7ZcU41Mri7Gw1A7VOEWJUiAcF3Cw3Ys3jw5ga8MgmgbCiItMkM7xDUKn4jAv34Sr5+fgukV5WFqWAZNePe6nKckUhzu8+MueHmze04u+QGJc78Kq4zEnx\\/D2mqqMR8yfW\\/bqw4SwpGImThMiSuTdho7sR97s\\/WrrcOyLjf3js5asWg4bLsrHZy8txpqaXKhV41upZUox4Ivj3YZ+vHJkADuaPXCHBLDEromdANkWNVZXZeKmpXm4cn4BcqzacfumBFHG9hODeOqDXrx0sA+hhDyO30lRlWvsr8zWP37f+iW\\/uGGBjYUdMHE6H2HazD\\/29vz1z+xx3nuiL3SDKyKd8dnxBFgzLxP3rC7GTctKYNaPr4fkh\\/6Nlw\\/14cWDgzjY6UNMlNnrmmRryqAmWFaegQ1L83DD0gKUZ5vHnQoUiIp4YV83ntjZgw9aPePyRzkMnFyeY3p24yXFv\\/nmDdXb2Dtg4nQuFpPqUz\\/beXdDX\\/Afmgei8894pEwpSjJ1uHN1Ge5aXYryHNO4RampL4Dn9jvx0gEnjvWFITGjf8pRccCCIgs2LM3HxuWFqC6wjkukKAXah8L4w\\/td+OP7HejxJs4Ybc4Tiup8S8OiYtuv\\/viVFb9nznImTuPmsW3NWX9+v+9f2ocj9zm9cfuZBpuOBzZclI\\/Pry3D5bW5UPFnfsQfF6Xn9jvR2Df+kyDG5METoKbAhFuWF+KWsxApUaJ4r2EAv93ehZcO9UM40wJDKQozdL45OabH7r6m8sefW1HoYU+fidOY\\/OT11jV\\/3NHx5Q5XdFMwfoZtHKWoyjPh3svLcOfqMjgs2jN+v0wpTg6E8MzeHjy7j4lSuovUpy8pwqaLi1CeYxlXGMJwII4ndnTgd+914KQrfsZ\\/b9eraIXDsOXeK+Y+ev\\/V5TuYODEU+fyjOze92+j7cq8vsfZMgqHmgI3L8vHFKytwWXX2uFbXQV8Um\\/f24k+7e3CoM8BEaRqg5oClZTbcsaoYm1YUIcemH5dVvO3EIB5\\/rxMvHjyzFaXigLIM\\/farah2P\\/vr+FVuYODE+IhKJFNz328P31DvD\\/3CiL+Q40xJZkqHF\\/VdW4POXlyPbqjvz9ydEvHqoD3\\/c2YV3T7gQZx6GaYdOBayrzcFnLyvB+iX5MGpVZ9y2DQUT+P277XjsvXb0+M5UWYVifqHNVZVj\\/NEjn5nzWE5OTpiJ0yxna2Mg8+evHn2ovtt3j9OXNIz94CiuqnXggXUVuGFp4RmtJUmm2NPqxlM7u\\/DsPid8MaZK0x27gcdtK4pw9+pSXDQn84xjQJRkvHKoD49sbce7ja4zTr9cq9pXl2d67Ju3XvnjdTVk1vmhmDid4g\\/vdlf84LXGf\\/KEEg+4I8KYz0WvJrhnTRm+cvUczCuwnPG7+30xPPl+J57Y0YW2oQh77DMKito8E+5eU4o7LitDru3M1nNjrx+\\/fOskntzZjdgZEvUcJjXNtmgfWTs\\/46FHPrdiVgkUzwYX8OT7PWue2NH+wxN9oU8FE2M7vsuy9PjXDfPwjRvnoSBjTOMKgiTj9cN9+N4LjXh8WxfcYYEJ0wxc311hATuaXGgdCMGs5VGWbRozJclh1WH1PAesBhVa+oMIxFL38YwmZRKOi8uiMaHsJ\\/\\/zPdfzv\\/95NxOnWcK\\/P3viqqd3dHznYKfvyqQ8tt9g9bwsPLixGp9bUwadeuxH1+OO4H9fb8F\\/vtCEg11ByMzhPaORKNA8EMau5mFEEwLm5Jph0afOAdeqeayYk4nSLD36vTH0eKIpY6JEmRJPOFnbPRQtve+r\\/9azffMjXWxbN5ONcUq1X3tq37VvNvj\\/taU\\/uGKsNBSeUNy+ogBfu74KS8oyx+5sK1O8Vd+Px95tx2tHh9kp3CxExQE3LsrBl64sxxUL8sf0RVEKHGz34Cevt2LLPueYhe04UJRmG7evq834\\/m++MPOrG8xay6lev+qqd5v83+oYjq4cS210ag5fvboC\\/7GxFlUF1jGFyRNO4ldvteG7zzdhX2eA5cDNUuRTVtSeNjcECagusECvUZ5qhAAFGQYsr8gEpUB9tx9iCjObgsAXTpYO+ROlO446O1vee2pGW1CzUpy++fSRB\\/a2B77b7oovGkttHCY1vnHjPHzzpnnIsozt6Dzc4cV\\/vdCIX77dDs\\/ZtlVhzMhNiTcq4v1mF4b8cRRnGpA7RlyU1aDGyrmZ0Kp5HOv2IZYqIIoQBONSCeW4hZ\\/\\/0tflD158\\/DATpxkkTNua3Q\\/W94aKxvp35Vl6fOfmGjxw9dyUqx4wkqqwZV8PHn6uES\\/XD7JcOMZp23zgSLcfTX1BWHQ8qvItKSseaNU8Lp6bBbtBhUZnAP5oake5JyLkChQXf+a+r0c\\/eP6xGVkGeFaJ0zefPvLA9mb3g\\/s7\\/I6x\\/t3CIjMeuqUWn11dOmZuXDAq4OdvtuK\\/XmzCif4w2EkcI5UV1e2JYW+rG5IMLCi2QpviQIXnCJaUZyDbrEXzQBiuUCLlt\\/b54kZRkpfded9Xo7uef3zGCdSsECdKKYnNvfHe7c3e755JmC6dm4Hv3lKDDcsKx6zp0z4Yxg9easRP32iDd4wVjsH4kEBcwq4WN4LRJKryLbAb1IondIQQ1BVZUZRpQPdwGE5ffEyBCkXFeWs23tdy\\/K0nuh5++OEZ4+qcFeJ0TLf6ig\\/aA\\/9xtCdYPpaPaV2tAw9trMGV83PH7Nixu9mFh55vxNO7es6ccc5gfNwNIFMcaPfC6Y2iNEuPgkyjsq1FCCrzTChzGOB0R9DpTt1haiiYsAdiydKmnmHn4df+MGPK\\/854cbr7scNrdrR6Hux0xS4eS5iuqXPgoVtqsGpedkphohR46aATDz3fhK0nhmdVVxPGBFryIGjsD6JtIIQskwaV+ZaUAlWWbUJlrglOTxTtw9EUu0aCYFwqdkdReM8D3+7a++IjMyJQc0aL0yNv96x54UDXQx3DkbVnEqYHN9bg4srUeb6iRPHkjg489Fwj6nuDYP4lxvkx4oeq7\\/bDrONQV2RTdCMQAhRmGjEnx3hmgYolS2OJROl\\/fe\\/7XS8\\/+b\\/TXqBmrDi9sLd76e+2nfz+kW7\\/2rEsnKvrRrZyYwlTXJDx6Nsn8Z8vNqHLE2fzijFhuENJHGz3QKvmsLDErngAQwhQmGFERfYZBAoE7lC81BWM5v\\/3Dx8+9Nzvf+5m4pRm\\/HlPe84PXmr+9pHu4E3iGCG3V9c58OAttbhkDGGKxAX8+LVW\\/ODl5lO5cQzGxBKMS9jX5oEM4KIyu2IDjI8sqGwjut1RdLiUBUoGwXAgUX68x6955Ic\\/3rfliZ9EmTilCe1ean3wz0ceauoPfyEqpO4uuaYqAw\\/fWouVYwhTMCrgv19uwv+81opwgpU4YUweMUHGvpNeSJKM5eV2aBRCDT4UqOJMPdoHw+jxKjvJJQoiivISTzhq3vL0E9t\\/85OHp+WqOuPE6Zj+sn9qHQx\\/wx0RU97b0lIbHr61FmtrUju\\/3cEEvv9iI\\/73rZOn+sMxGJOLIFHsa\\/dClimWV6QWqBKHEXk2PY47gxgKKMdBxUVKQjGh5r36LvfAB3+aljFQM0qcvvDrPfce6Q1+u9ebMKcyh6pyTfiPjTW4YUleamEKJfD9l5rwy7dPIskMpjSHQssDmWYdyjK1KHOYUJRpQGGGHtkmFdQqHqAUokSnRa6jJAMH2r2gMsXyiowUAkUwJ9eETJMGR7u88EaU4+zCCUlj0GmXfeqef\\/QfeOV30y7NZcYcOX3t94fXvHZ84GetQ9FFqf5NgVWD7902H3etKU0pTL5IEv\\/5\\/An88u12FsOUxmh4YF6uESurHLhkbgZqCu3Is6qh0\\/ytTIkkyfBERfS5wzjY4cWOZhcOdfrhDgtpHwaiUxH88\\/q5+NZN1TClKL1CKcWT2zvwb5tPYCCYuvTvvFxj\\/c1LC\\/\\/pB3cs2MHEaYr5w67uil+93vLo4S7\\/1an83xYdj4c21uAfrq1MmZISjgn4wcvN+PFrrUiyWidpiYojuLQyA5uW5+OahXkodpig4rkzDmRZpgjERBzqcOOlg314dn8fBoPp7Yr5UKD+dUM1jDplgRIlip+93oyHn29EOKk8ZjlQXFGTtetbN8194KoFRcfYtm6K6A8GHd\\/+U8N\\/1HcHNgkplEnNAV+\\/rgJfX1+VMqcplpTw36+OCFOCCVNaUpplwL9cX4nvbKzFlfPzkGHWgufIuFZYQgj0Gh7lOWZcWZeD2kIrEkkRbYNhpKuBLMrAwQ4feI7DijkZUPGjT\\/E4jmBRqR2xpIR9J72KRQ0pCAb9iaImZ0h6\\/6Vf7Pn5j34UZ+I02d4Guk11+0967613Rr4ajEuaVD6Ju1eX4t9vroPVqPxPBJHi52+04EevtCLK9nJpybpaBx66pRZ3rymDzagZV9+4lNYXz6Eyz4zVVZnQqjgc6\\/Gn7aGHKFPUd3lh1HC4qEK5iYJaxaGu2I7hQAJHe\\/yKGyJBpkQQpdqGDr+v5Z0n9zJxmmQ8xQ9cs6\\/d\\/x2nP5Gbaod67fwcPHRLLUodyjlMMgV+v60dP3ipCb4o836nI7dclIfvbqrBmpqcMXMezxazXoOVlVkwa3kc7vQikkzPhSkuUhzr9sNuUGNxmV3xGZh0KlRkG9ExFE4ZpBlOShoQMvf2L3695cCLj6d9Dt60Fae\\/7Oqu+Mue3u81DkaWpRKmmnzTSFrK3MyUg\\/qve7rx3eeb4PQnmQqkIRuW5OLhW+uwsDRjUr5fxXNYUpYJvZrH3pPutLWgwgkJjc4A8u0G1BYq5+JlW7TIMmlwsMMLj2LAMIE3nLRLIs3+6c9+vOe5x3\\/sY+I0wRw\\/TjX\\/8dK+bzX2hz8jSMrKlGng8Z2ba3DrxUUphem944N48NlGNA1EmAqkISvKrfjeproz1m0\\/70lwym+TECTsbvOkbTMKX1RElyuCqlwjShym0dJzKsRAwwE7m11IKAotQTgulHf1+2M9O57ans4lVqalOIVqrr3naG\\/wXz0RUbF2rooDvnrNnFMnc5zid5zo9ePh55uws9XLVGBSObexbzOo8Z2ba3D94vwJ3cqltqAIqvMt6BgKo6k\\/fRvs9vvj8IQSWFRqh8OiVRSo2iIrQnEB+056FEMmkhIlhJDaXcf7OpveefJEut6raroN9V+80rLwDx90fNnpjVuUl1OKm5cW4Evr5qY8mXMHE\\/jp661449ggWHWBSVz5CHB1XQZyjOTUm6H48GyNfrSOK7xBwqG2OAu3riieEmH6kFybHl9YW4Y9bR70B9J3m\\/9K\\/SBybHr88Pb5yDSPFii9RoUHrp6LtoEwXjw0oFjQrscbtRvU+OIzOzu7b7+sbC8Tp\\/Ok0enM\\/MJjjV8+3hdemMrOrysw44F1FSkbXiYEGb94sxV\\/3NXDhGmSserV+OZN87GqKuujv5PpiCxxZxAdAoBPYfVOFoQAV8zPwcZlBfjVOx1pPD4IntrZheIMHb65oQYahUTh4kwjvnL1HLQMhFK4LQi6PLE1v93Wec\\/rra1H1ldWJti27jwQaz5938FO79d8UeWwAbOWw79vqMYtK5T9TJQCT+7oxA9ebkY4yUIGJhu9hsdnVhWjxDHSAXfAE8L\\/vXcSnmAYVYV2qHgOHEdS\\/jmnTSQ9JYAU52R18RwHg5rgjfqBtD29A0aaeJ7o9SPXqsPCEvuotZoQoCzbCAKKHU3DEBQOokUZRJBoZTKidh157beH0u0eueky0J\\/e1rLoYIfnc05vwqC8llB85tIS3HFZ6tSU7U0u\\/Pytk\\/BEWM3vC+Fu6vXG8D9vnMRzB3sw0YdigiTjWLcXT77fie+\\/1IL\\/ffMk3jzaj+HA2ccbLqlw4OIKO5Dm2XjDYRG\\/eOskdre4UliCBJ9dXYY7VhWnvBenN2Y+1O27579f765g27pzwEWp+XM\\/2nl\\/ozOYss\\/cigo77r+yHGad8i053RE88lYrGpxBJhpTvAX5OLKMCT8Nc3oi+PU7HXhmTw+c3hgEeeS3mrUcLqvKwn2Xl+LGZcXj\\/j6Tlsdl1Vl49Zgr7dvIH+kJ4BdvnUR5jgl59tF98Sx6Ne6\\/ogJHu\\/zY1xlQ3Mu2DQSXvbKv9d5tlH77ckLSZuWeFpbTfz995IaO4fAdMVHZCWDVcbjv8jIsKLYp+5lECY9ubceLh\\/qZVky5LtGPGVJkJFVkAl05w8EEHtxyAj96pRkdrhiS0odbOyAQl\\/Fq\\/RC+8ZcGbNkz\\/qq1HEewpNwBi256uGSfP9iHx95pQ1JU3oYuLrPj\\/isrYNUpT\\/dIUiausHD\\/W39tuJlt686Cx7a2W18+2PeJlsGwOeV2blUJbluZejv33J4e\\/HZbByTKHOAX2nJS3O+dI7I8Utf9jx\\/0pH63hKB5KIpHt55E9\\/D4QwRKsnRwmKeHS1aUgcfe7cAL+3tSbu9uu6QYn76kGETp2ROCloGw7ZWDzls3H2y3MnEaJ2\\/V937BFU5uTFXiYkmJDfdeUQqjVnkgHesJ4NF3O+FmLcJnHIOBGF484BxHaRuCD0768c6xAVA6PmG06jWwG7XT51mEBPzmnQ40OQOKnxt1Knz+inIsKlaOLqcgGA4mNj63s+\\/zTJzGwc+3ti5uHY59zhuVFO1ro5rg82tLsaBEObUhkpDw2Lvt+KDNCxY2MPPocUXRMji+6H5BkrG\\/0w1hnE4knueg1WimlYW6o8WD377XjniKComLy+y4a00ZtCrlueAKCeFTDdUAACAASURBVKrjfeFP\\/+8bHVVMnMaAUsq\\/sq\\/3Mx3DkbpUwZYbLsrHJ1cWK28cKPDM7h78aVc3m8UzlFgiiaQojXvyDkWkcRcQVPE81KrpFaNMQfDkzm48t697ZAKcPtkJwadWlWDDknzFz0EIulzRJTsaOr88NDRkYuKUgm\\/\\/9fCqk4ORjdGkcpOCQrsOd60uHTG9FcSryenH77d3IBBnlQZmKkadBlrV+PxCBBT5ZhXU4xzxSUFEPJGYds\\/EGxXx+HtdaEmRgpNl0uKu1SXItylvWSOCTI47Yzc9um1wCRMnBXb39Oh3nnDd6fTFS5SEhyPAHSuLsbY2R9GoSooyfr+9E\\/tOsry5mUyxw4h5ecZx\\/Vs1z2FZmQPqcQZ3CqKIWDwxDZ8Kwa5WD\\/5ve7vi6R0hwJXzc\\/GplSmc4yDo8sZLth4f+ORmSi\\/oiUBaitOzO1zrOtzxG1L1nFtcYsVnLiuFOkV6w+uH+\\/D0rh7IzM80o8mx6nDL8iJo+TO\\/5zVVGbhyfu64o8ZdoSRc07RPoQyCp3Z148165dAZjYrDZy8rwYIixQNwiJJMhkPC7c3PH7ugoQVpJ06bd1P9\\/jbvHQNBQdEsUnPAHauKUZOips2gL4b\\/29GF4TCrzzTT+TAC+vNrSsbcrtXlG\\/HA1XNQlGUY93c39gWndSbBYFDAEzu6MJQiQn5+sQ13rCqBilN8sOh0xzPeO+7atLuH6pk4neL95gM39Xhj16cq471mXiY2rShSTByVKcWfd3fjrYZhsNO52UGmWYuHNtXhOzfPQ3WeERp+xPHLEyDLqMKtF+Xhf+5YiJsuKhy31SRKMva0uhEXpnct+TePDWLznp6Pkq3\\/3jVC8MlLirG6UvmkW6KA0xe\\/\\/s199TdcqOtPq+OIt+qp8cFnt25yeuNGJXExqgk+vaoYBRnKYt7QG8Afd3WzzimzDIdFh29tqMUtK4pQ3xvEcEiCUQNU5RpQV2iD3Xh2IQF9nhh2Nnsw3UdRXASe3NmNy2tzUFc0OrayKNOAO1aVYG+7X7F2fqcrZtzR6Ll1dw99dWUxic1qcXrn2KH1A\\/74tal8RVfVOXDjUuUVUJBk\\/GlXF472hNhsnYWoeILqAivmFVg\\/CrTkzqEqAaXA1oY+NPbPjBzMI90B\\/OWDbjy8qW5U4UVCCK5fWoDnDvbh9aPDitZTny9+\\/Zv7Gm4AsGXWbut291D9gU7frU5fQvH4xaThcNuKImSalFfBD5qHsXlPL5jNNLshp0SJO8cidYOBGLbs758xLehlCjyzpxd72zyKn2dbtPj0JUUwa5SfV6crZtx2bODGzZuPT3lEatqI08sfHLqs2x29SlJsvEVxZW0Wrk1RsjWalPCXPb3o9sbZ7GScF+2DIexr82Am+Sw73DE8s7sbCYWiToQQXLc4H1fUOhQDMyWZotefuGZ7MHDxrBSn3T09+g+a3Bt6vUm70gmdSTtiNaXyHWw7PoSXDvaBOcEZ52VlyBTzi23YcFEBMMNs8GcP9GNnk3LdJ7tRg00rCmHUKsgBIej3JRwneqO3DQxQ41Re8wUXJ0pB9jZEl\\/T7k9eLlCqWr1xbndpqCickPLO3F0MhVkBuJiJJ0pTUVGrr9+OtIz0w6dS4Z00ZKrP1M+o5DgUT2LKvB9GksvV01YJ8XFqZqWg9JSVKXOHkzS80NM2fZZYT5d5tcF7b54sXKlk+eg2Hm5cVjGE1DeL1+kE2i2coJ7o9ePaDTkiTWDG3eSCKB19owz89fRy7W1y4tDobn1tdphwDNG0hePnwAD5oHlb8NNuixcZlhcpJwYSgYziW\\/dK+gasonbrtyQV\\/\\/M\\/s7aocDIi3xEXleubLymy4ZmFBCqtJxHP7euCNsIDLmYorLOK7Lzbi8XdOIi5MfJ7k0S4vHnq2AX\\/Z3Y3W4Sieer8T0aSEO1eX4uo6x4x6loPBJDbvdaa0nq5bnI+lZcoFG+OSrPLFkp98pcFVNVUCdcHF6YXd\\/Rd3DMfmKvmaVBywYWk+8uyK7emwu8WFN48NgfmaZjY93gT+fXMDHtxyHO1DE9NTLinK2LK3B1\\/741H8dW\\/PR9bFlv19eH5fDwoyDLhnTRkcJtUMepIErx4ZwL42t+KnBXY9PrEkDyqinHPX4YrNe6++5zpCpsYhd0HFad9QOLcvELvVHxMVR0BVrhHXL85XPBZOihJeONDHfE2zBF9Mwo9fb8P9vz2AP77fAW84AXoOU0SQZBzu8OLfnjmKr\\/zhCLY1\\/\\/3JXCAu4Ykd3egYiuD6pQW4Y2URyAxyjg8GE3jhQJ9iUjDHEaxfko+KHOU0H09EUh3r9l+zeffUpLRcUHF6\\/u2GeW2DwUXKOk2xfmEuKnKVkxOPdPmZr2mWIVPg3SYPvvyHetz5yF489k4rmvr8CMYlyLI8piAN+WN4+2gfvvXnenz6V3vw0zdOYjgkKI68Xa0ePPl+B1QcwV1ryrC41DajrKdXjgziWI9yxczKfCuuW5iXokYaRa8ncknT0LGVU3GlF8xmbaVU+42f7tgYiIl5Stsyh1mD9YvzFduJi7KMlw854fTFzmtLR4hyzS2eAMtLLVARMqpI\\/4XdQtIR2aZATJBx2Bk6J+thuhNOyHjtmAtbT7hQlKFHdYEZiwtNmJNvR47N8JGlXVdoRJZFj+cO9OKnr7WifTAIX4yeepup36NEgad2dmNNdTauqMvBXWvKcMJ5DAlxZvQ67PFE8crhPiwutYE\\/rYSMiudw\\/aJcPL2rG+6INGrCOL0J86EW7zpK6XZCiDQjxWn\\/7s7ctv7IqoT4UYfqj0s0Lq3MwJJy5aTEnuEw3jjSD\\/k8GhYYtDzWVGXg\\/SY3IqcleBZmGvDIPUtR6jCknTdrRIwo9rR58JnHDsN3Wm10q47HirkZ2NbohjDDcwyTEtDuiqHdFcPr9cMgHIFOzYOckp67Li3ADz+zBPlWLQKRBLyx8T+Pbk8c\\/7ejC0vKM3DHymLsaXHjL3udM8YCff1wH+5eXYLSbPNpdhWwfI4Dl1Zm4sUjo\\/25MZGSXl9i3fP7PL8C4Jxx4kTpg9w\\/\\/ylwuSssKJbg1aoI1i\\/MVexBRynwdsMgmvoj53UNZVkGfGdjNX74UjNeOjL6eNVu1sFuTsNYF0oBQmA1RRVWf4obl+Tg7svL0DYYRacrgtmCfGrWRRJ\\/80H+eY8Tl1Zn45YVxbh7TSkefK4JKQqrKprVLx3qw9rqTHzhirm4Z20pdre6Z0wWQoMzhK0NQ\\/jCFeZRU9CsV+Hahbl4\\/dgwRh\\/sEfT7Y7W7WjsuBfDMjPM5bd\\/+EFff7l7tCScVg5fm5Zmwti5PMXzAH0ni1cMDiJ+nVdAyEMbeNi9uXVEEk3YaBbR8tBelOD2KOdOoxs3L8rGjcRjd7tkjTKnwREX8YUcXBnwx3HlZGa6Zn3tWPx9Jynjy\\/W609AewtiYbd64uBT9DDoYTEsXr9QMIxgSFIUawtjYHFY4UjvGwoKnv8l8+2ZUyL8is3B9ornD6E5cq6QvBSER4SYrCYIc6Pdjb7jtv348oy3h2nxM1hRZcWZM1DYfXaKvpmoW5yLXr8PyBgbTvVDtVz+idEy48vasLOXYD7l5bihwTf1Y\\/v6fdj6fe7wIFcNeaMqytzpoxz2Z3qxdHOpUTgsuzzVhbm51i7oD0+xJr+7e2l884cWoaCqxyB5NlSgJj1qlweV0eeE7BES7JePvYILwTUqGQ4ECnH+83urFpReqs7MlCkuVz\\/0MpTk+Qthk0uGlpLt6sH0JjX5jp0ikEGXhiRzf2tLqxfnE+Pn1p6VktazIF\\/rirG+8cG0CZw4B71pTCZpgZsU\\/uiIC3jw1BKdlexXNYV5ejPC8IgScslLf0By6dUT6nzcePa376V+dl\\/rhyL7raAiOWVyjm\\/8LpjWLr8eEJizpJSsDmfX341V0LsbY2B68cmZrQhM4BP57Y1nbKP3L2d0MADARFRD\\/mX1FzFK8fcuKdE940s5roBf8dbUNh\\/HFn56m+beXY1erBgQ7fuL\\/d6U\\/iifd7sGxOFjYsK8LOFg9+817nOdxbeu0JZQq81TCEL62LoCjLNMp7sHxOJublm3Gga3RtK29UUh3v8ly6+fjxP91WV5ecEeLU368r8YSElbJMR7V04kBxeU02sq3KjujdLW60DgQn9CUf6PRhW5Mbm1bkY1vjMMKJyT8uHggKeHR7P7yRJHT8+U3eDxsdB2NJbNnXD\\/ljf3eh0XCTL0wcAa6osSH7VOtwqiBbBIAKMfS7A5hflIGvXVOGN46qIMjjb4GhVyXgdAewsNSB+68oBc+J8ISjZwzQ5E5dgzcCbD3hndQcwXOhpT+EPW3uUeIEjDSQuKzagYNdwVF3KcsU\\/khyjUkyLqGU7ieEyNNanCjt0X9ni2+dLyKWK5lGVj2PtdWOUbEXAJAUJGw97kJUmNjVR5Qpnt3fh199biEur3HglSNDU\\/QsKC6tsuIrV1dAfz5eVnqaVtP0WaAJIagrNE\\/q7zBqCL6+vhpXzM8HOYMtoz0VM3f7qgrcfEnZWT8mNUdACMGiskz8pNg+bluJAtjT6sG+jt2jQj8uNBFBxtbjw7hpWRF0p\\/UA5DkOl9dk43fbOhGMy6O2dkNBoeSdo8MV6xeW7Z32ltMWFCX3tbXM98dExbW9Ks+E+Slai3e4Ivig1TUp13Www4cdTW5sWp6PbY2uqZAmEEJRYufxiWVl0PAzKv19qiUQGo77SHjGJ5qA7jyfufYsf17NcUjPHFCC3S0e9LkjqMi1jHpOi0vtqMwx4mD36PLXgYjA728O1lFK+ckIyJzSWVHcOVw35E+uEBWiJwmASyodyDJrFawMYG+rCz2e6KRclyhTbNnfh5pCGy6vyZ7058CDgjv1h6UszxbS9\\/i00x1NXcbXqsPFlQ7FcZqQCXGGEstv++meSSnhO2XiRCnIgXZXrTcmz1NaQQwagkurHIqndAlJwvZmFxKTWNd5xHpyYdPyPJgn2WkjgYMMDjJOBQ8ymEBdQGKCjPea3IrpOSqOYHVVFgzqVHckr1hYbl5NKZ1wLZkycSIEdPcJT7ErEFW8zZJMHRaXWhVP6fo9URyYgNimM1tP\\/agutOLyWseUDFMWijSrdp9pfXEHTnow6IsqzFuCJaVWFGUoly0aCiS0HUPhZZMxnKdMnDZtpnynR1qWlDiV0lRdWGJDrl058LK+y4duV3TSr\\/FvvqcCGDXMD8RskdlDpzuC+m6\\/4me5mSbML7YrPu2kSFU97siKX7zRNuFbuymbgTfYj1Z4ApE6pW2MihBcPDcLWoW6qJIsY3ebB9Ep6L4qyhQv7HeiIMMAh1XPRiwzSGaNikYSFPva3IoBmXo1h0vm2KFUwVcG0BcQqpNaU+5EX9OUnNZRSvUPv3BiaVSiiuHudqMaF5VnKhaV84aT2NvmnrJ3u7\\/Tj5cP9eEfr6s6595nM2pSTQPCCXn0UXfaXWN6qxMFxb42D\\/yRJDJPO5TiCMGSOQ6YDRqFUAiCQDiZ29HZUw6ge9qJEyEk9okf7yhxBeKK07IkU4fybOWuM52uKNqGp64TsiBR\\/HWPE7k2c8oGnufL8R4vQGUMhSjeaXBBw3HnPKTS156hI3Wx5thh0qsnVZj+85WT+Pm7PWkm\\/xT4WORVNC4iEE3nqq0ETYNRdLkjo8QJAOZmG1CaoVGM0\\/KEE1p3VFpBKd0xkcGYUyJOm3f36B9\\/r3WVKEPR37Sg2IZMk1IIAcXhDg+84eSUvqS9HX6c+N3ByRmwhIBSikhCxrbGAPad3HMWE+nUgCeATNM\\/DCHTqMYzX1mOi6sckyoBB9vdzHycALzhBI52+bCkNGPUwVSWRYfaoiwc6R1d7UKQicoTTCzbsuWECkByWomTn1PnDoeEalkhellFKC4qs4JXiJIWJYpDHV6I8tSGPZu0HD653AGzYikVcp5TaeQ76Dl9GwUoEEhSbN4\\/MCWpNueDhicsVGIakZCAve1+fHa1DPVpQaYqnsOyciv+ukeGcFrUgCxT+ELxumRFft5Ebu2mRJyON3dn9HujRqU4AbNei7qSFP6mSBINvYEpN9EzzTp86+YFKE1Rz+ZC0+0OYWfLMNqG03zqk3TYXjHOzuXgQyCSRJbl70MHOEIwv9gCo04Nf2x0+d4+b9R0+HhTxrQTp7hAFidFKBbCybNpUJSlfDLm9ETR5bkwlQd5jigGhKYDPEemx5Rn5\\/zTjm5PDL2++ChxAoDiLCOyrVr4Y6PDehIylx1IqmsppUcnyu806bOPUsr7ouLCmCAphl1XOIzIVnA8UwBNfQH4Iwk2YiZwY8lgjIU3nERzX1BxXcmy6FHu0Ct2BYklRd4fjM2fyOE56eK0vatLPeCNVogyUcynm1eYAa1m9GmOLMs40h1AUmJTcdqKE3t1046ERNHY64WsEO9k0nKoLbAols8WJEKGA7F5t23ZMmHXMuni1N6vzQlEhQqqoLY6XsbiIj0UKqQgkqRoTKHgDAZj0nY6ONEbQCyp0HSTEMwrsEGpIAOlFGGBzts4d13RtBGnrvYe23AgblByhuu1GpRkKytxMBKF0x1io4XBmGJzt80lIBBVbnwwN88Ck1bBVU0I+r1xXV93m32irmTSxclDjRUSOMXQ9gyzBtk25YTCPp+AwaDExgqDMcW4AlG4\\/Mp16PPtWmSmahJBuHyPoJs7LcSJ0gc5n8+bHYkrV\\/8rsGqRYVQIvgTQ6YogFEuykcJgTDGheBKdHuWsjAyjFjkWZYMiHBPg8oQmLOJ2UsVpCx4igqxakJSgILUUZQ4tTHqFxpkyxcmBIAQWwcdgTDlxEWgZjCo6xY16FYoylU\\/skpKkEgi3iFI6ISFKkytOW4AhfzhHVji34QhBscMClYK\\/SaYUzmEvZMrc4QzGVEMp0DvkA1U4jlJzHEqzzSAKp1gi5dA9HLM9fujQhJzTTqo4ffkST55M5TlKJ3WEAEUOs2JxuXBCRodbYKOEwbgQ4gSK9uEYIgrpUYQAJdkmcArCRSlFIpmcs7y0ekJqXU+qOB1sFNSusGxRigcwqDmUZOgUT+piCREDIQksUIbBuBAQuEIJxBKjfb4cISjP1MKgVoonAHxR2fbB0UD6b+u6utvUvlAcSuaRTqOGzaSctuILx+ELx9kYYTAuEK6oBE9M2elrMxmgUQicBiHwh2I4dPTEhBThn1Rxys62zdXpVPmKN6inyDQp\\/\\/pAOI5YQmQjhMG4QERiIgIh5dQxq5GHSfnADjoNya2eY5+T9uLUPSTrognlrgwWnRYmjbL1544mkRCZODEYF4qkICIUVQ4nsOnUsOuVCzGGk5wqkDDkUdqpS2tx6u0fIklBWWSMBh00aoWcOkrRHaCIiazBAINxoUiIMgaDglLEADRqFQx6Ze2JCzKCwaAJg7rz3tpNngJQSkoK9JWiLBOFz2AzEmg0iuFP8PijiseYjJkBe7Ppj0QJ+n1JKJ20a9Q8rAZO8U1KkoSCTNUi5BJT2ooTBTi9Xj9fpnSUAhFCkGvkoVV0+FMEQmE2ghmMC7mAUMAfCisaCVoVQV4K6RFkqkoQzRzg\\/IuhTVqxuf5+aIcDRCfKvKLC2owGxUgBSoFgJHbqobBQAiVEADLhMYHlmicHwk2g6TQdVquZM14pKHyRqOK2jiOA3aAH+Vi56Q+RKYfmAcm9BY7htBWno5E2yR2MiYrbMwKYjAbFl5kQZbgiLG9lLHQ8h41LczDoDSsMj\\/TBrNchw\\/A3gcow8Pj0sizUlVgUg\\/iUcJhVuGN5JmJCeieBCzKHtxsDcIdnTvDwcFSGQEeLBAGBQa8FIUpZLBT+QBiYgLJOkyZO++qT1BdQ3p59\\/OZG7VllIJQgzGoagzy7Cf91+9Jpca2qjxX\\/qSrKxE\\/vWQWAQsWPz1+6oCwbv7w3K+3vMxyXcOsv9uPd4wMzZJQRBOM8BJFCr1IwLvSpD+MCgeDEjJ3JurXawiD\\/wt6EYsMyjsiwKO\\/qIIoSEgILIzibST\\/Tr3s63CvPzzwnaSIpQhQlQCFv35CiFyGlQCQSw5YJMJ0m7a1XV1VlWS3aMqVtHU8ozDqqGDkuyTIEkdVxYjAuNJIkK57WERDY9BSqFH0MkvLExAFNmjiFOY6XIFtSfa7hlLdtskwhSkycGIwLjSAKkJTmIgG0auX5S0FhN6tKvnX55TlpK0566AhPlI9rNCoeFrWKeZUYjHS2nOTU0Yb8GG7hREIQXEOx806OnTSfUzweB5C64atSE80PVTldXowkXzg\\/As8x6Z5+zCy\\/Exnj701qNTQ8j6RElZ4CtVgs5\\/37J7WpJp2mxeL8UQE\\/e7MdNoPmgoilWcvjzsuKkGvTs\\/k+I6bzzIPnuFPljiZvjk+aOKk4wvEc4abjEAlGBfx6a9sFe\\/F5Vi2um5\\/FxGnaTdhzHXsUlDk5pk6cZAoqUzrl0ZQEwDULs1Dt0J6fTH24IPzd9nNqLEGrQYMMk5qNzmmEmqO4dXEmarP5sxyvFHEReP6wC4PB6dPQIyZJk+72mDRx4glSryN0JGQgpSicxz3zHHD76nLcsbxwWq9FPMeqMkwndBoV7rmq8px+1htK4ohzNwaD3rS6JzrG34cF8dSp+uhxquI5tRiPnndVgkkUpyRHUjj7k5KEkCCmzp47T1VRcaf2xGzOMKbBgsKlaZCpmueRyjOjHmOaJgU56B0OnPdp3aQ9FRWlwWRSGiApbiGRwiRUqTho1OenmaygAWN6kZ4jVqXiwaU4NY4kqOJRPAFBQiDeP\\/U3RNPWctqyY4c3FFP3K30myhwCMR6U0lENDgjIeW1pCKGQZRmSLKet5UQAcByn2BeMMbvgOAICAi4Nt\\/EqXlmcKKXwRQkk5SK30Gu0AM4\\/AXrSxGmtYxn3tqGFBwmNWhgoCIJR5ShwtZqHTnvuzmBRInjm\\/S7UNw2lrTCtnpeFa5aW4KX9PegcjkzMXpYxLSwkeuo1EwqUOYy4+eISqFUcjJoPSwulzzjQa3nwvHJByFg8mcI4AExGPTbhE+edXTdp4hQrEKjVYpGBkNIrQjQaHym3QE7f5xLYdPScXxQF8OZRN95MV6vp1C2tXViC5w8PYGuLh83ZWcKH5W0oCDgAV1ZmYP2ykpFPSLpV4qCw6SXFNBUKIByNpdyMWs2WCbmCSROnhUYjn22LqBTDtCgQicUUBUjFEWQZuPN8rOntXqAADBoOX1xXiptX5oMwo2m2GE6gZEScCChyDBoYNBwiSRkSTa9BQECQoVeNpKko3Eg4Fk8x0QgcDiOPTWksTvn5+UmzzulWcTKSEjfKcvKEY5Dp6GIMhABWk1Gxyt7M8jUAa+cVsN3crLem0vfCMk7Nw9OR6EiHJKVqtTyRUZ7FmTZh2AFg8LzmyORtX4joDYTqORBRaQUZDElIiMrlGKwW86ywJggZebXsz+z9k77aRGC3GBXnYUIAhsNE0XJScUQMBOO7gWz\\/eS\\/gk3mDoQg3oFbxirMyGJWRVCi9SgiQZdMqtilnMBhTg5pIKLQpVw5JCgJC0aRiPTaVikckxvUAvec9gSdVnMoKM4lGrRwoGo3HISg1ziQExRYCg4odszMYFwqNWoVsi7KRkBBFhGPK3YANagKTRRskpDiW1uJUkkVDRo1ywEMgnkQwLijuwbMMWmjVKjZCGIwLJU4a9akmJKPxRmV4Y8rpZ5IoDIsxd\\/tEXMOkilN7Z6gtKUIx4CgQAzwh5Vgnm1kPY4p2xwwGY\\/Kx6QkyTMq7nmA4jlhCee5qNdpkPKSekCTBSRWn2oW1UpZZo9Q\\/BvGkCG9YOcLdotfAYWTixGBcKLKMGth0ysHQrlAMSUFhQ0QpHFYtlq2qmRCH8eSKU34gYFBJTiXfdkyg6HDFISsIl0HHo9A6uYWsGAxGKijybRoYtKNdKzKlaHclEFN0FxPY9HR4dV4iNhFXMamOnUcPlIbMho5BkNEBW5QCPUP+kWqZp6mXQcOhxGEAgW9GypNSadOxkCmFKxCbUc\\/AYdWnLNU87I9e8PeeYzPMWmkiICh1GKFVcwrGEUX3UECxEzAhgEFn6nmqKWdC0h4mVZw2bwI+9UtNj5qjSErkNG2m6HBHkZCA0wPCCSEoyskAIX2gM0ydKCh6AzKiSQqzbnw\\/c7TLh\\/\\/39BF4IjOjm2y2RYef3LkEdYUWRWH656cO4Xh\\/5IJdX3GWAb+8aymKs4yzU5wIQVFuhuJJXUyg6HDHFI0KDUdhM9CTD60FfTjdxYkQIm36+Qf1Gp4Xk5KsOm2WoteTRCSWhEGtG\\/Vw5uaZYFAThJMzzXYauaezuSt\\/JI79nQGEEjOjTXuOVUKq7uKUAif6wqh3Xjhx8sVkzOaCESY1MC9HpyhO0XgCg96oYoyTWqUS4wlaTwiZkN5uk16nobzA4rcYVIo24FAoAXc4qTB9geJME8wG5hQHAE8kqRwTNs1FOpVtyVJ6LixmgwbFGQbF1zAcEjAUUq5IYNLzwsVV9gmrNTzp4iQHw81UlpyKFkE4gUGf8gqZa1Ejz8LqaMuUotcvISnz0\\/5eOAJY9Tyqc3TQp2zfTWDTa9KyvtFsociuh8OqvKXt90bhT+Fe4IAhDY\\/2ibqOSY90XLmsMv5Oqz88EAiNMgVjSRHtA2GsqaGjnKMWow6l2RYc7gnP6oFCKeDxR0Cn8dGAQU2wqMSCdXW5WFWVhbm5ZpQ4lAe\\/w6rHw5tqsb3Zg60NgzjSFUA4KYGZU1M24jAvVwOrkVdcKJv7g4gmZcWfy7OpA3UV+RNWA2jSxWk40TloM2rbCBeuO925Lcgc6nsjinWddCqCBcUWvHCof8Y5xc92sHiD4WkZVaHmCa6oduC2i\\/Nx7cJ85Nj0Z2wWynEEl9XkYtW8HNx7RTneaxjAX\\/c68WaD66xPORnnYt0SVBZmQq1gucoyxYle\\/6nwHzLq5zKMulbv0czBaSNOl1ss3PuZyVYtTxEXTz+xA5qcXoRjSViN2lGDdFGJDcYZ6RQfP3GRoj8oKJanZn\\/CtQAAIABJREFUSGfKs\\/S474pyfHZ1GfJsurOuMsFxBLk2PT59WTnWLSjAUzu78Nh7HWgbijAFmUwrV8OhrtiuWJ43GBPR1B9W7LGn4SBnW3UnTmyauGV00jf2lZWVCZNWd9CoVSt6dLu8MQyk6NdVkWOG3aSb1YMlmZTgCcvTSpiuqM7Ez+9chH+5cR7y7brzLn\\/jsGrxT+sr8cs7F+OaOgdTkEkk26JBZa7ylnswEEePV7mpitmglg0GbcPDhEzYkfKUeB21NNasInRA6TNXMImu4ZDiz+Xb9ShzzHJxEkVEU2SApyOfWJKLH35qPm5YWnDGLdzZwHME1yzKxQ9vn4+bl+YyFZksizfblDIAtWsoAG9QORhYTeT+TLXQPKFbzKm44XWXVfkKs4xeJcdJNCGhocun2InEYlBhcaltVrtCgwkJvvj0CL68siYL\\/\\/6JaiyryJq037GoLAPf2ViL6xbkMCWZYAiAJWUZMOtGe3skmeJwVxjKB3UUxQ6j75NXVU1oGsOU1CWJHc0czNSTIzzBwtN9mhKlONgZQFyUYdD8\\/QmBiuNwcUUmHld1KubyzAYCURnhRPrL89xsA\\/55fSUuqsic9N+1qNSOr6+fi253BI39E3+aK1OgvjcCb4x+bNqe5apPKGryDNCopk9IhEENLC+3KVq8iaSIw51exeBUnhBY9epDohwdmnbidNttRLrr13vqtaqgGBWo6nS9buwLwB2IodhhGvWzC4ptyLHq0OWJz0ZtQjSWQFJIb2XW8AT3XTUH1yzMmzorrS4XD6yrwP\\/78zFEhYk9MOn1RHH\\/7w6e13dkmdT4v3sXY8XcrGkz1nJsetQWWhU\\/Gwgm0DQQUPxMr4ZYlGE4fFFBQXQir2dKxIlSqv6vF461OszqZLc3Oep39vriaBoIK4pTQaYB8\\/KMs1acfNF42ovTtfOzcedlJSm7w07KFoQAt68swY6mYWzePzDh3z8cOL95Fo1zCE0jXyEA1BSYkJ+h7G9q7Q+iz6c8Bw0alVfHywcm+nq4qRlIRCjRq+t1vErRYRaKS9h30q3odzLp1FhZ5ZiV7ZNkStEXkJCQ0vfmTVoOn7ykENkW7ZT\\/7gyTBrdfXAybPv2qpiZFCcMhYdqEp3EEWFWZCZNW2d+0v82FSFxSsjxQmm3wr105b8K72E7Zhlgbqh62GjT7eTL6dcmnbj6cGG0h8BzBykoHrDoesw4KuP1RpHME5oryDFwz\\/9xOzySZIiHKiAsSpHPMtF1bl43LKu1p91xEmUOfNzmSvT8NsBtUuKQyW9H6DcVF7D7pg6zge+M5wKrFLvmE3TnR1zRlS85ttxHpnl\\/vaWgcCIjh5Gl+J0LQ2B9BrzuC2iKbgrlpRmWuEfs7g7NMmyg8gWDaRsjzBLhqfi7slrML90gIEj5odeP9piG09AUgU4rKfAsunZeLtdUOaNXjX4hsBg2uXZCDt467kJTS6N3Rkch+Ok1iZ6tyDajONyt+1uMKobkvmGJLx4uVhRn1mzZN\\/AqqmrqXtZl\\/fPv\\/b++84+Oqzrz\\/O9P7jDQalVEd9Wa54l7B2JhigsEm4IUASTYJCyEkbMib9yUY+CTsJksCGyBAnNBCB2NwwTbgCu5FtmVLltW7NCNNr\\/fOPfuHbDZvuCPJxLZGo\\/P9fICPmDszd0753ec85znPk1y\\/q87u9dnDX3vUdTlDONTYj\\/Is09eWcBaDCnOKLTjU7BlXuTE5Aej2xm90eJJWjnmlKTGTxon6clwhPP3JGbyyuwU9Xu4ry4KgD5bPW3Dn3Fw8eG0JrOaRJXsjhGB6sQXJOgV63JH4ESdQ9HkDiFIKaZyrEwEwu8QCs14ptmrD\\/oaBmIHSZq1soDRdeZhcxODLy76sI2RVNNOsOmLWKk6K1fINRym+qLODi3798SeTSjC\\/zAKtYnydVA9HonB441eOc5JVsKWOPGOkP8zjNx+dxu821aPbw52zCAfLS1IAfT4eT29twG8+qoM7MPLYrtwUHXLMmrib8t1uAWEu\\/h+nepUEC8pSIRU5Txfio9hdZwcX41yjSaupjhhN1Zfivi7rbL9uQo7HatYclIsWYCc40DiAzgHxOK6ptiQUp+vGlThFOP7cjk88PnkpcswKGDUjd4RvONyJV3a3gKexfw9PCV7d3Yz1B9tGvJzVa2SwWZSIN9+cM8DH\\/U4rAJRk6DAlT9xv193vx7HmAdExqCBRPkVNt\\/9sds4lySF9uU0RWm7VfZGiU4j+mGZ7AIcbxTMuWJM1uLIiDePJdgpwUXiC8RkdTkBgNcihko9MOINhHpuO9cAdGt7690UEbKruQSA8MieSXEKQbVKCxJmIB4OhuE8SSAAsqkhDqkkt+vr+sw40O8S1J82k4eZVpNRdqnu7rHOdECJMqMw9mmpUnRV7yvk5YMdpOzj+6wNYKiG4qsICg3r8yJMrKMAdx6EyBu3Il1K+QBj1nc6RDhTUdrrgCgRHOMEINCpV3IWbOEMCXKH4Tq1s0siwuCINMpFduggfxY7TfQiKLk0pUnSK2gWTs04nhDgBwLcrk7vSdGRXLPfR7rpetDjEjyRMyU\\/GpBzjuBEnnz+MSCROz9WRwUDIkVorFEBUGPlEDfNRRC4gvIDEYSBcIELhCcS35TQ5x4DJeeJzqrnPjz314ks6uYQgWS\\/bvqDA0pQw4kQIiZblpuxO0ilEw02b+kLYe8Yh6m9I0SuxpCoNknESkOkNxfGygAK+QHDEGToVMin0F+CfsujV0CvkI7wVimA4HHchF5EIh0Awfk82yCUUyyamI1kkLRGlwBd1vWi1+2P0jzxQlmHYfrGKGcSFOAHA3PK8Q5km5RmxpV2QF\\/DpyV4ERcpzSCQES6oykJ2sRKJDKdDr5eI2+yMFRZcnOuLYIr1WibnlI3uwEADzytJgGmHVZ0EAet2huEtlHOF59Pvjd11uTdJgcVWGaOBlIBLFtpN9CPHivZ+RpD6zqCLj5KW8v1ERp5unJHUkaWVbFDF27b4804+6TvFDhuVZJiwoS0WiVwOmlKJzgAMvxKuZSNDaH4E3MLLYIqmEYOWMLEy1mYa9tipLjxVXZEImHdnw9IZ4NNrjb1czIkjR7hJEq1rHw+NlcWUqSjMNoq+e7nBi39l+0RJQSimB1Sj\\/\\/Aor7b+Udzgq4kQIiVZkmj5PN8hFT1e2O0P49GS36Fk7tUKK6yalQ5fgMU8UFANuX1znT293htDWP\\/Jd5KocE362rAgVmbqYD5fyDC1+fkMJpheOPPVK50AQrf3BuOxDh8sfl32oV8lw7aR0qESi8QWB4tPj3eh0xQi81MsHss3KDTk5OZe00Udthk+2pRxKM6oPir0WFSi2Hu+B3Su+Xp9fnobpBUlIZAQK9HrDcV11xeUN4uBZxwWdH7t1di7++J0puHtBHgosKhjUchhUcuSblbhjbg6euXMybp+bd0HL34MNdvS549C3QwG72494VKdZBSbMLxVPedzjDmPz8T7R3E0EFPlp+tMr5044fanvcdSOc9+9yOa66ak9W051uOcGePK1s3aHm134oq4PN8\\/I\\/dp7Uw1KLJ9ixe4zTvAJWpo1GKHocsd3SaSwQLD1ZB\\/+ZV4uDBdQAHVRRSpmFJnRZvejxz0YKZ5hlCHbooNWeWEHvP2RKLbW2BGOxqU2ocsbRTgKaOLo3LpCCiyfmiF+XAXA7tpeVLe5RN+rkUt4q1G9YVGpwXGp73NU10YLy8y7MpPUosl4vGEBG4\\/1ICjicZUQguumWDEhM3EjxjmOg38M5AP6ot6OXbX2C36fRiFFaaYBC8vNWFRhRmmW8YKFCQAO1Nux+7Q9btvH5YsgHImvHdcJWXosm5QpXm48HMWmY93wR8TDPjJMirYZBfqtl+M+R1WcllxhOZWsUWwS9YuD4LOTvahuHhB9ry1VjxumWBM2rCDC8wiE4j\\/B3oCfw3v72+ENXf4J6A9H8e7+NvR641fEA8FwXIWDSAlw47RM5FnEH+xHm\\/vx+ak+UYtdRgCrSfl5drCyJuHFqcxi8VZlGz6O5RjvdEXw8dEu8CLb6VIJwbeuyEJRqgaJiCsUhScUHQN3SvDx0S68t6\\/tsrtWPj7Ujg8Odsb10tcbjsAXR5ZTUZoWy6dmiYYP8FEBHx\\/uRE+MYwnpRkVgTlHKllWryGUZmKO+5XXPsrza0ix9vdjuDQWw8VgXGnrEc8lU5hhx45SMhKzO4vbzCETGyL2GBLywvQmHGh2X7TuPtTjxp8+b0B+IbwH3hglcgfjwi0oIsGJ6Zsw84ac73dhwrFu0aCYBRbZZvfeG+bkHLtv9jnaDzbJltGSaVG8YlBLRx0tttx8bDreLhhXIpRLcPD0bthR1womTLxRBiIuOmfs91OTCf21qQFNf4JJ\\/V1t\\/EL\\/f3HDuaEV8E4xE4QvEx7KzOE2NW6ZnQSbiRxEEio1HOtHQK95\\/RrWMzzCo356dk9I5bsQJAOZPzNiQm6I+LWY9RQVg3eEutDnEw+gnFyTjpiusIAkUlEkB9Hg5BDlhTN33+wfb8Z8f1aLFfukEqmMgiCc\\/PI0397aMiTbheB6e0OiLEwGw4oosTMgRD4Jt6vNi\\/eEOiB5IoBT5Fk396gWXz2qKG3EqmGNrzEtRbtbIiajCHG1xY\\/2hDtFIW7lUgttm56AkRgnlMSlOlKLHFYZAx9aClYJg7c4m\\/PLtEzjSdPGtmpOtTjzybg3+vLNpzLRNiCfocPGjHiVebtVh5Yxs0ah7gVJ8fLgTx9rED9yr5SSablS9s+KK7DPjTpwWEcJfNSFrXY5Z0yr2ekQgeO9AB9pjHEKcmJuMlTOyE2bnjlJgwOWN6wDMWAggeGt\\/O+5\\/rRp\\/29MC\\/0UIQApxUbyztw0PvFaNV\\/a0IDqmRJuizxkY1dNWUgKsmpmFCbnigctt9gA+ONQJXhAfjAWp2vbFkzI3EkIua4qMuDkD8sCykqMZJuW6WKEuh5rdWHeoUzQaWSYluHV2DiblGBLGcnJ5fGOmcofYImLf2QE88Nox\\/Oz1o9h1qgeBMH9B85PSQX\\/N7tO9eOj1Y7jvlaPYUdcPjLHtD0oBp2d0HzTTbCZ8e3aOaCVfgVJ8cKANh5rEc20pZQRZSep1D15TePxy33fcFPwihEQfefvk28324IqW\\/lDe19buAsV7B9px4zQr8tO+XiWiLNOAO+fm4FRHTVxGC1\\/YUoCi1zP2668PBKJ4cUcLNhztxsIyC5ZWpWJGkQVpJg30SslgECD5ysAApRS+sIBuZwCHmxzYdtKO7ad60ekKjzlR+l+7iaLLy4ETBssoXW5UUmD1nBwUpYtXVmnq8eCd\\/W3gYhwwzzKrW64oTXn7UqZGiXtxAoAJt1YeTT7eva7TGfqpmC\\/4UJMT7+5rxb8vr\\/jaU0BCCFbOysWWE33YcrJvTE\\/qMCfA7idjdkL+oxXV5Y7gzf0d+PBwJ6zJWhSkKFGUqkSKyQDduWyafn8ADpcHZ\\/vCOGsPo9vpR5A\\/X3WGjOnf3+uhCEcEqGSXX50WT0jFqpnZotHgUUHAO\\/s6cLTVK241SQGrSb3u8RWVR58YhZaLK3FaRUj0oTdOvO8NRVad7Q1m\\/ePrPCV4a18Hrp2ciSqR9bM1SY3vzMvBgYZ+OINj13yKcFG4QlEkFgRBHmjs86Oxz4dPTwOEdOPvTSdKzy9+yFfvSQQCwfC5QgeXd7qZtTLcOS8PaTHygx9vceGtvW2IlTIs26xuWTghc1SsprjyOZ3nd7dPOJiTpHxfEcP3VNPhxZtftoKLim+z3zAtCytnZGEs53vyhzh4QhEkLgQUBAId9HkM\\/oNzwX+JF1LrCUYQGIUqLKtmZuO6KZmir3G8gDe+bMXpbvFNJpUMyE5WrXt8RcnR0Wq3uBMnQkj0qqqctwtTtS1i5yEEELy1tw27a8WXblqlDHfNz0NZhn7MDmZvIIxQmAMjMXCFAVfw8j4sq7L0uHtBHjQxnvI7TvXgnX1t4o9wSlGUpm25cVrWqFlNcSlOAHDbRMXxCqt6nU4p\\/hRtGwjj1T1t8ATFn0YzilJw90IbxDNtxj++YAThSJTN6gQhEuHgD1y+Q9xKGcHdC\\/MwNT9ZXCwDHF7\\/og2dMSok61VSFKao3n5g2ehZTXErTjabLbR0SvbL+am646KnSQnB+kMdWHegVfRliYTgznm5uGFyxpgbyBRAp1+An6dsVicIHB+F77IVOqC4eZoVd86ziZaJpxR4f38bPjwc68A0Ra5Zc3DhhIK1o2k1xa04AcB3Fx6tLUnTvJGskYqaR96wgFd3t6KxVzyqNc2owvcX2ZBvVo0tcaIU3R4eUYFN6oQRp2gUvV7usmRtKEzV4p6FNiTrxJP\\/ne3x4LXdLfBHxG\\/GrJXzc8qSP\\/nxMu2oJ8mKW3EiZFX07hsq3spO0WyLdW5ud\\/0AXtnVDD7GTF5clY7vXZkP+RhKN04p4HT5x2R0OCOGOAkSdLr4Sx5Uq5ASfG+RDQsr0sSXl7yAV3Y248sG8aNFBBRWo+Lj+RONzxKS4mHiNATXFqd0VGUZX7GlaERPkgoUeHV3Cz49IZpME1IJwXcX5eOmKzLH1MJuwO0B06bEgVKg3+W75A+clTOycM+iAtFIcADYUt2NV\\/e0xDyXmJei9swtTXt79bRSRzy0W9zbFD+6cdZGq0n1t1jWT4crjLU7WtDtFC8EkWpU4UdX5aPSOjYOBnNRij5PmFlOiSROoOjyhHApSxBWZelw71U2WPTiy7nO\\/gDW7mxBl5uLYXUBFp3i1UUzp34UL+0W9+I0O4cEr5+U\\/pfCVE3M1KAbjnXj5V3NiMYodrCgPBX3LimCXhknWeaH2EQMRqLo81EAhM3qhIGg1yMgzF0adTKopLh3SSFmlaSKvs5HKdbuaMKW6q6Yn2GzaKtvmpz18qpKEjcBdmPCG\\/PwTRXVlVm6N8wxnOOcAKzd3oRtx8UbnxCC78y34Z6FtvjIXDDEqXqO4+ELRth8TjD8gSAiHHcJJjDF9xfZcOc8m1j9SwDAJ9VdWLuzGVyMcZeilfFV2YY3\\/8\\/KimPx1GZjQpwIIZGVM20v5aZo1scSl+b+EF74vAltDvFEZxqlFPdeXYhlVelxYjmJ\\/xA\\/x8MTZuKUaARCIXCXIEr8+ilW3Ht1IdQxgi2b+\\/x44fMmdDjFE95JCJBr0ay7Y57t5XhrM9lY6dyVs\\/7iarLf8lYg0j69rsefI3bNpupeVH7WiEdvqYBC5JBlcYYOP76mEE12H2q7fKP2W7hoFI29bgAyEAwe3wiHOVBQ1PUE4AqyJV2i4QwK2FHrQG5KECAEKoUcEkLOHdnhwX2D+ouVWQbcv7QI+WnilVRCXBQvfNaALSd6Yj4Mi9O0bSunZ7y2fFqmI97abEzNAkqp5Jpfb3\\/4YLP7cWcwKiqsFp0Mf\\/iXiVg9zxbjM4C\\/7GjEL94+iX7\\/6KQlkUkJspMU8HMSEAw6TDkuinN\\/wBlgR1cSkSSN\\/HwXQy6Xnpt8BBq5gPaByAUViLXo5PjP26pw1wLx5RylwKu7mvHQG8fRHxAf58lqCT+zwLxm8y8X\\/joe20syljqXECJcMyf\\/T9nJqnUS8Yy+sPt4PPdpIw41OGJ8BnDHvDz829WFUIySf5yPUjQ7wuhzB9HrDqLPHYIzwMHp55gwJbL1FOAwEBjs4z53CL3uEHrdQTQ7whckTEopwf1Li7B6bm5MP9OBs3Y8+2lDTGGSEAqbRbvuh0uKXozX9pKMtQ5+cJHNdePU7L8Wp+uaYl2zr9GJP247iz63eHiBUi7FA8uKcc8CW0IVRmAkPgTA96\\/Mw4+vKRR1XQBAtzOIZ7c14EiLK+bnlFsNLavm2F6Nx+XcmBUnAHji2xO2ZpqUT6foZIFYXfj2vk48u60B4RgVTJJ1Cvz0uhLcNM3KRjxjzHDL9Ez89NpSGDXi8UxhTsCzW8\\/inQOxi41a9LKA1Sh76ufXF38Sz79VOlY76ZnfPVlzotlpdfjCU8WC2wQKnG53I9WoxOS8JFHz16xTIN+iwdkeH1ocATbyGXHN1RVmrLm5HOUximKe96c++XEdAjFiqpRSgvJM48tP3nPVkzkmEtc+BMlY7ajl0zID91xd\\/nyBRbsz1olKh5\\/HU5vqhww+u6IwBT+\\/oRRVOUY2+hlxy9S8JPzihlJMyTfHvGbTsS78fnM9XDGzwFKUpOt23ruk5PnZOSQY779ZOpY7bNNrf+i9818f5F1Bfr7DF9GICpQvArs7iKpsI9JjpCstStchWSvH8RYnBvzMIc2IL0rTtfjVivKYWS0B4EjTAB5fV4sjLe6Y11Rl6h2Lyy1rfn5j2fax8LulY73j9q5\\/rGnrcZfEG+Dm+cKCqCXY2OeHN8RjZpEZerVc9HMqsgwwqGQ41twPd4glemPEBzazCmtuLse3Z+fGvKbFHsATH57CxuqemNek6WWhwiT5o397cP5fx8pvl4z1ziMkw\\/\\/ozQv\\/O8OofkElI7Euwtv72vDUxjq4A5EYlxDcMd+GR26qQHaSks0KxqiTk6TEL28sw21z82Je4\\/RH8PtNdXh3f0fMazRygkk5hnde+rcp74yl3y9NhE586b8fCz\\/5+K\\/rW\\/t9pT2uUAEV2aWgIDja4oJMIsHMQrNoWWYJIZiYlwS1TIIjjf3wR1jGN8boCdMjN5Xj7iFSoAQjUfxu4xk8s7UBsRKnSkAx1Za07QdXTXh4XllaGxOnUWD9a087V3\\/v39sHAuFJDl9E9ABdVACOtTihU0oxrcAs2ukSQjDJlgyNXIITrS54w2yJxxhNYRK\\/hotS\\/HHLWfzHhjMIcrEfopkm1c5b5xQ8cd\\/S3GNjrR2kidSpe9f\\/qfWOHz4o+ILcrD4vJ+ogD\\/MUJ1pdMGnkmGRLFs1SIJUQTM03w6SR43jLAPNBMS6jMCnwyE0VQwpTVAD+vL0BT350Gs5A7LE5MUvvmFOctObpOydtHottIU20zt2\\/\\/qWjU5bdEwpE+NnesCCaQNwXjuJkqxMWnRwTRYpzAoNFEibmJcOkkeFUuxvOAM9mDuOSUpSqwZqby\\/GdhbGFiVLglV2N+PWHtTETxwGA1aRylabpfvXuT+e9MlbbQ5qInbz\\/vd\\/X1XR6LAM+frovxrLMHYziVLsLZp0cE3JiCBQBJuUlI9WgQG2nF3YvS2XCuDRUZhnw6IoyrB4iLxMAvPVlCx7\\/sBYt\\/bGruWQaFZica3h64y8W\\/Paxxx4bs+ezElKcfvvb34bfeOWPh7+s6VW7g9z0SIz8qP1+Hifb3TBr5ZiQYxK9hhBgQo4J2WYN2ux+tA8E2UxiXFTml5jx6M0VWDE9a8jr3vyiGY99cBoN9thj0KiWocKqf\\/aZ+xf9JlVF\\/GO5XaSJ2uEvPPWk\\/+FfPXmwutmuCXHR6XwMn+GAn0NNu2tIgQKAEqsexWla2D0h1Pf62YxiXAQolk\\/OwKMrynBVZfqwwrTmg1qc7YstTGq5BOlG1bMP3DRzzdUFqv6x3jrSRO76T17\\/fXD1HQ8cDFEhr98XqYiVlaLfz+FkuwvJGhkqc5JimtW5Fi2qckzwh6I41eGGwBIaML4hcglw17w8\\/GpFBabEqMwLDJ4RfX13E574sA5n+2Kf\\/1RIAatJ8dKqKZZHHrquoD8R2kia6IPg0Cdrgy\\/98bf2rv5AXkd\\/IE+IcVJ7wM\\/hWPNgmEFVXpJotVRgsJrLzEIzCIATbU5EokyhGBeGSSXBT64pwi9vKkdeauyqQLxA8fKORqz54BSahvAxySXAvGLzzoevK37iJ8snNCdKO0nHw2B468WnWn\\/92BMtbQ5vXo87lEdjCJQryONY8wBUcgkm5iVBFiP4Ta+WYW6xGUkaGeo6PXAF2U4eY2QUWNT4vzeW4YFrS2DSKmJeF+YEPL+tAb9efxodQ+zKyQgwvzRl10+uL11z88ycA4nUVuMqWfUzm5sW\\/G1Pw5qjba6F0SEqoCRrZXhwWQkeXFYIrUo+hMlN8dGhDjy9pQG7zzjAyjkxYk80iivLU\\/DjpUW4fmpmTMscAHxBDr\\/fXI8\\/fHJ2yAeflFBMyTXtfHBp8RO3zc\\/dQQihidVm44zzAnWszbWQH0Kg1HIJfrykAA9eV4I0o2rIz6xuduLZbQ3425dtCLNlHuMfUMoI7pqXg\\/uWFKIyRtjKebqcIfxhcx2e3daIEE+HXMrNyE\\/auXJm\\/poHrs3flYjtJh1vA2XLG8+0Pvqrx1pcgXBelzOYF8upzQsUBxoH0O8NoyhdD4sh9mHg9CQ15pRYYFDL0NDtgTvIIsoZg+SZVfj5DaV4eHkZciy6Ia891e7G4+tq8dL2JgxxIgVyCTC32LzzJ9eWrbl7Yc6uRG076XgcMBtff6b1j7\\/9j5b2fq+1xxUqiGXsCBQ41upCm92PzCQVcocYXBqlFLOKU1CYpoHbH0GzPcCyk49jpARYVpWKR1aU4zvzbdAoh67CtutUDx5bV4v3D3aADrGgUckIJmUb1j38rYr\\/\\/NY0666EbsPxOnje+vNTrb\\/8+SP7jrT0S3iK6VzM5RhBfY8fJ9q90KlkKM80QBLDUS4hBCVWI2YVJkMhJTjT5UGAY5kNxhsWnRz3Ly3CozdXYHqheUj\\/Eh+lePPLFjz2QS121w9gqPBwrVKK3BTVS6smmR76\\/pLyU4nejuPeg7t2W6117a72Rxv7\\/P9qH6aOXZZJgfuXFuEHiwth1MiHvDbMRbH+YAde3N6EXWf6WUzUOEBCgEVlKfj+Ihtump4dszrKeVz+CP70WSOe21qPTvfQGVjT9XJkp+ief\\/yWit9dM+mFNkIeS\\/innnS8D6iPX3\\/O+\\/KLr+3r6OvVuEORSn9YiKk6nlAUX5xxwOENIz9VC4shtqNcJpWgMseE2cVmqBUSNPb44GPpVxKWLJMC9y0pwCMrKjCvLDVmDqbznGp349cf1uKZLQ1wDuOjtBrkgekFyS8+ec\\/CRxcU\\/1fveBAmZjn9HW2Uqm\\/4xZZ7PEFhTbMjkDL01RSLKyy4f0lxEN76AAAQf0lEQVQhrpuSOexAjPACtlR34eVdLdh8vJcFbiYQChnB9ZPScfeCPCytyoB8GGspKlBsONKB57Y14rPT9mGnYIFF60jSSNes+82Sv+YQMq4OdjJx+gd++NL+fzvU4v75kRZ3znDNk5eswo+uLsR3FxXArJcP+9m97hDe\\/LIVr+9pQXWbZ0jHJyPOl3AApuQZcOe8PNw6OwepBtWw77F7Ili7owEvfNaItoHwMBOToiRdc3JukfmPa38068\\/jsY3Z7BDhvtdPXLfrRPdDdd2ehcP5sxVSgltnZuPexfmYUZQyZLoLYDBws6bNhb990Yq39rWjwxli3TCmoMhJVuO2WdlYPTcXFdnGIR3ewGAOpgNn+vD85814+0AHuGEsZ6UUmJRt2HN1ufm3T6xu+oSQVePSH8BmRQzWbj41+anPWn9k90a+7xiuXBSlmJhjxA+utGH13DwYNMNbURwvYHddH978og0bjnbC7mf+qHjHopXhxmmZuH12DuaWWSCXDl8fxB3k8OaeFrzweRNOdHiH\\/w6dHOkG+Us\\/WVb2\\/D1XHq4Zr8LExGkY1h3oMP\\/p0\\/qHzvQEftg2EDQNd71OQXDrrGz866J8TBtmC\\/k8vlAU209248297dh6svtcQUTWLfFkKZnUMiybmIHbZmfjygnp0CqG30cSKMXBsw6s3dmMd\\/a1wxcZ3s9oM6tcpZn6F366fPJ\\/XV1u7B\\/vLc9mwXBDk1Lpnc\\/tv+dgk\\/Pehl7fpKHO5J0fzBOzDbh7gQ23z82DRa8Y0fe4Axw+P9GFdw90YOvJvnNnqlj3jCbJGikWV6Zh1YwsLK7KGDZ85Dx2TxhvfdmCP+9oRk2nd9h+lBKgNF1XPa3Q9PwrP5z5V0IIM6PZ6B85j607veDT6s6fnu7yLh8IDD92lDKC5VOsuGdBLq6akD6iJcB5kdpR04N1hzqx9WQP7F6OOc4v64SgSNUrsGRiBm6ZnokFZakjFqUIL2DbiR68srsFm451ITSCZBVJamm0KF2\\/7uYZuc89vLx4F+sBJk7fiM3H27Ne2NJ0\\/+ku710N9kDqsM1HKbKSFFg9Jxd3zrehNNMwoqUeAPjDPPbWO\\/DxkU5sqe5BsyMIFoFw6ZASIN+ixrWT0nH9VCtmFqVCpxxZGKBAKU53ePDa7ia88WUbulwRDLszAoqydF3\\/xCzlq7fPL33yhqnW\\/kTLKsDE6TJTU1Oj+NP+wIoDTa77TnV45gT54ceThABX5Blw2+wcrJyVC2uSesTfF+EFnG534ZPqLmw+1oVj7d5zxT5Z112ERTu0Cgkm5Rhx\\/eR0XDMpExVZxmFjlf7u2YNuZwDv7GvDm3vbcKTFPSIrV6sgKMs07LmqPHXtf9yetIGQXCfrCyZOF403vmwufXpT\\/Xd7PJHvtQ8ETSNpSrmU4KqyFKyek43rp2bDpJWP+PsEgaLbFcQXtb3YVN2L3XV2dDjDzJr6JlaSBMhOUmF+qRnXTkzH3LJ0ZJhUMc9MijHgi+DjI51468s27KhzDBsecF4MC1K0LqtJ8dLdV9rW3rOw8CzrDSZOl4QdlMpeePrLm2s63N9r7Q8t9o2wfLleSbC0KgO3zszC1ROtMKplF\\/S9gUgU9Z0ufFbTi09P9qK6zQOHj2Pn94axXlN0ckzJM+LqyjQsrkxDkdUIteLCTnC5Axw+PdGNt\\/e1Y+uJnhHtwp3v8+xk9bbpeUlrv3PfrA8XEcLSpzJxuvS88kVrwSuf1X+v1xv54Zluv0kYSbNSCpNaimWTrVg5IxNXVqSP2PH699aUK8DhVIcHe2q7seO0A9XtXjh9EWZRnfMjmXVyVGUbsKjcgvll6ajINsCokY\\/Y9\\/f3ovTZiS68s78D2072wR3kR+BXGnSw51vUXfkpqtfvWlz6l9Wzspm1xMTpMnsvKJX+v3dOrth5qveuum7fkv4AJ8MFiNTVE9KxckYmFk9Ig0mrwgXOHQgChTPAoa7Tg731fdhzxoHadg863BGEOWFc5JYiAJRyCbKMclTmJGFOcTJml6SixGpAkkZ+Qcu28z6lAV8In53swQeHuvDpiZ7BODQysn5N0Sv4cqv281lFyc\\/dMVG5tbKyklVlZeI0euyvd2Q9vaH21rN9vrtqe\\/yVAY6OeCYY1FLML7Fg+bQMLJ1oRVaS+oIn1Hmh8kei6HL4Ud3qwsEGOw42u9BkD6LfF0aER0KIFQGgkAEpOiVyLVpMtxkxqzAFE3NNyEzRQqOQQCKRfKP2a+8PYOuJXnx0uBN7zvTBGxIw0ieGRk5QYNEcqcgwvvXQt\\/Lem1aQ2cZmBhOnuOGvn7VMeXN\\/4+oWR\\/DbzfaAdfjgzf9FJaWYnJeEGyan49rJVpRlGaGQffPsNnxUgNPPoXMggJoON6pbnKhpd6HJHoDdy8Mb4iAI8S1YBIBEAuhVMlgMChSkaDAhx4SJeUmozDIgy6yFUSOD7BuI0XkifBSn2t3YXN2NDUe7cLzVjdAFhEPKCEVuirotO0n15rKptr8+fANzeDNxiuOl3kOvHp2z56z9jn4ff3uzI6ARLkCkpASwpaiwuDIN10xKx8wiCyx65Teypv5+qSJQAb5QFHZvCF0DQZzp8uJMlwtnev3o6g+iz8fBF+QQjPDgBAJKL49wEQwaJwqJAJVCAZ1ahlS9AplJKpSka1GcaUJxhgGZySqkGtTQKgcto39mEAsChd0bwr56Bz6p7sZnNX1o7Q9dkM9OAor8VE3ArJW\\/ObM45a9P3znlIIvyZuI0JtjbRtXv76y+fndd7y3dzuD1XW5Oc6FR30YVweRcE5ZUpWHxhAyUZRqhUUov2LErOkEpBaUUAY4iEAzD7uPh9ATR7gqixR5G74AHHe4wHN4ogsEQAuEIfBxFkJeA46IQqADh3FZhhI+CnhtYFBQSEMhlUlAAUiKBRDr4t0YmQKsg0CiVUKuUsBhkyDIqkG42wpaigNWkRrJBjRStHBq1Aho5gYRIcBF+LgRK4Q\\/xONXpxvaTPfj0RA+OtbrhDl9Y\\/BgBRYZJGbCaVBsXVaS+f9O8SRtn54yvnEtMnBKEd\\/e2qTccblt+vN19S78\\/urzbFVZcaEpDKaFINyoxoyAJV5anYW6ZBfnpBugUEhBycbuTAqACBQUFJwChcBQczyPM8\\/BHKHxhinCYAxeNguejoKDwRXiEBXpuZFEoiQQ6hQwEBDKpFDK5FEqFAgYVoJUTKGQyyOUyqBRSyCUAAQGRkIs+MCml8EUENPe4sbvOge01vTjQ6ESPJ3LBIRgSABlJyohFJ9s4ryRt07zSKW+tms1EiYlTAnC4zpPyxoH6m3bUOBYPhKPf6uz3Ky7EJ3V+fSaTElhNKkyzmXBluQWzSyywpeqhV8uGzc55yZayIv+DjNIoiwoU3hCH5h4f9p7pw45aOw43u9DpCoOPXviNSQmF1aQMpBlVG6+uSt2+\\/ArD+pn5EjchthAb1UycEorN9Q7DkVM9t312vPvKZntgYbc7kvpNi7XIJATpehlKMw2YXWzB7GIzSq0GpJpUUMokF2X5F+8IlCLMC+hzhVDX6cbes\\/3Ye9aBug4vur0cot8kSpVSyKUE6UZZT1GqbvesIvP6iXkp61fNzmGWEhOnxIbSZtW+9jzyt217r6jrCt3a5Qota+sPZAc4Kvum3UMIYFBKkJ2sRlWOAdPykzHJZkaBRQOzQQWVXArJJVg6Xd52GxSjQCSKAW8ITfYAqpv7cahxACfbPWgbCMIXjkKg3\\/RXUmjkhM9LUbelG1Uby7ON795+1bSjs7J3coQsYtHdTJzGFzuam1U1jXz5juNdSzsGwt9qdfgnOnycMkr\\/mW6ikBACo1oGq0mBojQdKnOSUJltRGG6HpkmJbQaJTRyAkJIXFpYXznsIxTeYBjdrjAaez040ebGiVYXmvp86HRG4A1x53bZvvlvkBLAopcFclO0NRkG5YdXVqV\\/kr60uGYV231j4sQY5MOTHdnbj\\/XMP9nqvqarP7CgyxW2+iOC9J\\/O7UQpiIRAKQWMGiUyjHJkmjUoSdOgMMOIgjQtzAYtLHopdAo51Eo5FLLBoUIIQMjFtbgoBp3VlA7+FeEpgmEe\\/giHPm8UTo8Pjb0B1He7caY3gHZHAL0eDp5ACKEoARX+eacWAYVOIRFSDYqW\\/DTNgfIMw0eLJtr2fGuqpYuNRCZOjBhsrq9X1jcIVc393lWHzgxMbOoLVHjC0YwAJ5CL1n2UnrOaKDQKKdQqBVI0BEkaJdKMcmQmKZFsNCI5SYMMPZCqlEKlkA0Kl0IGlUIGQgiUX6UaIfj\\/XOMUCEcFUEoRDvMIcTxCYR6BCAd7OIoeLzDgDGDA7UaXM4weNwdnIAyHnyIYjiAYiSJKyUWOtaLQyCUwqqRdhWna00VZxl0FZuX6pTMtTdMyMwNs5DFxYowQh6PesL1exe041lPpp9FbTnd5prr8kVlt\\/UEFJ0B2SbJl0sGQADL4LxAQyCUCVDIJZFIJ5DIppBIJZDIJ5FIJNArZV8OKgH4lJgQE\\/gj\\/VchBVKDgeAE8H0UoKoATJINXU3z130uxxUcAKKTgrUnKgFmnOFxmNRzSyWUfFE5Ir\\/HMyg4\\/RgirHc\\/EifHPaQZVvb7tuPSsVzq9url\\/eiBCl9d3unM8QT7dF6GyqDCK+\\/fx1VCQSgCdUsob1NLuzGRtbYZBtb0827CvJIkemWnT8MXFxWHWUEycGJeIA72+9K27GzI63ZFZjT3e6b3u8FRXIJLv8HKKcBQyYbyIFaWQSAgUUspb9IqIRa9oz05WHc+y6HcY1PIvJuckN7IQACZOjFHi3XdrFL40U1p9R1eJj8PC+g53Wa8nXNnl4kwhLpoc4gQZL5CEyUoglQBquYTXqaSedIPCYTHKa9JNmoNmg\\/LgVJu1aVKhtL8yLc3HRgYTJ0ZcGRJt6vfey47oCrtLjrf2pjY5wiU9zsAkCrKorsunDIYiJn+Y6NxhHoQQmUBpnA6JwXAISsEbVVIoZVGXXqP2VWTroyq5dJdJrTyYrpfUTqzI6uRrU1tWrWLb\\/kycGGOOmhqqMOcOFL3+aVeo3+vLONsrTXMFPIVKwk\\/1CpLyTjevdXv9RCGXWv0hSnghKg1Hz5UF+XuHNfDPLxVFHO5KqQCZVMprFAQRLtqRZNQiyyjz64lwOkgVR0waXUOmyd9ZkpPluHGOWSPRJTVkEsJ215g4MRKVF198UT5\\/5crSfSd82H+mkTNqtMX1XT61xayeGBKUJW3dHsE+MCDVaxVF\\/ohE5w1FEYkMHvrVq2VplAhySgn8nOxczNIgEgJo5Py5dCgk4g3wfXKpFCqFAlqVDDol7wsE+IYkk4G3WU0KtTzSMDDAH82yqL0uh+vM\\/GmFsjnlOmx\\/\\/\\/36H\\/zgBxzrKSZOjHG5DAQh\\/+COopQq29vbJT\\/bnx0B3sN9s6+ynj1DJLXNzeh2usCFfJIrptkKdBq5MQrgbLcCkcj\\/rqo0aiLJTwlTiURKA\\/6Aa8+BtkatzkAzMkwos9lQni3wf9i\\/vafcYiH3li9UpaaCI4SEh7svBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDDik\\/8BCSI+mWbtTGUAAAAASUVORK5CYII=',\r\n\r\n        constructor: function HeaderIconModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n            // enable the model for communication with the CS REST API\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n\r\n            var nodeid = options.node.get('id');\r\n            if (nodeid) {\r\n              this.set('id',nodeid);\r\n            }\r\n            this.listenTo(options.node,'change:id',function(){\r\n              this.set({\r\n                'id': options.node.get('id'),\r\n                'icon': undefined\r\n              });\r\n            })\r\n        },\r\n\r\n        url: function () {\r\n            var nodeId = this.get('id'),\r\n                url = new Url(this.connector.connection.url).getApiBase('v2');\r\n            url = Url.combine(url, 'businessworkspaces', nodeId, 'icons');\r\n            return url;\r\n        },\r\n\r\n        add: function (files) {\r\n            var file = files.length ? files[0] : undefined;\r\n            if (file) {\r\n                return this.uploadFile(file, 'POST');\r\n            }\r\n        },\r\n\r\n        update: function (files) {\r\n            var file = files.length ? files[0] : undefined;\r\n            if (file) {\r\n                return this.uploadFile(file, 'POST');\r\n            }\r\n        },\r\n\r\n        remove: function () {\r\n            var self = this;\r\n            return this.destroy({\r\n                success: function () {\r\n                    self.trigger('icon:change');\r\n                }\r\n            });\r\n        },\r\n\r\n        uploadFile: function (file, type) {\r\n            var self = this;\r\n            // add file to form data\r\n            var data = new FormData();\r\n            data.append('file', file);\r\n            // send to server\r\n            return this.save(data, {\r\n                data: data,\r\n                type: type,\r\n                processData: false,\r\n                contentType: false,\r\n                success: function () {\r\n                    self.trigger('icon:change');\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return HeaderIconModel;\r\n});\n","// The model for fetching the workspaces from the server\r\ncsui.define('conws/widgets/myworkspaces/impl/myworkspaces.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/nodes',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/mixins/resource/resource.mixin',\r\n  'csui/models/mixins/expandable/expandable.mixin',\r\n  'conws/utils/workspaces/impl/workspaces.collection.mixin'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeCollection, BrowsableMixin, ResourceMixin, ExpandableMixin,\r\n    WorkspacesCollectionMixin) {\r\n\r\n  var config = module.config();\r\n\r\n  var MyWorkspacesCollection = NodeCollection.extend({\r\n\r\n      constructor: function MyWorkspacesCollection(models, options) {\r\n        // Core filter values needed for rest api\r\n        this.wherePart = [\"where_workspace_type_id\"];\r\n        NodeCollection.prototype.constructor.apply(this, arguments);\r\n        options || (options = {});\r\n        this.options = options;\r\n\r\n        this.makeBrowsable(options);\r\n        this.makeResource(options);\r\n        this.makeExpandable(options);\r\n        this.makeWorkspacesCollection(options);\r\n      }\r\n  });\r\n\r\n  BrowsableMixin.mixin(MyWorkspacesCollection.prototype);\r\n  ResourceMixin.mixin(MyWorkspacesCollection.prototype);\r\n  ExpandableMixin.mixin(MyWorkspacesCollection.prototype);\r\n  WorkspacesCollectionMixin.mixin(MyWorkspacesCollection.prototype);\r\n\r\n  _.extend(MyWorkspacesCollection.prototype, {\r\n\r\n      url: function () {\r\n          // Get query from options, e.g. workspace type already passed\r\n          var queryParams = this.options.query || {};\r\n\r\n          // Paging\r\n          queryParams = this.mergeUrlPaging(config, queryParams);\r\n\r\n          // Sorting, only sorting in case expanded_view is enabled\r\n          if (queryParams.expanded_view === \"true\") {\r\n            queryParams = this.mergeUrlSorting(queryParams);\r\n          } else if (queryParams.sort) {\r\n            delete queryParams.sort;\r\n          }\r\n\r\n          // Filtering\r\n          queryParams = this.mergeUrlFiltering(queryParams);\r\n\r\n          queryParams.metadata = undefined;\r\n\r\n          var url = Url.combine(this.getBaseUrl(), 'businessworkspaces');\r\n          url = url.replace('/v1', '/v2');\r\n          // Add params to query\r\n          return url + '?' + this.queryParamsToString(queryParams);\r\n        }\r\n      }\r\n  );\r\n\r\n  return MyWorkspacesCollection;\r\n\r\n});\n","csui.define('conws/widgets/myworkspaces/impl/myworkspaces.model.factory',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'conws/widgets/myworkspaces/impl/myworkspaces.model'\r\n], function (module, _, Backbone,\r\n             CollectionFactory,\r\n             ConnectorFactory,\r\n             MyWorkspacesCollection) {\r\n\r\n    var MyWorkspacesCollectionFactory = CollectionFactory.extend({\r\n\r\n        propertyPrefix: 'myworkspaces',\r\n\r\n        constructor: function MyWorkspacesCollectionFactory(context, options) {\r\n            CollectionFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var myworkspaces = this.options.myworkspaces || {};\r\n            if (!(myworkspaces instanceof Backbone.Collection)) {\r\n                var connector = context.getObject(ConnectorFactory, options),\r\n                    config = module.config();\r\n                myworkspaces = new MyWorkspacesCollection(myworkspaces.models, _.extend({\r\n                    connector: connector\r\n                }, myworkspaces.options, config.options, {\r\n                    autoreset: true\r\n                }, options));\r\n            }\r\n\r\n            // The initialized MyWorkspacesCollection\r\n            this.property = myworkspaces;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.ensureFetched(options);\r\n        }\r\n\r\n    });\r\n\r\n    return MyWorkspacesCollectionFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/utils/utility',[\r\n    'module',\r\n    'csui/lib/jquery',\r\n    'csui/utils/contexts/page/page.context',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/authenticators/request.authenticator',\r\n    'csui/utils/log'\r\n], function Utility(module, $, PageContext, ConnectorFactory, RequestAuthenticator, log) {\r\n\r\n    return {\r\n        v1ToV2: replaceV1ToV2,\r\n        startGlobalSpinner: startGlobalSpinner,\r\n        stopGlobalSpinner: stopGlobalSpinner,\r\n        startLocalSpinner: startLocalSpinner,\r\n        stopLocalSpinner: stopLocalSpinner,\r\n        modalOpen: modalOpen,\r\n        modalClose: modalClose,\r\n        escapeNameToCreate: escapeNameToCreate,\r\n        escapeNameToVerify: escapeNameToVerify,\r\n\r\n        ToggleStatusExpand: \"toggleIcon toggleExpand\",\r\n        ToggleStatusCollapse: \"toggleIcon toggleCollapse\",\r\n        ToggleStatusEmpty: \"toggleIcon toggleEmpty\",\r\n\r\n        writeTrace: traceOutput,\r\n        setConnector: setConnector,\r\n        getConnector: getConnector,\r\n\r\n        // Initial configuration values\r\n        pageSize: 5,\r\n        TraceEnabled: typeof(Storage) === 'undefined' ? false : localStorage.getItem('outlookTraceEnabled') ? localStorage.getItem('outlookTraceEnabled') === 'true' : false, \r\n        SSOEnabled: typeof(Storage) === 'undefined' ? false : localStorage.getItem('outlookAddinSSO') ? localStorage.getItem('outlookAddinSSO') === 'true' : false,\r\n        ShowSearchFormSelection: true,\r\n        DisplayedSearchForms: [],\r\n        emailSavingConfig: {\r\n            allowExpandWorkspace: true,\r\n            onlySaveToEmailFolder: false,\r\n            preConfigFolderToSave: {\r\n                enabled: false,\r\n                saveToFirstEmailFolder:  false,\r\n                specificFolderName: \"\"\r\n            }\r\n        },\r\n        setConfig: setConfig,\r\n\r\n        messageListeners: {}, //one listener per source origin\r\n        registerMessageListener: registerMessageListener,\r\n        detachMessageListener: detachMessageListener,\r\n\r\n        SSOLoginURL: '?func=outlookaddin.login',\r\n\r\n        isSafeURL: isSafeURL,\r\n        getPersistentSetting: getPersistentSetting,\r\n        setPersistentSetting: setPersistentSetting,\r\n        getCookie: getCookie,\r\n        setCookie: setCookie,\r\n\r\n        getCurrentTopDomain: getCurrentTopDomain,\r\n\r\n        getErrorMessage: getErrorMessage,\r\n\r\n        getSuggestedWkspFilters: getSuggestedWkspFilters,\r\n        getSuggestedWkspEmailSearchConfig: getSuggestedWkspEmailSearchConfig,\r\n\r\n        SuggestedWkspsView: null,\r\n\r\n        emailProperties: {\r\n            \"project\": { value: \"project\", displayName: \"Project\" },\r\n            \"from\": { value: \"from\", displayName: \"from\" },\r\n            \"to\": { value: \"to\", displayName: \"To\" }\r\n        },\r\n\r\n        disableSimpleSearch: disableSimpleSearch,\r\n        collapsibleClicked: collapsibleClicked,\r\n        SelectedWkspTypeId: -100,\r\n        WkspSearchPerformed: false,\r\n\r\n        SearchButtonHeight: 32,\r\n        SearchFormBottomPadding: 88,\r\n        TraceAreaHeight: 219,\r\n\r\n        PreSaveSection: \"standardSections\",\r\n        ScorllPositionBeforeSaving: -1,  // -1 means the scroll position not affected by saving panel\r\n\r\n        uiHide: uiHide,\r\n        uiShow: uiShow,\r\n\r\n        ConflictHighlighted: false,\r\n        SavingSubmitted: false,\r\n        EmailChangedAfterSaving: false\r\n    }\r\n\r\n    function replaceV1ToV2(url) {\r\n        return url.replace(\"/v1\", \"/v2/\");\r\n    }\r\n\r\n    function startGlobalSpinner(force) {\r\n        var spinner = $('#blockingSpinner'),\r\n            top,\r\n            scrollY = window.scrollY ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n        // calculate top of centered position\r\n        top = scrollY;\r\n        var marginCss = top > 0 ? \";margin-top: \" + top + \"px\" : \"\";\r\n\r\n        spinner.css(\"cssText\", \"display:inline-block !important; visibility:visible !important\" + marginCss);\r\n        $('body').css('pointer-events', 'none');\r\n\r\n        //traceOutput(\"Spinner started by: \" + arguments.callee.caller.toString());\r\n        if (!force) {\r\n            setTimeout(function() {\r\n                var connector = getConnector();\r\n                if (connector.confirmingReload) {\r\n                    stopGlobalSpinner();\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    function stopGlobalSpinner() {\r\n        var spinner = $('#blockingSpinner');\r\n        spinner.css(\"cssText\", \"display:none; visibility:hidden\");\r\n        $('body').css('pointer-events', '');\r\n\r\n        //traceOutput(\"Spinner stopped by:\" + arguments.callee.caller.toString());\r\n    }\r\n\r\n    function startLocalSpinner(spinnerId) {\r\n        var id = '#' + spinnerId;\r\n        var spinner = $(id);\r\n\r\n        spinner.css(\"cssText\", \"display:inline-block !important; visibility:visible !important\");\r\n    }\r\n\r\n    function stopLocalSpinner(spinnerId) {\r\n        var id = '#' + spinnerId;\r\n        var spinner = $(id);\r\n        spinner.css(\"cssText\", \"display:none; visibility:hidden\");\r\n    }\r\n\r\n    function modalOpen() {\r\n        $('body').addClass(\"binf-modal-open\");\r\n    }\r\n\r\n    function modalClose() {\r\n        $('body').removeClass(\"binf-modal-open\");\r\n    }\r\n\r\n    function setConnector(connector) {\r\n        window.contextConnector = connector;\r\n    }\r\n\r\n    function getConnector() {\r\n        if (window.contextConnector == null) {\r\n            var context = new PageContext(),\r\n                options = {\r\n                    authenticator: new RequestAuthenticator({})\r\n                };\r\n\r\n            var connector = context.getObject(ConnectorFactory, options);\r\n            window.contextConnector = connector;\r\n            return connector;\r\n        } else {\r\n            return window.contextConnector;\r\n        }\r\n    }\r\n\r\n    function escapeNameToCreate(originalString) {\r\n        var string = originalString.replace(/:/g, '_').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\r\n            .replace(/\\u2029/g, '\\\\u2029');\r\n        return string;\r\n    }\r\n\r\n    function escapeNameToVerify(originalString) {\r\n        var string = originalString.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\r\n        return string;\r\n    }\r\n\r\n    function traceOutput(message) {\r\n        var self = this;\r\n        if (!self.TraceEnabled) {\r\n            return;\r\n        }\r\n\r\n        // var traceMsgControl = $('#tracingMessage'),\r\n        //     currentTime = new Date(),\r\n        //     hour = currentTime.getHours(),\r\n        //     min = ('0' + currentTime.getMinutes()).slice(-2),\r\n        //     sec = ('0' + currentTime.getSeconds()).slice(-2),\r\n        //     milliSec = ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\r\n        // var tiemStamp = hour + \":\" + min + \":\" + sec + \".\" + milliSec;\r\n\r\n        // traceMsgControl.append(tiemStamp + \": \" + message + '<br>');\r\n        log.info(message);\r\n    }\r\n\r\n    /**\r\n     * Helper function to register the message listener\r\n     */\r\n    function registerMessageListener(callback, sourceOrigin) {\r\n        var self = this;\r\n\r\n        if (typeof window.postMessage !== 'undefined') {\r\n            // bind the callback to the actual event associated with window.postMessage\r\n            if (callback && typeof sourceOrigin === 'string' && sourceOrigin) {\r\n                self.messageListeners[sourceOrigin] = callback;\r\n                var attachedCallback = function(e) {\r\n                    if (e.origin) {\r\n                        // self.writeTrace('A message received from: \"' + e.origin + '\"');\r\n                        for (var source in self.messageListeners) {\r\n                            if (self.messageListeners.hasOwnProperty(source)) {\r\n                                if (e.origin.toLowerCase() === source.toLowerCase()) {\r\n                                    self.writeTrace('Found matched source origin \"' + e.origin);\r\n                                    self.messageListeners[source](e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n                if (typeof window.addEventListener !== 'undefined') {\r\n                    window.addEventListener('message', attachedCallback, false);\r\n                } else {\r\n                    window.attachEvent('onmessage', attachedCallback);\r\n                }\r\n                self.writeTrace('Attached event listener for \"' + sourceOrigin + '\"');\r\n                return attachedCallback;\r\n            }\r\n        } else {\r\n            this.writeTrace('Cannot register message listener, your browser does not support window.postMessage!');\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Helper function to detach the message listener\r\n     */\r\n    function detachMessageListener(attachedCallback, sourceOrigin) {\r\n        if (typeof window.postMessage !== 'undefined') {\r\n\r\n            if (typeof sourceOrigin === 'undefined') { //remove all sources\r\n                for (var source in this.messageListeners) {\r\n                    if (this.messageListeners.hasOwnProperty(source)) {\r\n                        delete this.messageListeners[source];\r\n                        this.writeTrace('Removed event source for \"' + source + '\"');\r\n                    }\r\n                }\r\n            } else { //remove specific source\r\n                if (this.messageListeners.hasOwnProperty(sourceOrigin)) {\r\n                    delete this.messageListeners[sourceOrigin];\r\n                    this.writeTrace('Removed event source for \"' + sourceOrigin + '\"');\r\n                }\r\n            }\r\n\r\n            for (var listener in this.messageListeners) { //check if any source remains\r\n                if (this.messageListeners.hasOwnProperty(listener)) {\r\n                    return; //do not detach the event listener if any source exists.\r\n                }\r\n            }\r\n\r\n            if (typeof window.addEventListener !== 'undefined') {\r\n                window.removeEventListener('message', attachedCallback, false);\r\n            } else {\r\n                window.detachEvent('onmessage', attachedCallback);\r\n            }\r\n            this.writeTrace('Detached message event listener.');\r\n        } else {\r\n            this.writeTrace('Cannot detach message listener, your browser does not support window.postMessage!');\r\n        }\r\n    }\r\n\r\n    function getPersistentSetting(name) {\r\n        var setting;\r\n        if (window.SettingStorage) {\r\n            setting = window.SettingStorage.getItem(name);\r\n        }\r\n        if (setting) {\r\n            return setting;\r\n        } else {\r\n            return this.getCookie(name);\r\n        }\r\n    }\r\n\r\n    function setPersistentSetting(name, value, expire, domain) {\r\n        if (window.SettingStorage) {\r\n            window.SettingStorage.setItem(name, value);\r\n        } else {\r\n            //this.writeTrace('-- set ticket to cookie, with domain: ' + domain + ', and expire: ' + expire);\r\n            this.setCookie(name, value, expire, domain);\r\n        }\r\n    }\r\n\r\n    function getCookie(c_name) {\r\n        var c_value = document.cookie;\r\n        var c_start = c_value.indexOf(\" \" + c_name + \"=\");\r\n        if (c_start === -1) {\r\n            c_start = c_value.indexOf(c_name + \"=\");\r\n        }\r\n        if (c_start === -1) {\r\n            c_value = null;\r\n        } else {\r\n            c_start = c_value.indexOf(\"=\", c_start) + 1;\r\n            var c_end = c_value.indexOf(\";\", c_start);\r\n            if (c_end === -1) {\r\n                c_end = c_value.length;\r\n            }\r\n            c_value = decodeURI(c_value.substring(c_start, c_end));\r\n        }\r\n        return c_value;\r\n    }\r\n\r\n    function setCookie(c_name, value, expire, domain) {\r\n        var c_value = encodeURI(value);\r\n        if (typeof expire !== 'undefined' && expire) {\r\n            if ((new Date(expire)).toString() !== 'Invalid Date') {\r\n                c_value += \"; expires=\" + (new Date(expire)).toUTCString();\r\n            }\r\n        }\r\n        if (typeof domain === 'undefined' || !domain) {\r\n            domain = this.getCurrentTopDomain();\r\n        }\r\n        c_value += (\"; domain=.\" + domain + \";path=/\");\r\n\r\n        document.cookie = c_name + \"=\" + c_value;\r\n    }\r\n\r\n    function getCurrentTopDomain() {\r\n        var i,\r\n            h,\r\n            weird_cookie = 'weird_get_top_level_domain=cookie',\r\n            hostname = document.location.hostname.split('.');\r\n        for (i = hostname.length - 1; i >= 0; i--) {\r\n            h = hostname.slice(i).join('.');\r\n            document.cookie = weird_cookie + ';domain=.' + h + ';';\r\n            if (document.cookie.indexOf(weird_cookie) > -1) {\r\n                document.cookie = weird_cookie.split('=')[0] + '=;domain=.' + h + ';expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n                return h;\r\n            }\r\n        }\r\n    }\r\n\r\n    function isSafeURL(urlString) {\r\n        if (urlString) {\r\n            var urlStr = urlString.toLowerCase();\r\n            //var pattern = new RegExp('^(https?:\\/)?/');\r\n            if (urlStr.indexOf('javascript:') > -1\r\n                || urlStr.indexOf('<') > -1) {\r\n                this.writeTrace('URL contains unsafe string: ' + urlString);\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getSuggestedWkspFilters(emailItem, config) {\r\n        var filterConfig = config.filter;\r\n\r\n        var xecmRule = window.xECMRule;\r\n        if (typeof xecmRule !== 'undefined'){\r\n            filterConfig.rules.push(xecmRule);\r\n        }\r\n\r\n        var filters = [];\r\n\r\n        if (emailItem != null && filterConfig.rules != null && filterConfig.rules.length > 0) {\r\n            for (var i = 0; i < filterConfig.rules.length; i++) {\r\n                var rule = filterConfig.rules[i],\r\n                    ruleMatch = false;\r\n\r\n                if (!rule.enabled || rule.wkspTypeId === 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (rule.onlyGroup1 == null) {\r\n                    rule.onlyGroup1 = true;\r\n                }\r\n                if (rule.weight == null || rule.weight === -1) {\r\n                    rule.weight = filterConfig.weight;\r\n                }\r\n\r\n                var processingString = \"\";\r\n                switch (rule.property) {\r\n                case \"subject\":\r\n                    processingString = emailItem.subject;\r\n                    break;\r\n                case \"sender\":\r\n                case \"from\":\r\n                    processingString = emailItem.sender.displayName + \",\" + emailItem.sender.emailAddress;\r\n                    break;\r\n                case \"to\":\r\n                    processingString = emailItem.to.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress }).join(\";\");\r\n                    break;\r\n                case \"cc\":\r\n                    processingString = emailItem.cc.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress }).join(\";\");\r\n                    break;\r\n                case \"recipient\":\r\n                    var recipients = emailItem.to.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress });\r\n                    recipients = recipients.concat(emailItem.cc.map(function(elem) { return elem.displayName + \",\" + elem.emailAddress }));\r\n                    processingString = recipients.join(\";\");\r\n                    break;\r\n                default:\r\n                }\r\n                if (rule.method === \"RegEx\") {\r\n                    try {\r\n                        var matchPatt = new RegExp(rule.match, \"i\");\r\n                        ruleMatch = matchPatt.test(processingString);\r\n                    } catch (e) {\r\n                        ruleMatch = false;\r\n                    }\r\n                } else {\r\n                    var processingStringLower = processingString.toLocaleLowerCase(),\r\n                        matchLower = rule.match.toLocaleLowerCase();\r\n                    ruleMatch = processingStringLower.indexOf(matchLower) !== -1;\r\n                }\r\n\r\n                if (ruleMatch) {\r\n                    try {\r\n                        var retrievePatt = new RegExp(rule.retrieve, \"ig\");\r\n\r\n                        var retrieves = retrievePatt.exec(processingString);\r\n                        if (rule.retrieveMethod === \"capturingGroup\"){\r\n                            if (retrieves && retrieves.length > 2){\r\n                                filters.push({ typeName: retrieves[rule.wkspTypeGroup], \r\n                                               typeId: -999, //a non existing wksp type ID\r\n                                               filterName: retrieves[rule.wkspNameGroup], \r\n                                               weight: rule.weight });\r\n                            }\r\n                        } else if (retrieves && retrieves.length > 0) {\r\n                            var term = retrieves.length > 1 ? retrieves[1] : retrieves[0];\r\n                            filters.push({ typeName: \"\", typeId: rule.wkspTypeId, filterName: term, weight: rule.weight });\r\n                        }\r\n                    } catch (e) {\r\n                        // Just in case invalid extraction term defined, even though it has been blocked by UI already.\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            suggestedWeight: filterConfig.weight,\r\n            rules: filters\r\n        };\r\n    }\r\n\r\n    function getSuggestedWkspEmailSearchConfig(emailItem, config) {\r\n        var searchTerm = [];\r\n        var searchConfig = config.search;\r\n        //sortBy: \"desc_OTObjectDate\",\r\n\r\n        if (searchConfig.weight == null) {\r\n            searchConfig.weight = 1;\r\n        }\r\n        if (emailItem != null) {\r\n            var currentUserAddress = window.currentUser,\r\n                senderAddress = emailItem.sender.emailAddress;\r\n\r\n            if (searchConfig.searchSender) {\r\n                // By default, if the current user is the same as the sender of current email, then don't issue this search\r\n                var noCurrentUserAsSender = searchConfig.noCurrentUserAsSender != null ? searchConfig.noCurrentUserAsSender : true;\r\n                if (! noCurrentUserAsSender || currentUserAddress !== senderAddress) {\r\n                    searchTerm.push({ region: \"OTEmailSenderAddress\", searchTerm: senderAddress + \",\" }); // has to add ',' to make the REST search working\r\n                }\r\n            }\r\n\r\n            if (searchConfig.searchRecipient) {\r\n                // By default, not include the current user in the recipient search term\r\n                var noCurrentUserInRecipient = searchConfig.noCurrentUserInRecipient != null ? searchConfig.noCurrentUserInRecipient : true;\r\n\r\n                // the email address for \"to\" is not properly populated\r\n                var tos = emailItem.to.map(function(elem) { return noCurrentUserInRecipient && elem.emailAddress === currentUserAddress ? \"\" : elem.emailAddress; });\r\n                var ccs = emailItem.cc.map(function(elem) { return noCurrentUserInRecipient && elem.emailAddress === currentUserAddress ? \"\" : elem.emailAddress; });\r\n\r\n                var allRecipients = tos.concat(ccs);\r\n                var recipients = allRecipients.reduce(function(a, b) {\r\n                    if (a.indexOf(b) < 0) {\r\n                        a.push(b);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n                for (var i = recipients.length - 1; i >= 0; i--) {\r\n                    if (!recipients[i]) {\r\n                        recipients.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if (recipients.length > 0) {\r\n                    var term = recipients.join(\",\") + \",\"; // has to add ',' in case of there is only one address\r\n                    searchTerm.push({ region: \"OTEmailRecipientAddress\", searchTerm: term });\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            sort: searchConfig.sort,\r\n            weight: searchConfig.weight,\r\n            searchTerm: searchTerm\r\n        };\r\n    }\r\n\r\n    function getErrorMessage(error) {\r\n        if (typeof(error) === \"string\") {\r\n            return error;\r\n        }\r\n\r\n        var errMsg = (error.responseJSON && error.responseJSON.error) ? error.responseJSON.error :\r\n            error.message ? error.message :\r\n            error.responseText ? error.responseText :\r\n            error.statusText ? error.statusText : JSON.stringify(error);\r\n        return errMsg;\r\n    }\r\n\r\n    function disableSimpleSearch() {\r\n        $('#csui-custom-search-form-submit').addClass(\"binf-disabled csui-search-form-submit-disabled\");\r\n    }\r\n\r\n    function setConfig(config, csUserLoginName) {\r\n        this.pageSize = config.pageSize;\r\n        \r\n        var loginName = csUserLoginName ? csUserLoginName.toUpperCase() : \"\";\r\n\r\n        if (!this.TraceEnabled){\r\n            this.TraceAreaHeight = 0;\r\n        }\r\n\r\n        var traceEnabled = config.trace.enabled && (config.trace.userName === \"\" || config.trace.userName.toUpperCase() === loginName);\r\n        this.TraceEnabled = traceEnabled;\r\n        if (typeof (Storage) !== 'undefined') {\r\n            localStorage.setItem('outlookTraceEnabled',traceEnabled.toString());\r\n        }\r\n\r\n        this.SSOEnabled = config.sso;\r\n        if (typeof (Storage) !== 'undefined') {\r\n            localStorage.setItem('outlookAddinSSO', config.sso.toString());\r\n        }\r\n        this.ShowSearchFormSelection = config.searchForm.enabled;\r\n        this.DisplayedSearchForms = []; // bypass the filtering here. The search forms returned from the REST API already has this logic\r\n        this.emailSavingConfig = {\r\n            allowExpandWorkspace: config.save.expand,\r\n            onlySaveToEmailFolder: config.save.emailFolderOnly,\r\n            preConfigFolderToSave: {\r\n                enabled: config.save.preConfig.enabled,\r\n                saveToFirstEmailFolder: config.save.preConfig.firstEmailFolder,\r\n                specificFolderName: config.save.preConfig.specificName\r\n            }\r\n        };\r\n    }\r\n\r\n    function collapsibleClicked(section){\r\n        var displayArea = $(\"#\" + section + \"Section\");\r\n\r\n        if (displayArea.length === 0){\r\n            return;\r\n        }\r\n\r\n        var displayStyle = displayArea[0].style.display;\r\n        if (displayStyle === \"none\"){\r\n            displayArea.css(\"display\", \"block\");\r\n        } else{\r\n            displayArea.css(\"display\", \"none\");\r\n        }\r\n\r\n        var collapsibleIcon = $(\"#\" + section + \"ToggleIcon\");\r\n        collapsibleIcon.toggleClass(\"sectionExpended\");\r\n    }\r\n\r\n    function uiHide(uiId, uiClass){\r\n        if (uiId){\r\n            $(\"#\" + uiId).addClass(\"hiddenArea\");\r\n        }\r\n        if (uiClass){\r\n            $(\".\" + uiId).addClass(\"hiddenArea\");\r\n        }\r\n    }\r\n\r\n    function uiShow(uiId, uiClass){\r\n        if (uiId){\r\n            $(\"#\" + uiId).removeClass(\"hiddenArea\");\r\n        }\r\n        if (uiClass){\r\n            $(\".\" + uiId).removeClass(\"hiddenArea\");\r\n        }\r\n    }\r\n});\n","csui.define('conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model',[\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, Url, WkspUtil) {\r\n\r\n    var recentwkspsModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function recentwkspsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n\r\n                this.pageSize = options.pageSize;\r\n                this.pageNo = options.pageNo;\r\n\r\n                this.nextPageUrl = \"\";\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            if (this.nextPageUrl) {\r\n                return window.ServerCgiScript + this.nextPageUrl;\r\n            } else {\r\n                // workspace type is no longer a required parameter. See CWS-1608\r\n                var typeString = ''; //'where_workspace_type_id=47&';\r\n                var pagingString = 'page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                var queryString = typeString + pagingString;\r\n\r\n                return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspaces?expanded_view=false&' + queryString);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return recentwkspsModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',\r\n    'conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (module, _, Backbone, ModelFactory, RecentWkspsModel, WkspUtil) {\r\n\r\n  var recentwkspsModelFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'recentwksps',\r\n\r\n    constructor: function recentwkspsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      this.property = new RecentWkspsModel(undefined, {\r\n          connector: context.connector,\r\n          pageNo: 1,\r\n          pageSize: WkspUtil.pageSize\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n        // Just fetch the model exposed by this factory\r\n        return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return recentwkspsModelFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/folder/impl/folders.model',[\r\n    'csui/lib/backbone', \r\n    'csui/utils/url', \r\n\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, Url, WkspUtil) {\r\n\r\n    var foldersModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function foldersModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            } else {\r\n                var connector = WkspUtil.getConnector();\r\n                connector.assignTo(this);\r\n            }\r\n\r\n            this.id = options.id;\r\n            this.pageSize = options.pageSize;\r\n            this.pageNo = options.pageNo;\r\n            this.nextPageUrl = \"\";\r\n        },\r\n\r\n        url: function () {\r\n            if (this.nextPageUrl) {\r\n                return window.ServerCgiScript + this.nextPageUrl;\r\n            } else {\r\n                var typeString = \"where_type=0&where_type=751&where_type=136\";\r\n                var pagingString = 'page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                var queryString = typeString + '&' + pagingString;\r\n\r\n                return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'nodes', this.id, 'nodes?' + queryString);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return foldersModel;\r\n});\r\n\n","\r\ncsui.define('conws/widgets/outlook/impl/wksp/impl/wksp.model',[\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery', \r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, $, Url, WkspUtil) {\r\n\r\n    var wkspModel = Backbone.Model.extend({\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function wkspModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n            this.id = attributes.id;\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), \"businessworkspaces\", this.id);\r\n        },\r\n\r\n        getPreConfigFolder: function() {\r\n            var self = this,\r\n                deferred = $.Deferred(),\r\n                promise = deferred.promise();\r\n            if (!WkspUtil.emailSavingConfig.preConfigFolderToSave.enabled) {\r\n                deferred.resolve({ hasPreConfigFolder: false });\r\n            } else {\r\n                var query, specificFolderName;\r\n                if (WkspUtil.emailSavingConfig.preConfigFolderToSave.saveToFirstEmailFolder) {\r\n                    query = \"?where_type=751&sort=asc_name&limit=1\";\r\n                } else if (WkspUtil.emailSavingConfig.preConfigFolderToSave.specificFolderName) {\r\n                    specificFolderName = WkspUtil.emailSavingConfig.preConfigFolderToSave.specificFolderName;\r\n                    query = \"?where_type=0&where_type=751&where_name=\" + specificFolderName;\r\n                } \r\n\r\n                if (query) {\r\n                    var connector = WkspUtil.getConnector(),\r\n                        url = Url.combine(WkspUtil.v1ToV2(connector.connection.url), 'nodes', self.id, 'nodes', query);\r\n                    var retrievePromise = $.ajax({\r\n                        type: \"GET\",\r\n                        headers: {\r\n                            'OTCSTicket': connector.connection.session.ticket\r\n                        },\r\n                        url: url\r\n                    });\r\n                    retrievePromise.done(function(data) {\r\n                        var results = data.results,\r\n                            foundFolder = false;\r\n\r\n                        if (results.length === 0) {\r\n                            foundFolder = false;\r\n                        } else if (specificFolderName) {\r\n                            for (var i = 0; i < results.length; i++) {\r\n                                if (results[i].data.properties.name === specificFolderName) {\r\n                                    deferred.resolve({\r\n                                            hasPreConfigFolder: true,\r\n                                            folderId: results[i].data.properties.id,\r\n                                            folderName: results[i].data.properties.name\r\n                                        }\r\n                                    );\r\n                                    foundFolder = true;\r\n                                }\r\n                            }\r\n                        } else if (results.length === 1) {\r\n                            deferred.resolve({\r\n                                    hasPreConfigFolder: true,\r\n                                    folderId: results[0].data.properties.id,\r\n                                    folderName: results[0].data.properties.name\r\n                                }\r\n                            );\r\n                            foundFolder = true;\r\n                        } \r\n\r\n                        if (!foundFolder){\r\n                            deferred.resolve({ hasPreConfigFolder: false });\r\n                        }\r\n                    });\r\n                    retrievePromise.fail(function(error, errorText) {\r\n                        deferred.resolve({ hasPreConfigFolder: false });\r\n                    });\r\n                } else {\r\n                    setTimeout(function () { deferred.resolve({ hasPreConfigFolder: false });}, 300);\r\n                }\r\n            }\r\n            return promise;\r\n        }\r\n\r\n    });\r\n\r\n    return wkspModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/backbone',   \r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/wksp/impl/wksp.model',\r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function ($, Backbone, Url, WkspModel, WkspUtil) {\r\n\r\n    var favoritewkspsModel = Backbone.Model.extend({\r\n        defaults: {\r\n            name: 'favoriteWksps'\r\n        },\r\n\r\n        constructor: function favoritewkspsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            this.options = options;\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), \"members/favorites\");\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (response && response.results && response.results.length > 0) {\r\n                for (var i = response.results.length-1; i >= 0; i--) {\r\n                    if (response.results[i].data.properties.type !== 848) {\r\n                        response.results.splice(i, 1);\r\n                        continue;\r\n                    }\r\n\r\n                    response.results[i].data.properties.icon = \"impl/images/mime_workspace.svg\";\r\n                }\r\n            }\r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    function updateIconUrl(wksp, options) {\r\n\r\n        // this is not working. revisit later. the async called are executed after return method..... \r\n\r\n        var wkspModel = new WkspModel({ id: wksp.data.properties.id }, options);\r\n\r\n        $.when(wkspModel.fetch()).then(function(data, status, jqXhr) {\r\n            wksp.data.properties.icon = data.results.data.properties.icon;\r\n        });\r\n    }\r\n\r\n    function getIcon(wksp, options) {\r\n        var deferred = $.Deferred();\r\n        var wkspModel = new WkspModel({ id: wksp.data.properties.id }, options);\r\n        wkspModel.fetch({\r\n            success: (function(result) {\r\n                var iconUrl = result.get('results').data.properties.icon;\r\n                wksp.data.properties.icon = iconUrl;\r\n            })\r\n        });\r\n        return deferred.promise();\r\n    }\r\n\r\n    return favoritewkspsModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',   \r\n    'conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model'    \r\n], function (module, _, Backbone, ModelFactory, FavoriteWkspsModel) {\r\n\r\n  var favoritewkspsModelFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'favoritewksps',\r\n\r\n    constructor: function favoritewkspsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n     \r\n      this.property = new FavoriteWkspsModel(undefined, {\r\n          connector: context.connector,\r\n          context: context\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n        options.context = this.property.options.context;\r\n        return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return favoritewkspsModelFactory;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('conws/widgets/outlook/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('conws/widgets/outlook/impl/nls/root/lang',{\r\n    config_CS_missing: \"The Content Server that this add-in connects to has not been specified properly.\",\r\n\r\n    error_create_Blob: \"Creating the Blob object for the email content failed with error: {0}\",\r\n    error_create_CORS: \"Creating CORS request failed.\",\r\n    error_CORS_NoResponse: \"CORS call does not return anything.\",\r\n    error_retrieve_config: \"Retrieving add-in configuration failed with error: {0}\",\r\n    error_retrieve_email: \"Retrieving current email failed with error: \",\r\n    error_retrieve_email_body: \"Retrieving email body failed with error: {0}\",\r\n    error_retrieve_email_content: \"Retrieving email content through Exchange Web Service failed with error: {0}\",\r\n    error_retrieve_favorite: \"Retrieving favorite business workspace failed with message: {0}\",\r\n    error_retrieve_recent: \"Retrieving recently accessed business workspace failed with message: {0}\",\r\n    error_retrieve_search: \"Searching business workspace failed with message: {0}\",\r\n    error_retrieve_searchQueries: \"Retrieving custom view search queries failed with message: {0}\",\r\n    error_retrieve_suggested: \"An error occurred when retrieving suggested business workspaces: {0}\",\r\n    error_retrieve_suggestedConfig: \"Retrieving configuration failed with message: {0}\",\r\n    error_retrieve_token: \"Retrieving accessing token for EWS failed.\",\r\n    error_save_email: \"The saving process did not complete successfully. {0}\",\r\n    error_validate_name: \"Validating the name failed with message: {0}\",\r\n\r\n    help_button_tooltip: \"Help\",\r\n\r\n    info_confirm_saving: 'The email will be saved to folder \"{0}\".',\r\n    info_retrieving: 'Retrieving...',\r\n    info_save_successful: \"The email has been saved successfully.\",\r\n\r\n    name_untitled: \"Untitled\",\r\n\r\n    noWksp_favorite: \"No favorite business workspace\",\r\n    noWksp_recent: \"No recently accessed business workspace\",\r\n    noWksp_search: \"No business workspace found\",\r\n    noWksp_suggested: \"No suggested business workspace\",\r\n\r\n    required_fields_title: \"Enter required fields\",\r\n    required_fields_switchLabel: \"Only required fields (*)\",\r\n\r\n    save_action_both: \"Save email and attachment(s)\",\r\n    save_action_attachment: \"Save attachment(s)\",\r\n    save_action_email: \"Save email\",\r\n    save_attachment_text: \"Save attachments separately\",\r\n    save_attachment_option: \"Save all attachments\",\r\n    save_button_back: \"Back\",\r\n    save_button_next: \"Next\",\r\n    save_button_close: \"Close\",\r\n    save_enterName: \"Enter a unique name to save this email.\",\r\n    save_email_info: 'Save email to folder \"{0}\".',\r\n    save_email_text: \"Save email and attachments as one file\",\r\n    save_email_text_noAttachment: \"Save email as one file\",\r\n    save_failed: \"{0} failed with message: {1}.\",\r\n    save_label: \"Save\",\r\n    save_metadate_form_invalid: \"Correct the values on the form then click Next to save.\",\r\n    save_nameNotUnique: \"Add this email with a unique name:\",\r\n    save_noSelection: \"You must select the email or the attachment(s) you want to save.\",\r\n    save_successful_all: \"The email and attachment(s) have been saved successfully.\",\r\n    save_successful_attachment: \"The attachment has been saved successfully.\",\r\n    save_successful_attachments: \"The attachments have been saved successfully.\",\r\n    save_successful_email: \"The email has been saved successfully.\",\r\n    save_selection_conflict: \"Conflict\",\r\n    save_selection_conflict_msg: \"File(s) with the same name already exists. Please rename the file(s) then click Next to continue.\",\r\n\r\n    search_all_wksp: \"Search all workspaces\",\r\n    search_button_tooltip: \"Search\",\r\n    search_clear_button_tooltip: \"Clear search\",\r\n    search_custom_button_label: \"Custom search\",\r\n    search_noCondition: \"Specify the search condition\",\r\n    search_result_title: \"Search results\",\r\n    search_select_form: \"Select a Search Form\",\r\n    search_select_wksp_type: \"Select a workspace type\",\r\n    search_selected_wksp_type: \"Workspace type\",\r\n    search_wksp_typeName: \"Workspace Type and Name\",\r\n    search_wkspName_placeholder: \"Search for Business Workspaces\",\r\n\r\n    sectionTitle_customSearch: \"Custom search\",\r\n    sectionTitle_favorite: \"Favorite workspaces\",\r\n    sectionTitle_recent: \"Recent workspaces\",\r\n    sectionTitle_search: \"Search workspaces\",\r\n    sectionTitle_suggested: \"Suggested workspaces\",\r\n\r\n    showMore_link: \"Show more...\",\r\n    showMore_folders: \"Show more folders\",\r\n    showMore_wksp: \"Show more workspaces\",\r\n\r\n    signIn_button_Title: \"Sign in\",\r\n    signIn_required: \"Enter the user name and password.\",\r\n    signIn_message: \"Sign in to continue to {0}\",\r\n    signIn_password: \"Password\",\r\n    signIn_title: \"Sign in Content Server\",\r\n    signIn_username: \"User name\",\r\n\r\n    ssoTimeout: \"Single sign-on timeout.\",\r\n\r\n    title_cancel: \"Cancel\",\r\n    title_ok: \"OK\",\r\n    title_save_email: \"Save email\",\r\n    title_save_email_to: \"Save email to \",\r\n    title_save_error: \"Error\",\r\n    title_save_success: \"Success\",\r\n\r\n    validation_name_conflict: 'An email item \"{0}\" already exists in the folder \"{1}\".',\r\n    validation_no_subject: \"The email does not contain a subject.\",\r\n\r\n    warning_no_outlook_context: \"Cannot retrieve email information. Make sure the add-in is running within Outlook context.\",\r\n    warning_session_expired: \"Session expired\",\r\n\r\n    wksp_open_link: \"Open in browser\"\r\n});\r\n\n","\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model',[\r\n    'csui/lib/backbone', \r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility',\r\n    'i18n!conws/widgets/outlook/impl/nls/lang'\r\n], function (Backbone, Url, WkspUtil, lang) {\r\n\r\n    var searchwkspsModel = Backbone.Model.extend({\r\n\r\n        defaults: { name: 'Unnamed' }, \r\n\r\n        constructor: function searchwkspsModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspacetypes');\r\n        },\r\n\r\n        parse: function (response) {\r\n            response.results.unshift({ data: { properties: { wksp_type_id: -100, wksp_type_name: lang.search_select_wksp_type} } });\r\n            return response;\r\n        }\r\n\r\n    });\r\n\r\n    return searchwkspsModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model.factory',[\r\n    'module',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n    'conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model'     // Model to create the factory for\r\n], function (module, _, Backbone, ModelFactory, SearchWkspsModel) {\r\n\r\n  var searchwkspsModelFactory = ModelFactory.extend({\r\n\r\n    propertyPrefix: 'searchwksps',\r\n\r\n    constructor: function searchwkspsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      this.property = new SearchWkspsModel(undefined, {\r\n          connector: context.connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n        // Just fetch the model exposed y this factory\r\n        return this.property.fetch(options);\r\n    }\r\n\r\n  });\r\n\r\n  return searchwkspsModelFactory;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/searchresult.model',[\r\n    'csui/lib/backbone',   \r\n    'csui/utils/url',      \r\n    'conws/widgets/outlook/impl/utils/utility'\r\n], function (Backbone, Url, WkspUtil) {\r\n\r\n    var searchresultModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function searchresultModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            // Enable this model for communication with the CS REST API\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n\r\n                this.wkspName = options.wkspName;\r\n                this.wkspTypeId = options.wkspTypeId;\r\n                this.typeAhead = options.typeAhead;\r\n                this.pageSize = options.pageSize;\r\n                this.pageNo = options.pageNo;\r\n\r\n                this.nextPageUrl = \"\";\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            if (this.nextPageUrl) {\r\n                return this.connector.getConnectionUrl().getCgiScript() + this.nextPageUrl;\r\n            } else {\r\n                var typeString = this.wkspTypeId && this.wkspTypeId > 0 ? 'where_workspace_type_id=' + this.wkspTypeId : \"\";\r\n                var nameString = this.wkspName ? 'where_name=contains_' + encodeURIComponent(this.wkspName) : \"\";\r\n                // Combining \"sort by name\" and \"expanded_view=true\" together requires to index the workspace name column, \r\n                // otherwise will see 404 error. \r\n                var pagingString = 'sort=asc_name&page=' + this.pageNo + '&limit=' + this.pageSize;\r\n                var queryString = typeString ? typeString + '&' : '';\r\n                queryString = queryString + (nameString ? nameString + '&' : '') + pagingString;\r\n\r\n                return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspaces?expanded_view=true&' + queryString);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return searchresultModel;\r\n\r\n});\r\n\n","csui.define('conws/widgets/outlook/impl/searchwksps/impl/wksptypes.model',[\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'conws/widgets/outlook/impl/utils/utility',\r\n    'i18n!conws/widgets/outlook/impl/nls/lang'\r\n], function (Backbone, Url, WkspUtil, lang) {\r\n\r\n    var wksptypesModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            name: 'Unnamed'\r\n        },\r\n\r\n        constructor: function wksptypesModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n            if (options && options.connector) {\r\n                options.connector.assignTo(this);\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(WkspUtil.v1ToV2(this.connector.connection.url), 'businessworkspacetypes');\r\n        },\r\n\r\n        parse: function (response) {\r\n            var types = [];\r\n            types.push({ value: 0, name: lang.search_all_wksp });\r\n\r\n            return types;\r\n        }\r\n\r\n    });\r\n\r\n    return wksptypesModel;\r\n\r\n});\r\n\n","csui.define('conws/models/configurationvolume/configurationvolume.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function (_, $, Backbone, Url, FetchableMixin) {\r\n  'use strict';\r\n\r\n  var VolumesModel = Backbone.Model.extend({\r\n\r\n    constructor: function VolumesModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n      this.makeFetchable(options);\r\n    },\r\n\r\n    url: function () {\r\n      var baseUrl = this.connector.connection.url.replace('/v1', '/v2'),\r\n          getUrl  = Url.combine(baseUrl, 'configurationvolumes');\r\n      return getUrl;\r\n\r\n    },\r\n\r\n    parse: function (response) {\r\n      this.fetched = true;\r\n      return {shortcutItems: response.results};\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return true;\r\n    }\r\n  });\r\n\r\n  FetchableMixin.mixin(VolumesModel.prototype);\r\n  \r\n  return VolumesModel;\r\n}); \r\n\n","csui.define('conws/models/configurationvolume/configurationvolume.factory',[\r\n  'module', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/utils/contexts/factories/factory', 'csui/utils/contexts/factories/connector',\r\n  'conws/models/configurationvolume/configurationvolume.model', 'csui/utils/commands'\r\n], function (module, $, Backbone, ModelFactory, ConnectorFactory,\r\n    volumesModel, commands) {\r\n  'use strict';\r\n\r\n  var ConfigurationVolumeFactory = ModelFactory.extend({\r\n    propertyPrefix: 'configurationvolume',\r\n\r\n    constructor: function ConfigurationVolumeFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n      this.context = context;\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new volumesModel(options, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return this.property.isFetchable();\r\n    },\r\n\r\n    fetch: function (options) {\r\n      return this.property.ensureFetched(options);\r\n    }\r\n  });\r\n\r\n  return ConfigurationVolumeFactory;\r\n});\r\n\n","csui.define('bundles/conws-models',[\r\n  'conws/models/workspacecreateforms',\r\n  'conws/models/metadata.controller',\r\n  'conws/models/favorite.model',\r\n  'conws/models/workspacecontext/workspacecontext.model',\r\n  'conws/models/workspacecontext/workspacecontext.node.model',\r\n  'conws/models/workspacecontext/workspacecontext.node.factory',\r\n  'conws/models/workspacecontext/workspacecontext.factory',\r\n  'conws/utils/previewpane/impl/previewheader.model',\r\n  'conws/utils/previewpane/impl/attributes.model',\r\n  'conws/utils/previewpane/impl/role.model',\r\n  'conws/widgets/team/impl/team.model',\r\n  'conws/widgets/team/impl/team.model.factory',\r\n  'conws/widgets/team/impl/participants.columns',\r\n  'conws/widgets/team/impl/roles.columns',\r\n  'conws/widgets/team/impl/participant.model',\r\n  'conws/widgets/team/impl/participants.model',\r\n  'conws/widgets/team/impl/participants.model.factory',\r\n  'conws/widgets/team/impl/roles.model',\r\n  'conws/widgets/team/impl/roles.model.expanded',\r\n  'conws/widgets/team/impl/roles.model.factory',\r\n  'conws/widgets/team/impl/controls/filter/impl/filter.model',\r\n  'conws/models/categoryforms/categoryforms.model',\r\n  'conws/models/selectedmetadataform/selectedmetadataform.model',\r\n  'conws/models/selectedmetadataform/selectedmetadataform.factory',\r\n  'conws/utils/workspaces/impl/workspaceutil',\r\n  'conws/utils/workspaces/workspace.model',\r\n  'conws/widgets/relatedworkspaces/impl/relatedworkspaces.model',\r\n  'conws/widgets/relatedworkspaces/impl/relatedworkspaces.factory',\r\n  'conws/widgets/header/impl/header.model',\r\n  'conws/widgets/header/impl/header.model.factory',\r\n  'conws/widgets/header/impl/header.icon.model',\r\n  'conws/widgets/myworkspaces/impl/myworkspaces.model',\r\n  'conws/widgets/myworkspaces/impl/myworkspaces.model.factory',\r\n  'conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model',\r\n  'conws/widgets/outlook/impl/recentwksps/impl/recentwksps.model.factory',\r\n  'conws/widgets/outlook/impl/folder/impl/folders.model',\r\n  'conws/widgets/outlook/impl/wksp/impl/wksp.model',\r\n  'conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model',\r\n  'conws/widgets/outlook/impl/favoritewksps/impl/favoritewksps.model.factory',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/searchwksps.model.factory',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/searchresult.model',\r\n  'conws/widgets/outlook/impl/searchwksps/impl/wksptypes.model',\r\n  'conws/models/configurationvolume/configurationvolume.factory',\r\n  'conws/models/configurationvolume/configurationvolume.model'\r\n\r\n], {});\n"]}