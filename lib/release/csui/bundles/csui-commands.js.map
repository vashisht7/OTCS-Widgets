{"version":3,"sources":["../../src/utils/command.error.js","../../src/utils/commands/nls/localized.strings.js","../../src/utils/commands/nls/root/localized.strings.js","../../src/utils/commands/nls/localized.strings!i18n","../../src/utils/commands/versions/nls/localized.strings.js","../../src/utils/commands/versions/nls/root/localized.strings.js","../../src/utils/commands/versions/nls/localized.strings!i18n","../../src/utils/commandhelper.js","../../src/models/command.js","../../src/integration/folderbrowser/commands/nls/localized.strings.js","../../src/integration/folderbrowser/commands/go.to.node.history.js","../../src/integration/folderbrowser/commands/nls/root/localized.strings.js","../../src/integration/folderbrowser/commands/nls/localized.strings!i18n","../../src/integration/folderbrowser/commands/open.full.page.container.js","../../src/models/commands.js","../../src/utils/commands!csui-ext","../../src/utils/commands.js","../../src/utils/commands/add.categories.js","../../src/dialogs/file.open/impl/file.open!hbs","../../src/dialogs/file.open/file.open.dialog.js","../../src/utils/commands/add.js","../../src/utils/commands/add.item.metadata.js","../../src/utils/commands/add.version.js","../../src/utils/commands/open.node.perspective.js","../../src/utils/commands/browse.js","../../src/utils/commands/collection/nls/lang.js","../../src/utils/commands/collection/nls/root/lang.js","../../src/utils/commands/collection/nls/lang!i18n","../../src/utils/commands/collection/collect.items.js","../../src/utils/commands/multiple.items.js","../../src/utils/commands/confirmable.js","../../src/utils/commands/collection/remove.collected.items.js","../../src/utils/commands/copy.js","../../src/utils/routing.js","../../src/utils/node.links/node.links!csui-ext","../../src/utils/node.links/node.links.js","../../src/utils/commands/copy.link.js","../../src/models/perspective/perspective.model.js","../../src/utils/commands/create.perspective.js","../../src/utils/commands/node.js","../../src/utils/commands/delete.js","../../src/utils/commands/download.js","../../src/utils/commands/open.document/delegates/open.document.delegates!csui-ext","../../src/utils/commands/open.document/delegates/open.document.delegates.js","../../src/utils/commands/open.document/open.document.js","../../src/utils/commands/zipanddownload.js","../../src/utils/commands/open.classic.page.js","../../src/utils/commands/edit.js","../../src/utils/commands/editactivex.js","../../src/utils/commands/editofficeonline.js","../../src/models/perspective/server.adaptor.mixin.js","../../src/models/perspective/perspective.template.model.js","../../src/utils/commands/edit.perspective.js","../../src/utils/commands/editwebdav.js","../../src/utils/commands/nls/lang.js","../../src/utils/commands/nls/root/lang.js","../../src/utils/commands/nls/lang!i18n","../../src/utils/commands/email.link.js","../../src/utils/commands/execute.saved.query.js","../../src/utils/commands/favorite.add.js","../../src/utils/commands/favorite.remove.js","../../src/utils/commands/inlineedit.js","../../src/utils/commands/move.js","../../src/utils/commands/navigate.js","../../src/utils/commands/open.plugins/open.plugins!csui-ext","../../src/utils/commands/open.plugins/open.plugins.js","../../src/utils/commands/open.js","../../src/utils/commands/open.discussion.js","../../src/utils/commands/open.milestone.js","../../src/utils/commands/open.channel.js","../../src/utils/commands/open.news.js","../../src/utils/commands/open.poll.js","../../src/utils/commands/open.prospector.js","../../src/utils/commands/open.specific.classic.page.js","../../src/utils/commands/open.specific.node.perspective.js","../../src/utils/commands/open.task.js","../../src/utils/commands/open.taskgroup.js","../../src/utils/commands/open.tasklist.js","../../src/utils/commands/open.topic.js","../../src/utils/commands/permissions.js","../../src/utils/commands/properties.js","../../src/utils/commands/rename.js","../../src/utils/commands/rename.favorite.js","../../src/utils/commands/reserve.js","../../src/utils/commands/run.livereport.js","../../src/utils/commands/sign.out.js","../../src/utils/commands/switch.to.classic.js","../../src/utils/commands/unreserve.js","../../src/utils/commands/user.profile.js","../../src/utils/commands/versions/delete.js","../../src/utils/commands/versions/download.js","../../src/utils/commands/versions/open.js","../../src/utils/commands/versions/properties.js","../../src/utils/commands/versions/promote.version.js","../../src/utils/commands/versions!csui-ext","../../src/utils/commands/versions.js","../../src/utils/commands/filter.js","../../src/utils/accessibility.js","../../src/utils/commands/description.toggle.js","../../src/utils/commands/thumbnail.toggle.js","../../src/utils/commands/save.filter.js","../../src/utils/commands/maximize.widget.view.js","../../src/utils/commands/restore.widget.size.js","../../src/utils/commands/permissions/apply.permission.js","../../src/utils/commands/permissions/permission.util.js","../../src/utils/commands/permissions/edit.permission.js","../../src/utils/commands/permissions/change.owner.permission.js","../../src/utils/commands/permissions/delete.permission.js","../../src/utils/commands/permissions/add.user.group.js","../../src/utils/commands/permissions/add.owner.group.js","../../src/utils/commands/permissions/restore.public.access.js","../../src/utils/commands/personalize.page.js","../../src/utils/commands/version.settings.js","../../src/temporary/cop/commands/open.blog.js","../../src/temporary/cop/commands/open.faq.js","../../src/temporary/cop/commands/open.forum.js","../../src/temporary/cop/commands/open.wiki.js","../../src/temporary/cop/commands/open.mailstore.js","../../src/utils/commands/open.document/csui.open.document.delegates.js","../../src/utils/commands/goto.location.js","../../src/utils/commands/collection/collect.js","csui-commands.js"],"names":["csui","define","module","$","_","Backbone","log","base","CommandError","arg1","arg2","applyArg2","isString","this","errorDetails","Model","node","isObject","requestError","requestMessage","RequestErrorMessage","message","Error","stack","statusCode","call","name","prototype","Object","create","root","en-us","en","ShortcutPickerTitle","CommandNameAddItemMetadata","CommandNameAddVersion","AddVersionNotAllowed","CommandTitleCopy","CommandNameCopy","CommandVerbCopy","DialogTitleSingleCopy","DialogTitleCopy","SomeFilesNotCopiedSuccessfully","CopyingNodes","CopyingNode","CopyPageLeavingWarning","CopyingOneItem","CopyItems","CopySomeItems","CopyItemsNoneMessage","CopyOneItemSuccessMessage","CopySomeItemsSuccessMessage","CopyManyItemsSuccessMessage","CopyOneItemFailMessage","CopySomeItemsFailMessage","CopyManyItemsFailMessage","CopySomeItemsFailMessage2","CopyManyItemsFailMessage2","CopyingLocationLabel","CopiedLocationLabel","CopyNotAllowed","DeleteCommandConfirmDialogTitle","DeleteCommandConfirmDialogHtml","DeleteCommandConfirmDialogSingleMessage","DeleteCommandConfirmDialogMultipleMessage","CommandTitleDelete","CommandNameDelete","CommandVerbDelete","DeletePageLeavingWarning","DeleteItemFailed","DeleteItems","DeletingOneItem","DeletingSomeItems","DeleteItemsNoneMessage","DeleteOneItemSuccessMessage","DeleteSomeItemsSuccessMessage","DeleteManyItemsSuccessMessage","DeleteOneItemFailMessage","DeleteSomeItemsFailMessage","DeleteManyItemsFailMessage","DeleteSomeItemsFailMessage2","DeleteManyItemsFailMessage2","deletingLocationLabel","deletedLocationLabel","DeleteNotAllowed","ApplyingManyItemsSuccessMessage","ApplyingOneItemFailMessage","ApplyingManyItemsFailMessage2","CommandNameDownload","CommandVerbDownload","CommandNameZipDownload","CommandVerbZipDownload","VerifyZipAndDownloadPrefetch","ExtractingZipAndDownload","CompressingZipAndDownload","CleanUpZipAndDownload","PreFlightDialogBtnContinue","DownloadDialogBtnDownload","DialogBtnCancel","InvalidArchiveCharacters","InvalidArchiveName","TheArchiveNameCannotBeEmpty","TheArchiveNameMaxLength","CommandTitleMove","CommandNameMove","CommandNameVerbMove","DialogTitleSingleMove","DialogTitleMove","SomeFilesNotMovedSuccessfully","MovePageLeavingWarning","MovingNodes","MovingNode","MovingOneItem","MovingItems","MovingSomeItems","MoveItemsNoneMessage","MoveOneItemSuccessMessage","MoveSomeItemsSuccessMessage","MoveManyItemsSuccessMessage","MoveOneItemFailMessage","MoveSomeItemsFailMessage","MoveManyItemsFailMessage","MoveSomeItemsFailMessage2","MoveManyItemsFailMessage2","MovingLocationLabel","MovedLocationLabel","MoveNotAllowed","CommandNamePaste","CommandNameReserve","CommandVerbReserve","ReservePageLeavingWarning","ReserveItemsNoneMessage","ReserveOneItemSuccessMessage","ReserveSomeItemsSuccessMessage","ReserveManyItemsSuccessMessage","ReserveOneItemFailMessage","ReserveSomeItemsFailMessage","ReserveManyItemsFailMessage","CommandNameFavorite","CommandVerbFavorite","CommandDoneVerbFavorite","CommandRemovedVerbFavorite","updateFavoriteFailTitle","updateFavoriteFailMessage","CommandDescriptionToggle","CommandHideDescription","CommandShowDescription","CommandNameEmailLink","CommandVerbEmailLink","EmailLinkSubject","EmailLinkDesktop","EmailAppleLinkFormat","EmailLinkCommandFailedWithTooMuchItemsErrorMessage","SignOutCommandName","SwitchToClassicCommandName","CommandNameUnreserve","CommandVerbUnreserve","UnreservePageLeavingWarning","UnreserveItemsNoneMessage","UnreserveOneItemSuccessMessage","UnreserveSomeItemsSuccessMessage","UnreserveManyItemsSuccessMessage","UnreserveOneItemFailMessage","UnreserveSomeItemsFailMessage","UnreserveManyItemsFailMessage","UserProfileCommandName","CommandTitleUpload","UploadNotAllowed","CommandVerbRename","CommandNameSaveFilter","CommandVerbSaveFilter","DialogTitleSaveFilter","SaveFilterCommandSuccessfully","NoEditUrl","CommandNameCopyLink","CommandVerbCopyLink","CopyLinkSuccessMessage","CopyLinkFailMessage","DeletePermissionCommandRemoveOwner","DeletePermissionCommandRemoveGroup","DeletePermissionCommandRemovePublicAccess","DeletePermissionCommandRemoveOther","DeletePermissionCommandConfirmDialogTitle","DeletePermissionCommandConfirmDialogSingleMessage","DeletePermissionCommandConfirmDialogPublicAccessMessage","DeletePermissionCommandSuccessMessage","DeletePermissionCommandSuccessMessageWithCount","DeletePermissionCommandFailMessage","publicAccess","RestorePublicAccessSuccessMessage","RestorePublicAccessSuccessMessageWithCount","undefinedCollection","EditPermissionCommandFailMessage","Owner","CommandNameAddOwnerOrOwnerGroup","AddOwnerOrGroup","AddOwner","AddOwnerGroup","CommandNameAddUserorGroup","CommandNameRestorePublicAccess","AddButtonLabel","AddOwnerOrGroupDialogTitle","AddOwnerDialogTitle","AddOwnerGroupDialogTitle","ChangeOwnerPermissionCommand","ChangeOwnerGroupPermissionCommand","AddUserOrGroupSuccess","AddUserOrGroupFailure","AddUserOrGroupSuccessWithCount","formatForNone","formatForOne","formatForTwo","formatForFive","AppliedPermissions","AppliedPermissionsOneSuccess","AppliedPermissionsOnlySuccess","AppliedPermissionsOneFailure","AppliedPermissionsOnlyFailure","AppliedPermissionsSuccessAndFailure","CommandSuccessfullySingular","CommandFailedSingular","CommandSuccessfullyPlural","CommandFailedPlural","CommandFailedPartial","NoConnectivity","GoToOffline","viewTypeUnsupported","MobileIOS","DesktopAndroid","Close","addButton","otheruser","addDocument","allUsersAndGroups","addUsersAndGroups","addGroups","allGroups","cancelButtonLabel","applyButtonLabel","ThumbnailTitle","ListViewTitle","DensityLabel","error","EditPerspective","editPerspectiveErrorMessage","editPageDialogMessage","editPageButton","personalizePageButton","editPageCancelButton","editPageTitle","CreatePerspective","searchButtonMessage","personalizePage","CommandNameVersionDelete","CommandVerbVersionDelete","VersionDeleteCommandConfirmDialogSingleMessage","VersionDeleteCommandConfirmDialogMultipleMessage","DeleteVersionPageLeavingWarning","DeleteVersions","DeletingSomeVersions","DeletingOneVersion","DeleteVersionItemsNoneMessage","DeleteVersionOneItemSuccessMessage","DeleteVersionSomeItemsSuccessMessage","DeleteVersionManyItemsSuccessMessage","DeleteVersionOneItemFailMessage","DeleteVersionSomeItemsFailMessage2","DeleteVersionManyItemsFailMessage2","CommandNamePromoteVersion","CommandVerbPromoteVersion","MessageVersionPromoted","DialogPromoteVersion","require","lang","versionsLang","VersionModel","config","CommandHelper","extend","Events","checkNodeTypesAndRights","nodes","types","rights","isArray","container","contains","length","all","get","right","checkNodeTypes","attributes","isBackbone","type","checkNodeRights","getJustOneNode","status","at","getAtLeastOneNode","Collection","collection","model","updateNode","attributesToUpdate","save","wait","patch","silent","then","fetch","force","commandError","Deferred","reject","handleExecutionResults","promise","options","handleExecutionResultsDeferred","modulePromise","GlobalMessage","resolve","whenAll","always","parameters","results","okCnt","failedCnt","each","result","undefined","cancelled","suppressSuccessMessage","showMessage","str","sformat","command","offlineSupport","suppressFailMessage","customError","_getErrorMessageFromResponse","err","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","reset","text","refreshModelAttributesFromServer","tempNode","clone","set","original","showOfflineMessage","yesCallBck","noCallBack","self","modalAlert","showInformation","buttons","YesNo","answer","window","location","href","trigger","idAttribute","constructor","apply","arguments","enabled","scope","_getNodesByScope","checkTypes","openable","checkOpenability","signatures","checkPermittedActions","isNonPromoted","checkFn","_getNonPromotedCheckFunctionsForSignatures","find","action","models","_getCheckFunctionsForSignatures","any","signature","actions","findRecursively","every","indexOf","checkNode","_getNodeActionForSignature","CommandModel","visitedNodesByContext","defaults","GoToHistory","visitedNodes","context","_ensureGoBackList","cid","execute","deferred","NextNodeModelFactory","nextNode","getModel","pop","clearHistory","NodeModelFactory","visitCurrentNode","Factory","nodeId","push","on","OpenFullPageContainer","nodeLinks","open","getUrl","getSignatures","toolbarItems","sigArray","mapObject","val","key","union","without","getCollection","pluck","commands","commandsToRemove","remove","getAllSignatures","chain","map","flatten","compact","unique","value","CommandCollection","extraCommands","browse","download","add","navigate","version","Command","command_key","originalFormCollection","form","additionalProperties","MetadataAddCategoriesController","AddNewCategory","done","resp","addPropertiesCallback","parentView","catModel","fail","warn","console","last","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","helper","escapeExpression","multiple","helperMissing","hash","registerPartial","Marionette","id","ItemView","className","templateHelpers","ui","fileInput","events","change @ui.fileInput","earlierElement","document","body","debug","onDestroy","off","show","render","append","el","_processFiles","event","originalEvent","files","target","dataTransfer","NodeModel","FileOpenDialog","addableTypes","addableType","newNode","addableTypeName","_getAddableTypeName","forwardToTable","type_name","connector","_selectShortcutTarget","actionType","_selectFilesForUpload","errMsg","commandSignature","fileOpenDialog","isActionInProgress","CommandTitleAdd","listenTo","fileUploadHelper","uploadController","newUpload","addFilesToUpload","destroy","NodePicker","pickerOptions","dialogTitle","initialContainer","globalSearch","startLocation","startLocations","unselectableTypes","resolveShortcuts","resultOriginalNode","nodePicker","args","original_id","original_id_expand","findWhere","_getAddableTypesWithoutInlineFormAsMap","144","isAddableTypeWithoutInlineForm","AddItemMetadataCommand","MetadataAddItemController","displayForm","tableView","lockedForOtherContols","_pickFileAndUpload","file","_addVersionController","AddVersionController","view","originatingView","selectedNode","uploadFile","viewState","viewStateModel","omit","OpenNodePerspectiveCommand","collectCommandSignature","addItemsToolTip","collectItemsDialogTitle","selectCollectionDialogTitle","selectButtonLabel","selectCollectButtonLabel","conflictsItemsHeader","conflictsDialogCloseLabel","CollectItemsNoneMessage","CollectOneItemSuccessMessage","CollectManyItemsSuccessMessage","CollectOneItemFailMessage","CollectManyItemsFailMessage","RemoveCollectItemsCommandConfirmDialogHtml","RemoveCommandConfirmDialogSingleMessage","RemoveCommandConfirmDialogMultipleMessage","RemoveCommandConfirmDialogTitle","RemoveItemsNoneMessage","RemoveOneItemSuccessMessage","RemoveSomeItemsSuccessMessage","RemoveManyItemsSuccessMessage","RemoveOneItemFailMessage","RemoveSomeItemsFailMessage","RemoveManyItemsFailMessage","RemoveSomeItemsFailMessage2","RemoveManyItemsFailMessage2","RemoveItems","RemovingOneItem","RemovingSomeItems","CollectingOneItem","CollectingItems","CollectManyItemsFailMessage2","removefromCollection","Url","NodeCollection","parallelism","TaskQueue","UploadFileCollection","PageLeavingBlocker","CollectionConflictView","CollectCommand","successMessages","formatForMany","errorMessages","__super__","_addToCollection","selectedOptions","selectedNodes","state","count","total","targetFolder","uploadCollection","_announceOperationStart","fileUpload","unset","_addSelectedNodesToCollection","promises","hideFileUploadProgress","_checkPromises","failedNodes","_showDialog","resolveOption","dialog","kill","successNodes","_showGlobalMessage","_announceOperationEnd","showError","selectableTypes","showAllTypes","orderBy","selectMultiple","targetCollection","queue","pending","worker","node_id","targetId","_collectNode","_addToCurrentTable","cause","showFileUploadProgress","oneFileTitle","oneFileSuccess","multiFileSuccess","oneFilePending","multiFilePending","oneFileFailure","multiFileFailure","someFileSuccess","someFilePending","someFileFailure","enableCancel","targetFolderID","nodeAttr","collection_id","collectOptions","url","combine","getConnectionUrl","getApiBase","contentType","makeAjaxCall","_getListView","conflictFiles","label","toolTip","click","_showConflictDialog","DialogView","failureMessage","formatMessage","title","midSize","iconLeft","successPromises","failedPromises","prom","collectItem","isLocallyCreated","refernce_id","unshift","successCount","successMessage","blockActions","enable","disable","unblockActions","_performActions","_announceStart","index","_performAction","bind","_announceFinish","suppressMultipleSuccessMessage","showSuccess","suppressMultipleFailMessage","checkResult","countFailed","countOk","_getErrorMessage","msg","_getSuccessMessage","showSuccessWithLink","msgOptions","cnt","emessages","smessages","toLowerCase","deleteBlockAction","pageLeavingWarning","MultipleItemsCommand","ConfirmableCommand","_confirmAction","_getConfirmTemplate","_getConfirmData","html","alertDialog","confirmQuestion","arg","RemoveCollectionItemsCommand","allowCollectionRefetch","d","operation","containerCollection","jqxhr","abort","startGlobalMessage","localGlobalMessage","_executeRemoveCollectionItems","first","commandData","showProgressDialog","infiniteScroll","merge","oneSuccess","rejectResults","newStatus","errors","allowMultipleInstances","ConflictResolver","ApplyPropertiesSelectorView","CopyCommandParent","verb","_selectCopyOptions","applyProperties","openSelectedProperties","bundleNumber","Date","getTime","copyToCurrentFolder","namesToResolve","returnObj","mime_type","size","size_formatted","targetLocation","copyNamesToResolve","_resolveNamingConflicts","copyInstructions","instruction","_metadataHandling","sourceNode","aNode","_copySelectedNodes","targetNodeIncurrentCollection","findNodeFromCollection","copyResults","userAction","contextMenuCopy","numNodes","parent","initialSelection","includeCombineProperties","propertiesSeletor","includeResources","nodeNames","h1","h1Label","actionBtnLabel","excludeAddVersion","run","items","_blockingCounter","MetadataCopyMoveItemsController","controllerFunction","openMetadata","metadataController","CopyMoveItemsWithMetadata","APPLY_DESTINATION_PROPERTIES","COMBINE_ALL_PROPERTIES","CopyMoveItemsRequiredMetadata","KEEP_ORIGINAL_PROPERTIES","inheritance","_getCategories","categories","_copyNode","showProgressPanel","locationLabelPending","locationLabelCompleted","nextNodeModelFactory","parent_id","newName","roles","assignTo","connection","extended_data","getCategoriesOptions","param","response","statusText","categoryGroupMapping","forms","readOldSettings","moduleName","developmentPage","oldConfig","requirejs","s","contexts","routesWithSlashes","test","pathname","RulesMatchingMixin","routing","rules","NodeLinkModel","sequence","makeRulesMatching","mixin","NodeLinkCollection","comparator","rule","item","matchRules","completeUrl","serverUrl","absoluteUrl","makeAbsoluteUrl","_getApplicationUrlPrefix","currentRouter","urlParams","buildUrlParams","getCgiScript","origin","search","NodeLinks","urlOptions","nodeLink","success","_copyToClipboard","clipboardData","setData","element","createTextNode","elParent","createElement","style","color","background","backgroundColor","appendChild","getSelection","selection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","removeChild","UploadableMixin","ConnectableMixin","PerspectiveModel","pick","makeUploadable","makeConnectable","getPerspectiveId","getPerspective","setPerspective","update","changes","isNew","urlBase","isNumber","prepareFormData","pData","JSON","stringify","enableInlinePerspectiveEditing","ConnectorFactory","AncestorCollectionFactory","perspective","canEditPerspective","_applicationScope","inlinePerspectiveEditing","_editInline","_editInClassicPMan","_preparePerspectiveConfig","perspectiveConfig","widgets","overrideType","containerType","cascading","nodepath","_getNodePath","PManView","getObject","f","_getForm","submit","attr","_getUrl","appendTo","params","_getUrlQueryParameters","i","hasOwnProperty","toString","elements","btn-mode-code","btn-view-general","btn-view-rules","btn-view-layout","btn-view-widgets","view-perspective-action","perspective-action-create","perspective-action-edit","perspective-action-copy","view-perspective-form","perspective-title","perspective-type","perspective-scope","perspective-nodetypes","perspective-node","perspective-cascading","display-size-msg","rules-code","layout-flow","layout-left-center-right","layout-grid","layout-tabbed","widgetGroupsBlacklist","widgetsWhitelist","disableGrouping","NodeCommand","DeleteCommand","localUploadFileCollection","localNextNodeModelFactory","_executeDelete","setTimeout","parentId","Connector","doneVerb","CommandDoneVerbDownload","_getNode","isAppleMobile","_openContent","_downloadContent","generationVersionNumber","versionsObj","currentVersion","current_version","cloneNode","forEach","property","versions","_executeContentCommand","token","_getContentUrl","_performDownload","content","focus","close","requestContentAuthToken","encodeURIComponent","iframe","hide","delay","Math","min","connectionTimeout","OpenDocumentDelegateModel","OpenDocumentDelegateCollection","findByNode","openDocumentDelegates","chooseDelegatedCommand","URL","PreFlightModel","StagesModel","ModalAlert","selfBlockOnly","flag","zipAndDownloadExists","idx","filter","downloadExists","stagesModel","_deferred","stageAndPrepeareDownload","_preFlightCheck","formData","id_list","preFlightModel","preflight","preflightXHR","showLoader","_getJobId","ajaxOptions","changeStageMessage","xhr","currentStage","changeLoaderMessage","_checkStage","jobIdModel","some","stage","complete","stageCheckTimeout","clearTimeout","_showdialogbox","dialogOptions","_dialog","onHideDialog","jobs","checkStage","DownloadDialogView","archiveName","fileName","isValidName","trim","errorEl","toolItem","$el","removeClass","appendQuery","replace","default","disabled","onClickCancelButton","openInNewTab","classicUnsupported","_classicUnsupported","_navigateTo","urlQuery","getUrlQueryParameters","shouldCloseTabAfterRedirect","showInfo","closeUrl","isFunction","isAbsolute","getOrigin","combineQueryString","nextURL","parseParam","OpenClassicPageCommand","makeServerAdaptor","isFetchableDirectly","parse","perspectives","container_type","constantData","constant_data","override_type","overrideId","override_id","node_path","rule_data","constant_extraction_mode","pnodepath","perspective_node_path","ServerAdaptorMixin","PerspectiveTemplateModel","isFetchable","attrs","perspectiveCollection","PerspectiveUtil","enablePersonalization","_enablePersonalizePage","_enableEditPerspective","_enableCreatePerspective","perspectiveOptions","hasWidgetId","has","_fetchPerspective","perspectiveModel","_continueExecution","enableEditPerspective","enableCreatePerspective","_promptToChooseEditPage","_doPersonalizePage","_doEditPage","perspectiveId","perspectiveTemplate","allPerspectives","PersonalizationModel","ApplicationScopeModelFactory","UserModelFactory","sourceModel","applicationScope","currentPerspective","overrideInfo","override","defPersonal","perspective_id","personalization","loadPersonalization","mode","MODE_PERSONALIZE","_doEditPerspective","_doCreatePerspective","_createInline","_createInClassicPMan","showYes","labelYes","showNo","labelNo","showCancel","labelCancel","_getEditForm","_getEditUrlQueryParameters","_getCreateForm","_getCreateUrlQueryParameters","publicLang","extraLinksInfo","rewriteApplicationURL","enableAppleSupport","appleNodeLinkBase","applicationUrl","_getApplicationUrl","_getNodesLinks","newHref","_getEMailSubject","_openNewHref","iOSEnabled","iOSText","androidText","desktopText","actionUrl","nodeLinkInfo","lastIndexOf","substr","extraLinkInfo","nodeLinksOptions","NEW_LINE","extraInfo","join","_openFormInSidepanel","_triggerSearchResults","SearchQueryModelFactory","searchQuery","clear","SidePanelView","SearchCustomObjectView","SearchCustomQueryFactory","savedQuery","ensureFetched","schema","customSearchForm","savedSearchQueryId","hideSearchButton","showInSearchResultsNewPerspective","sidePanel","slides","footer","sidePanelClassName","triggerMethod","actionButton","loadCustomSearch","isSearchEnabled","useContainer","FavoriteModel","modelId","selected","addToFavorites","removeFromFavorites","InlineEditCommand","inlineFormViewFactory","inlineFormView","getInlineFormView","MoveCommandParent","uploadFileModels","_selectMoveOptions","moveNamesToResolve","moveInstructions","_moveSelectedNodes","filemodel","NodeDestinationPicker","_moveNodeWithMetadata","_moveNode","errObj","bodyParam","moveOptions","method","getAjaxContentType","nodeID","finish","fields","properties","request","OpenPluginModel","plugin","OpenPluginCollection","widgetOnly","openWindow","getUrlQuery","openWidget","createWidget","openPlugins","NodeActionCollection","DownloadCommand","openAuthenticatedPage","forceDownload","_checkPermission","permitted","_showOverview","_openWindow","widgetView","_openWidget","FullPageModal","ViewerView","_openURL","needsAuthentication","openables","func","objAction","objId","nexturl","order","summaries","classicNodes","isSupported","smartNodes","navigationView","metadatanavigation","closest","_getAtLeastOneNode","PermissioNavigationWidget","MetadataView","PermissionsView","permissionsView","showInDialogView","dialogView","mdv","shortcutNode","showCloseIcon","showBackIcon","activeTab","metadataTabView","selectedTab","tabLinks","showPermissionView","isExpandedView","nameAttribute","supportOriginatingView","targetView","triggerMethodOn","_showOriginatingView","$csProperties","$originatingView","width","direction","metadataView","isDisplayed","requireSwitched","largeSize","header","MetadataFactory","_executeWithSaveState","metadataModel","navigator","selectedProperty","isThumbnailView","thumbnailView","_isInMetadataPerspective","metadataInfo","keys","_executeWithoutSaveState","MetadataNavigationWidget","NodeVersionCollection","metadata","showThumbnails","disableViewState","_showNode","addClass","_isPermissionsView","_isPermissionsExplorer","parentNode","classList","isUndefined","enableMetadataPerspective","rename","RenameFavoriteCommand","inlineFormFavoriteView","isReservedClicked","user","reserved_user_id","signInPageUrl","_signOut","cgiUrl","authenticator","unauthenticate","reason","query","ClassicNodes","urlQueryParameters","classicNode","_replaceParameters","viewType","classicview","isUnreservedClicked","formatMemberName","UserWidgetView","userId","userid","baseElement","showUserProfileLink","showMiniProfile","enableSimpleSettingsModel","enableUploadProfilePicture","loggedUserId","showUserSettings","showUserProfileDialog","versionLang","VersionDeleteCommand","DeleteVersionSomeItemsFailMessage","DeleteVersionManyItemsFailMessage","selectedVersions","allModels","OpenCommand","PropertiesCommand","fakeActions","newVersion","Array","errorObj","VersionDownloadCommand","VersionOpenCommand","VersionPropertiesCommand","PromoteVersionCommand","_isSupported","notSupportedObjects","inArray","_accessibleMode","_accessibleTable","accessibleTable","isAccessibleMode","isAccessibleTable","Accessibility","thumbnailViewState","showDescriptions","langStr","toolbarListItem","toolbarListItemAnchor","backbone","enableGridView","icon","svgId","contents","replaceWith","_selectSaveFilterOptions","facets","filterName","selectedFacets","filters","facet","facettypes","facetArrayType","values","facettype","ajaxFormData","location_id","selected_facets","saveFilterOptions","virtualFolderId","virtualFolderNode","link_url","dets","responseText","saveFilter","hasClass","checkMaximizeMode","generateSuccessMessage","failure","errObject","commandName","errObjects","failedFilesCollection","errCollection","langTitle","successMsg","showPermissionApplyingProgress","PermissionUtil","permissionModel","right_id","permissionType","filterId","nodeModel","userHasEditPermissions","failureMsg","_getMessageWithUserDisplayName","EditPermissionHelper","PermissionPreCheck","loginUserId","editPermissionHelper","popoverPlacement","popoverAtBodyElement","popoverTargetElement","permissions","readonly","applyTo","_showSelectPermissionLevelPopover","userSelection","saveAttr","apply_to","include_sub_types","includeSubTypes","unformattedMsg","displayName","memberTypeSupport","isDisable","userExpandDetails","currentRow","permissionsContentView","UserPickerView","MemberModelFactory","NodePermissionModel","memberFilter","userPickerView","userPickerModel","userpickerRegion","Region","currentView","getReadPermissions","right_id_expand","DeletePermissionCommand","confirmDialogMessage","setCommandTitle","ApplyPermissionView","ApplyPermissionHeaderView","BlockingView","removePermission","_executeDeletePermission","_deletePermission","headerView","_view","imbue","origView","permissionModelType","subFolderSelected","destroyDialog","processForEmptyOwner","handleFailure","failedPermissionsCollection","GrantAccessGroupOnly","_selectAddUserOrGroupOptions","selectedMember","members","selectedPermissions","permissionModelData","nodePermissionModel","MembersPickerDialog","unSelectableMembers","originalCollection","permissionCollection","member","grantAccessGrpOnly","dialogClass","adduserorgroup","addButtonLabel","availablePermissions","unselectableMembers","owner","noOwnerOrGroup","noGroup","adminPrivilege","authUser","AdminRestoreOwner","AdminRestoreOwnerGroup","_selectAddOwnerOrOwnerGroupOptions","include_sub_type","addOwnerGroup","_user","userHasEditPermissionsAction","AdminRestorePublic","_executeApplyPermission","restorePublicAccess","addPublicAccess","_initPersonalization","toJSON","personalizationModel","faq","OpenSpecificNodePerspectiveCommand","OpenDocumentContentCommand","allowViewContent","allowPerspective","decides","supportedObjects","_makeAccessible","that","executeDefaultAction","cancel","defaultActionController","executeAction","CollectCommandParent","unsupportedObjects","_checkPromisess","targetNodeInCurrentCollection"],"mappings":"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","file":"csui-commands.js","sourcesContent":["csui.define('csui/utils/command.error',[\"module\",\r\n  \"csui/lib/jquery\",\r\n  \"csui/lib/underscore\",\r\n  'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  \"csui/utils/base\"\r\n], function (module, $, _, Backbone, log, base) {\r\n\r\n  // constructor!!\r\n  function CommandError(arg1, arg2) {\r\n\r\n    if (!arg1) {\r\n      throw new Error(\"No argument passed\");\r\n    }\r\n\r\n    function applyArg2() {\r\n      // the second argument can be a object with errorDetails and/or node members or just\r\n      // a single errorDetails string or a NodeModel\r\n      if (arg2 && _.isString(arg2)) {\r\n        this.errorDetails = arg2;\r\n      } else {\r\n        if (arg2 instanceof Backbone.Model) {\r\n          this.node = arg2;\r\n        } else {\r\n          if (arg2 && _.isObject(arg2)) {\r\n            if (arg2.errorDetails && _.isString(arg2.errorDetails)) {\r\n              this.errorDetails = arg2.errorDetails;\r\n            }\r\n            if (arg2.node instanceof Backbone.Model) {\r\n              this.node = arg2.node;\r\n            }\r\n            if (arg2.requestError && _.isObject(arg2.requestError)) {\r\n              var requestMessage = new base.RequestErrorMessage(arg2.requestError);\r\n              if (this.message) {\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.message;\r\n                }\r\n              } else {\r\n                this.message = requestMessage.message;\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.errorDetails;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (arg1 instanceof Error) {\r\n      this.message = arg1.message;\r\n      if (arg1.stack) {\r\n        this.stack = arg1.stack;\r\n      }\r\n    } else {\r\n      if (_.isString(arg1)) {\r\n        this.message = arg1;\r\n      } else {\r\n        var requestMessage = new base.RequestErrorMessage(arg1);\r\n        this.message = requestMessage.message;\r\n        this.errorDetails = requestMessage.errorDetails;\r\n        this.statusCode = requestMessage.statusCode;\r\n      }\r\n    }\r\n    applyArg2.call(this);\r\n    this.name = \"CommandError\";\r\n  }\r\n\r\n  CommandError.prototype = Object.create(Error.prototype);\r\n\r\n  return CommandError;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/localized.strings',{\r\n\r\n  // Add\r\n  ShortcutPickerTitle: \"Select target for Shortcut\",\r\n\r\n  // AddItemMetadata\r\n  CommandNameAddItemMetadata: \"Add Item with metadata\",\r\n\r\n  CommandNameAddVersion: \"AddVersion\",\r\n  AddVersionNotAllowed : 'Unable to add version. Please try again when the current operation is finished',\r\n\r\n  // Copy\r\n  CommandTitleCopy: \"Copy items\",\r\n  CommandNameCopy: \"Copy\",\r\n  CommandVerbCopy: \"copy\",\r\n  DialogTitleSingleCopy: \"Copy {0} item\",\r\n  DialogTitleCopy: \"Copy {0} items\",\r\n  SomeFilesNotCopiedSuccessfully: 'Some items were not successfully copied.',\r\n  CopyingNodes: 'Copying {0} nodes',\r\n  CopyingNode: 'Copying 1 node',\r\n  CopyPageLeavingWarning: \"If you leave the page now, pending items will not be copied.\",\r\n  CopyingOneItem: 'Copying \"{0}\"',\r\n  CopyItems: 'Copying {0} items',\r\n  CopySomeItems: 'Copying {0} items',\r\n  CopyItemsNoneMessage: \"No items copied.\",\r\n  CopyOneItemSuccessMessage: '\"{0}\" copied',\r\n  CopySomeItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyManyItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyOneItemFailMessage: '\"{0}\" failed to copy',\r\n  CopySomeItemsFailMessage: '{0} items failed to copy.',\r\n  CopyManyItemsFailMessage: '{0} items failed to copy.',\r\n  CopySomeItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n  CopyManyItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n  CopyingLocationLabel :  'Copying to \"{0}\"',\r\n  CopiedLocationLabel : 'Copied to \"{0}\"',\r\n  CopyNotAllowed : 'Unable to copy. Please try again when the current operation is finished',\r\n\r\n  // Delete\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  DeleteCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                  \"<%- message %>\" +\r\n                                  \"</span>\",\r\n  DeleteCommandConfirmDialogSingleMessage: \"Do you want to delete {0}?\",\r\n  DeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} items?\",\r\n  CommandTitleDelete: \"Delete items\",\r\n  CommandNameDelete: \"Delete\",\r\n  CommandVerbDelete: \"delete\",\r\n  DeletePageLeavingWarning: \"If you leave the page now, pending items will not be deleted.\",\r\n  DeleteItemFailed: 'Deleting item {0} failed.',\r\n  DeleteItems: 'Deleting {0} items',\r\n  DeletingOneItem: 'Deleting \"{0}\"',\r\n  DeletingSomeItems: 'Deleting {0} items',\r\n  DeleteItemsNoneMessage: \"No items deleted.\",\r\n  DeleteOneItemSuccessMessage: \"'{0}' deleted.\",\r\n  DeleteSomeItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteManyItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteOneItemFailMessage: \"'{0}' failed to delete.\",\r\n  DeleteSomeItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteManyItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteSomeItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n  DeleteManyItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n  deletingLocationLabel: 'Deleting from \"{0}\"',\r\n  deletedLocationLabel: 'Deleted from \"{0}\"',\r\n  DeleteNotAllowed : 'Unable to delete. Please try again when the current operation is finished',\r\n\r\n  ApplyingManyItemsSuccessMessage: \"Applied successfully to {0} items.\",\r\n  ApplyingOneItemFailMessage: \"Failed to apply to 1 item.\",\r\n  ApplyingManyItemsFailMessage2: \"Failed to apply to {0} items.\",\r\n\r\n  // Download\r\n  CommandNameDownload: \"Download\",\r\n  CommandVerbDownload: \"download\",\r\n\r\n  // Zip & Download\r\n  CommandNameZipDownload: \"Download\",\r\n  CommandVerbZipDownload: \"Download\",\r\n  VerifyZipAndDownloadPrefetch: \"Verifying items\",\r\n  ExtractingZipAndDownload: \"Extracting items\",\r\n  CompressingZipAndDownload: \"Compressing items\",\r\n  CleanUpZipAndDownload: \"Cleaning up\",\r\n  PreFlightDialogBtnContinue: \"Continue\",\r\n  DownloadDialogBtnDownload: \"Download\",\r\n  DialogBtnCancel: \"Cancel\",\r\n  InvalidArchiveCharacters: \"Special characters cannot be used in archive name: \\\\?:<>|\\\"\\/@^,{}[]!%&()~'\",\r\n  InvalidArchiveName: \"Invalid archive name.\",\r\n  TheArchiveNameCannotBeEmpty: \"Archive name cannot be empty.\",\r\n  TheArchiveNameMaxLength: \"Archive name is greater than the maximum length (248)\",\r\n\r\n  // Move\r\n  CommandTitleMove: \"Move items\",\r\n  CommandNameMove: \"Move\",\r\n  CommandNameVerbMove: \"move\",\r\n  DialogTitleSingleMove: \"Move {0} item\",\r\n  DialogTitleMove: \"Move {0} items\",\r\n  SomeFilesNotMovedSuccessfully: 'Some items were not successfully moved.',\r\n  MovePageLeavingWarning: \"If you leave the page now, pending items will not be moved.\",\r\n  MovingNodes: 'Moving {0} nodes',\r\n  MovingNode: 'Moving 1 node',\r\n  MovingOneItem: 'Moving \"{0}\"',\r\n  MovingItems: 'Moving {0} items',\r\n  MovingSomeItems: 'Moving {0} items',\r\n  MoveItemsNoneMessage: \"No items moved.\",\r\n  MoveOneItemSuccessMessage: '\"{0}\" moved',\r\n  MoveSomeItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveManyItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveOneItemFailMessage: '\"{0}\" failed to move',\r\n  MoveSomeItemsFailMessage: '{0} items failed to move.',\r\n  MoveManyItemsFailMessage: '{0} items failed to move.',\r\n  MoveSomeItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n  MoveManyItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n  MovingLocationLabel :  'Moving to \"{0}\"',\r\n  MovedLocationLabel : 'Moved to \"{0}\"',\r\n  MoveNotAllowed : 'Unable to move. Please try again when the current operation is finished',\r\n\r\n  // Paste\r\n  CommandNamePaste: \"Paste\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  //Add Favorite\r\n  CommandNameFavorite: \"Add Favorite\",\r\n  CommandVerbFavorite: \"update Favorites\",\r\n  CommandDoneVerbFavorite: \"added to Favorites\",\r\n  CommandRemovedVerbFavorite: \"removed from Favorites\",\r\n  updateFavoriteFailTitle: \"Update Favorite\",\r\n  updateFavoriteFailMessage: 'Failed to update Favorite for node \"{0}\". \\n\\n{1}',\r\n\r\n  //Description\r\n  CommandDescriptionToggle: \"Description Toggle\",\r\n  CommandHideDescription: \"Hide description\",\r\n  CommandShowDescription: \"Show description\",\r\n\r\n  // Share\r\n  CommandNameEmailLink: \"Share\",\r\n  CommandVerbEmailLink: \"share\",\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n  EmailLinkCommandFailedWithTooMuchItemsErrorMessage: \"Mail as link failed. Too many items were selected.\",\r\n\r\n  // SignOut\r\n  SignOutCommandName: \"Sign Out\",\r\n\r\n  // SwitchToClassic\r\n  SwitchToClassicCommandName: \"Classic View\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n  // UserProfile\r\n  UserProfileCommandName: \"Profile\",\r\n\r\n  // Upload\r\n  CommandTitleUpload: \"Upload documents\",\r\n  UploadNotAllowed : 'Unable to upload. Please try again when the current operation is finished',\r\n  // remaining see src/controls/globalmessage/impl/progresspanel/impl/nls/root/progresspanel.lang.js\r\n\r\n  //Rename\r\n  CommandVerbRename: \"rename\",\r\n\r\n  //Filter Save\r\n  CommandNameSaveFilter: \"Save As\",\r\n  CommandVerbSaveFilter: \"Save As\",\r\n  DialogTitleSaveFilter: \"Save as\",\r\n  SaveFilterCommandSuccessfully: \"{0} virtual folder created successfully.\",\r\n\r\n  // Edit\r\n  NoEditUrl: 'Web page for editing of this doucment is not available.',\r\n\r\n  // Copy Link\r\n  CommandNameCopyLink: \"Copy link\",\r\n  CommandVerbCopyLink: \"copy link\",\r\n  CopyLinkSuccessMessage: \"Link copied to clipboard.\",\r\n  CopyLinkFailMessage: \"Copy link has failed to copy the link to clipboard.\",\r\n\r\n  //permissions commands\r\n  DeletePermissionCommandRemoveOwner: \"Remove owner\",\r\n  DeletePermissionCommandRemoveGroup: \"Remove owner group\",\r\n  DeletePermissionCommandRemovePublicAccess: \"Remove Public Access\",\r\n  DeletePermissionCommandRemoveOther: \"Remove from list\",\r\n  DeletePermissionCommandConfirmDialogTitle: 'Remove {0}',\r\n  DeletePermissionCommandConfirmDialogSingleMessage: 'Do you want to remove {0}' +\r\n                                                     ' from this permissions list?',\r\n  DeletePermissionCommandConfirmDialogPublicAccessMessage: 'Are you sure you want to remove' +\r\n                                                           ' {0} from this permissions list?',\r\n  DeletePermissionCommandSuccessMessage: \"{0} was removed from the permissions list.\",\r\n  DeletePermissionCommandSuccessMessageWithCount: \"{0} was removed from the permissions list of\" +\r\n                                                  \" {1}.\",\r\n  DeletePermissionCommandFailMessage: \"Failed to remove {0} from the permissions list.\",\r\n  publicAccess: 'Public Access',\r\n  RestorePublicAccessSuccessMessage: \"{0} restored\",\r\n  RestorePublicAccessSuccessMessageWithCount: \"{0} restored to the permission list of {1}\",\r\n  undefinedCollection: 'Collection is undefined',\r\n  EditPermissionCommandFailMessage: \"Failed to edit {0} from the permissions list.\",\r\n  Owner: 'owner',\r\n\r\n  CommandNameAddOwnerOrOwnerGroup: \"Add Owner Or Owner Group\",\r\n  AddOwnerOrGroup: \"Add owner or owner group\",\r\n  AddOwner: \"Add owner\",\r\n  AddOwnerGroup: \"Add owner group\",\r\n  CommandNameAddUserorGroup: 'Add user or group',\r\n  CommandNameRestorePublicAccess: 'Restore public access',\r\n  AddButtonLabel: 'Add',\r\n  AddOwnerOrGroupDialogTitle: \"Add Owner or Owner group\",\r\n  AddOwnerDialogTitle: \"Add Owner\",\r\n  AddOwnerGroupDialogTitle: \"Add Owner group\",\r\n\r\n  ChangeOwnerPermissionCommand: 'Change owner',\r\n  ChangeOwnerGroupPermissionCommand: 'Change owner group',\r\n\r\n  AddUserOrGroupSuccess: '{0} added successfully',\r\n  AddUserOrGroupFailure: '{0} failed to add',\r\n  AddUserOrGroupSuccessWithCount: '{0} was added to the permissions list of {1}.',\r\n\r\n  formatForNone: \"{0} items\",\r\n  formatForOne: \"{0} item\",\r\n  formatForTwo: \"{0} items\",\r\n  formatForFive: \"{0} items\",\r\n\r\n  AppliedPermissions: 'Permissions applied selected item',\r\n  AppliedPermissionsOneSuccess: 'Permissions applied to {0} item',\r\n  AppliedPermissionsOnlySuccess: 'Permissions applied to {0} items',\r\n  AppliedPermissionsOneFailure: 'Permissions failed to apply {0} item',\r\n  AppliedPermissionsOnlyFailure: 'Permissions failed to apply {0} items',\r\n  AppliedPermissionsSuccessAndFailure: 'Permissions applied to {0} items and failed to apply {1}' +\r\n                                       ' items',\r\n\r\n  // CommandHelper\r\n  CommandSuccessfullySingular: \"{0} item successfully {1}.\",\r\n  CommandFailedSingular: \"{0} item failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} items successfully {1}.\",\r\n  CommandFailedPlural: \"{0} items failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} items failed to {2}.\",\r\n\r\n  NoConnectivity: \"No connectivity\",\r\n  GoToOffline: \"Go to offline files?\",\r\n\r\n  viewTypeUnsupported: 'This content type is not currently supported on a mobile device.',\r\n\r\n  MobileIOS: \"iOS Mobile\",\r\n  DesktopAndroid: \"Desktop and Android\",\r\n  Close: 'Close',\r\n  addButton: \"Add\",\r\n  otheruser: \"other user\",\r\n  addDocument: \"Add Document\",\r\n  allUsersAndGroups: \"Users and Groups\",\r\n  addUsersAndGroups: \"Add users or groups\",\r\n  addGroups:\"Add Groups\",\r\n  allGroups: \"Groups\",\r\n  cancelButtonLabel: \"Cancel\",\r\n  applyButtonLabel: \"Apply\",\r\n  ThumbnailTitle: \"Grid View\",\r\n  ListViewTitle: \"Browse View\",\r\n  DensityLabel: \"Density\",\r\n  error: \"Error\",\r\n\r\n  //edit perspective\r\n  EditPerspective: \"Edit page\",\r\n  editPerspectiveErrorMessage: \"The page cannot be edited. It is used as template for multiple pages\",\r\n  editPageDialogMessage: \"Who will see the page edits?\",\r\n  editPageButton: \"Everyone\",\r\n  personalizePageButton: \"Only you\",\r\n  editPageCancelButton: \"Cancel\",\r\n  editPageTitle: \"Edit page\",\r\n\r\n  //create perspective\r\n  CreatePerspective: \"Create new perspective\",\r\n  //custom view form as side panel\r\n  searchButtonMessage: \"Search\",\r\n  personalizePage: \"Personalize page\",\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/versions/nls/root/localized.strings',{\r\n\r\n  // DeleteVersion\r\n  CommandNameVersionDelete: \"Delete Version\",\r\n  CommandVerbVersionDelete: \"delete\",\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  VersionDeleteCommandConfirmDialogSingleMessage: \"Do you want to delete version {0} from {1}?\",\r\n  VersionDeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} versions?\",\r\n  DeleteVersionPageLeavingWarning: \"If you leave the page now, pending versions will not be\" +\r\n                                   \" deleted.\",\r\n\r\n  DeleteVersions: 'Deleting {0} versions',\r\n  DeletingSomeVersions: 'Deleting {0} versions',\r\n  DeletingOneVersion: 'Deleting version',\r\n  DeleteVersionItemsNoneMessage: \"No versions deleted.\",\r\n  DeleteVersionOneItemSuccessMessage: \"1 version succeeded to delete.\",\r\n  DeleteVersionSomeItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionManyItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionOneItemFailMessage: \"1 version failed to delete.\",\r\n  DeleteVersionSomeItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n  DeleteVersionManyItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n\r\n  //PromoteVersion\r\n  CommandNamePromoteVersion: 'Promote to Major Version',\r\n  CommandVerbPromoteVersion: 'Promote to Major Version',\r\n  MessageVersionPromoted: 'Version successfully promoted',\r\n  DialogPromoteVersion: 'version {0} promoting to {1}',\r\n\r\n  // TODO: this is only here, because the CommandHelper.handleExecutionResults does an extension\r\n  // TODO: remove this if the handleExecutionResults is not used anymore or the extension is removed\r\n  CommandSuccessfullySingular: \"{0} version successfully {1}.\",\r\n  CommandFailedSingular: \"{0} version failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} versions successfully {1}.\",\r\n  CommandFailedPlural: \"{0} versions failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} versions failed to {2}.\"\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commandhelper',[\r\n  'require', 'module', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/lib/backbone', 'csui/utils/base', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/models/version', 'csui/lib/jquery.when.all'\r\n], function (require, module, $, _, Backbone, base, CommandError,\r\n    lang, versionsLang, VersionModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n\r\n  var CommandHelper = function () {};\r\n\r\n  _.extend(CommandHelper.prototype, Backbone.Events, {\r\n\r\n    checkNodeTypesAndRights: function (nodes, types, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            return (_.contains(types, node.get(\"type\")) ||\r\n                    container && node.get(\"container\")) &&\r\n                   _.all(rights, function (right) {\r\n                     return node.get(\"perm_\" + right);\r\n                   });\r\n          });\r\n    },\r\n\r\n    checkNodeTypes: function (nodes, types) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.contains(types, attributes.type) ||\r\n                   container && attributes.container;\r\n          });\r\n    },\r\n\r\n    checkNodeRights: function (nodes, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.all(rights, function (right) {\r\n              return attributes[\"perm_\" + right];\r\n            });\r\n          });\r\n    },\r\n\r\n    getJustOneNode: function (status) {\r\n      var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n      return node;\r\n    },\r\n\r\n    getAtLeastOneNode: function (status) {\r\n      if (status.nodes) {\r\n        return status.nodes;\r\n      }\r\n\r\n      var ViewCollection = Backbone.Collection.extend(\r\n          status.collection ? {model: status.collection.model} : {}\r\n      );\r\n\r\n      return new ViewCollection();\r\n    },\r\n\r\n    updateNode: function (node, attributesToUpdate) {\r\n      var self = this;\r\n      return node\r\n          .save(attributesToUpdate, {\r\n            wait: true,\r\n            patch: true,\r\n            silent: true\r\n          })\r\n          .then(function () {\r\n            return node.fetch({force:true});\r\n          })\r\n          .then(function () {\r\n            return node;\r\n          }, function (error) {\r\n            var commandError = new CommandError(error, node);\r\n            return $.Deferred().reject(commandError);\r\n          });\r\n    },\r\n\r\n    // TODO: The drawback of this function is that it uses localized strings where text gets composed with help of placeholders (doneVerb).\r\n    // TODO: This introduces great problems for localization.\r\n    // Returns a promise which is resolved when all given promises are resolved. The returned\r\n    // promise gets an array with the collected results of all given promises.\r\n    // If options.suppressSuccessMessage == true then no success message is displayed.\r\n    handleExecutionResults: function (promise, options) {\r\n      var handleExecutionResultsDeferred = $.Deferred(),\r\n          modulePromise = $.Deferred();\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function(GlobalMessage) {\r\n        modulePromise.resolve(GlobalMessage);\r\n      }, modulePromise.reject);\r\n\r\n      $.whenAll(modulePromise, promise)\r\n       .always(function (parameters) {\r\n        var GlobalMessage = parameters[0],\r\n            results = parameters[1];\r\n        if (!_.isArray(results)) {\r\n          results = [results];\r\n        }\r\n\r\n        // At this point all promises from all commands are either resolved or rejected\r\n        // If the command execution was successful, the node is in the results. If the command\r\n        // failed the result is Error\r\n        var okCnt = 0;\r\n        var failedCnt = 0;\r\n        _.each(results, function (result) {\r\n          if (result !== undefined && !result.cancelled) {\r\n            if (result instanceof Error) {\r\n              failedCnt++;\r\n            } else {\r\n              okCnt++;\r\n            }\r\n          }\r\n        });\r\n        if (failedCnt === 0 && okCnt === 0) {\r\n          // user canceled confirmation dialog or\r\n          // no parameter was intentionally specified for e.g. resolve and reject to skip error handling\r\n          handleExecutionResultsDeferred.reject();\r\n          return;\r\n        }\r\n        var commandError = results[0];\r\n        // the command itself took care of the status  and error handling\r\n\r\n        if (commandError instanceof VersionModel) {\r\n          // let's override language bundles based on model type.\r\n          _.extend(lang, versionsLang);\r\n        }\r\n\r\n        if (results.length === 1) {\r\n          if (okCnt === 1) {\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(lang.CommandSuccessfullySingular, okCnt,\r\n                      options.command.get('doneVerb')));\r\n            }\r\n          } else {\r\n            var message = commandError.errorDetails || commandError.message;\r\n\r\n            if (config.offlineSupport && commandError.statusCode === 0) {\r\n              handleExecutionResultsDeferred.reject(commandError);\r\n            }\r\n            else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(lang.CommandFailedSingular, failedCnt,\r\n                      options.command.get('verb')),\r\n                  message);\r\n            }\r\n          }\r\n        } else {\r\n          if (failedCnt === 0) {\r\n            // all were successful\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(lang.CommandSuccessfullyPlural, okCnt,\r\n                      options.command.get('doneVerb')\r\n                  ));\r\n            }\r\n          } else {\r\n            if (okCnt === 0) {\r\n              // all failed\r\n              if (config.offlineSupport && commandError.statusCode === 0) {\r\n                handleExecutionResultsDeferred.reject(commandError);\r\n              }\r\n              else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n                GlobalMessage.showMessage(\"error\",\r\n                    _.str.sformat(lang.CommandFailedPlural, failedCnt,\r\n                        options.command.get('verb')\r\n                    ));\r\n              }\r\n            } else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              if (!!options.customError) {\r\n                GlobalMessage.showMessage('error', results[1]);\r\n              } else {\r\n                // some failed, some were successful\r\n                GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(lang.CommandFailedPartial, failedCnt, results.length,\r\n                      options.command.get('verb')\r\n                ));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        handleExecutionResultsDeferred.resolve(results);\r\n      });\r\n      // return a promise - table toolbar waits for it to do anything else after command\r\n      // execution (like display inline form)\r\n      return handleExecutionResultsDeferred.promise();\r\n    },\r\n\r\n    _getErrorMessageFromResponse: function (err) {\r\n      var errorMessage;\r\n      if (err && err.responseJSON && err.responseJSON.error) {\r\n        errorMessage = err.responseJSON.error;\r\n      } else {\r\n        var errorHtml = base.MessageHelper.toHtml();\r\n        base.MessageHelper.reset();\r\n        errorMessage = $(errorHtml).text();\r\n      }\r\n      return errorMessage;\r\n    },\r\n\r\n    // TODO: Deprecate and remove this method in favour of node.fetch.\r\n    refreshModelAttributesFromServer: function (node, collection) {\r\n      var tempNode = node.clone();\r\n      tempNode.collection = collection || node.collection;\r\n      return tempNode.fetch()\r\n                     .then(function () {\r\n                       node.set(tempNode.attributes);\r\n                       if (tempNode.original) {\r\n                         node.original = tempNode.original;\r\n                       }\r\n                       return node;\r\n                     });\r\n    },\r\n\r\n    showOfflineMessage: function (error, yesCallBck, noCallBack) {\r\n      if (error && error.statusCode === 0 && config.offlineSupport) {\r\n        var self = this;\r\n\r\n        require(['csui/dialogs/modal.alert/modal.alert'],\r\n            function (modalAlert) {\r\n\r\n              modalAlert.showInformation(lang.GoToOffline, lang.NoConnectivity,\r\n                  {\r\n                    buttons: modalAlert.buttons.YesNo\r\n                  })\r\n                  .always(function (answer) {\r\n                    if (answer) {\r\n                      yesCallBck ? yesCallBck() : window.location.href = \"#offline.list\";\r\n                    }\r\n                    else {\r\n                      noCallBack ? noCallBack() : self.trigger('offline:refused');\r\n                    }\r\n                  });\r\n            });\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  var helperInstance = new CommandHelper();\r\n  return helperInstance;\r\n\r\n});\r\n\n","csui.define('csui/models/command',[\r\n  'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/commandhelper'\r\n], function (_, Backbone, CommandHelper) {\r\n\r\n  // {\r\n  //   signature:   unique identifier among all commands\r\n  //   name:        title to show in the UI by default\r\n  //   command_key: permitted action identifier(s) returned by the server\r\n  //   openable:    use the \"openable\" node attribute to enable the command\r\n  //   types:       node types supported by the command\r\n  //   scope:       node scope to work at: singe|multiple\r\n  //   enabled: function (status) {\r\n  //     returns boolean if this command should be enabled or available;\r\n  //     the default implementation checks the presence of a permitted\r\n  //     action (command_key) or openability, with consideration of the\r\n  //     supported scope and types\r\n  //   },\r\n  //   execute: function (status, options) {\r\n  //     executes this command; no default implementation\r\n  //   }\r\n  // }\r\n\r\n  var CommandModel = Backbone.Model.extend({\r\n    idAttribute: 'signature',\r\n\r\n    constructor: function CommandModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope = this.get('scope');\r\n      var nodes = this._getNodesByScope(status, scope);\r\n      if (scope && !(nodes && nodes.length)) {\r\n        return false;\r\n      }\r\n\r\n      var types = this.get('types') || [];\r\n      if (types.length && !this.checkTypes(nodes, types)) {\r\n        return false;\r\n      }\r\n\r\n      var openable = this.get('openable');\r\n      // If openability was requested and all nodes are openable,\r\n      // no permitted actions checks will be performed.\r\n      if (openable && this.checkOpenability(nodes)) {\r\n        return true;\r\n      }\r\n\r\n      var signatures = this.get('command_key') || [];\r\n      // If sole openability was requested and is not granted\r\n      // and no permitted actions were requested in addition,\r\n      // the command will be disabled.\r\n      if (openable && !signatures.length) {\r\n        return false;\r\n      }\r\n      // If either no permissions were requested or all were granted,\r\n      // the command will be enabled.\r\n      return !signatures.length || this.checkPermittedActions(nodes, signatures);\r\n    },\r\n\r\n    isNonPromoted: function (status) {\r\n      var scope         = this.get(\"scope\"),\r\n          nodes         = this._getNodesByScope(status, scope),\r\n          signatures    = this.get(\"command_key\"),\r\n          isNonPromoted = false;\r\n\r\n      // if at least one node is selected and at least one selected node\r\n      // has action which is non-promoted\r\n      if (nodes && nodes.length) {\r\n        var checkFn = this._getNonPromotedCheckFunctionsForSignatures(signatures);\r\n        if (checkFn) {\r\n          _.find(nodes, function (node) {\r\n            var action = checkFn(node);\r\n            if (action && action.get('csuiNonPromotedAction') === true) {\r\n              isNonPromoted = true;\r\n              return true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return isNonPromoted;\r\n    },\r\n\r\n    _getNodesByScope: function (status, scope) {\r\n      // get the array of nodes which the command should apply to\r\n      // according to the scope which the command is capable of\r\n      var nodes;\r\n      switch (scope) {\r\n      case \"single\":\r\n        nodes = CommandHelper.getJustOneNode(status);\r\n        nodes && (nodes = [nodes]);\r\n        break;\r\n      default: // without a specific scope, use case \"multiple\"\r\n        // the checks below use an array; not a Backbone.Collection\r\n        nodes = CommandHelper.getAtLeastOneNode(status).models;\r\n        break;\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n    _getCheckFunctionsForSignatures: function (signatures) {\r\n      if (signatures && signatures.length) {\r\n        if (_.isArray(signatures)) {\r\n          return function (node) {\r\n            return _.any(signatures, function (signature) {\r\n              return node.actions && node.actions.findRecursively(signature);\r\n            });\r\n          };\r\n        }\r\n        return function (node) {\r\n          return node.actions && node.actions.findRecursively(signatures);\r\n        };  \r\n      }\r\n    },\r\n\r\n    _getNonPromotedCheckFunctionsForSignatures: function (signatures) {\r\n      var checkFn;\r\n      if (signatures) {\r\n        if (_.isArray(signatures) && signatures.length) {\r\n          checkFn = function (node) {\r\n            var action;\r\n            _.find(signatures, function (signature) {\r\n              action = node.actions && node.actions.findRecursively(signature);\r\n              return !!action;\r\n            });\r\n            return action;\r\n          };\r\n        } else if (_.isString(signatures)) {\r\n          checkFn = function (node) {\r\n            return node.actions && node.actions.findRecursively(signatures);\r\n          };\r\n        }\r\n      }\r\n      return checkFn;\r\n    },\r\n\r\n    checkTypes: function (nodes, types) {\r\n      // if at least one node is selected and each selected node\r\n      // has its type among the supported ones, the command is enabled\r\n      if (nodes) {\r\n        if (!_.isArray(nodes)) {\r\n          nodes = [nodes];\r\n        }\r\n        if (nodes.length) {\r\n          return nodes.every(function (node) {\r\n            return types.indexOf(node.get('type')) >= 0;\r\n          });\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    checkOpenability: function (nodes) {\r\n      // if at least one node is selected and each selected node\r\n      // has the \"openable\" attribute set, the command is enabled\r\n      if (nodes) {\r\n        if (!_.isArray(nodes)) {\r\n          nodes = [nodes];\r\n        }\r\n        if (nodes.length) {\r\n          return nodes.every(function (node) {\r\n            return node.get('openable');\r\n          });\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    checkPermittedActions: function (nodes, signatures) {\r\n      // if at least one node is selected and each selected node\r\n      // has the right action in actions, the command is enabled\r\n      if (nodes) {\r\n        if (!_.isArray(nodes)) {\r\n          nodes = [nodes];\r\n        }\r\n        if (nodes.length) {\r\n          // If no action signatures were specified, default to permitted\r\n          // actions requested bu this command.\r\n          if (!signatures) {\r\n            signatures = this.get('command_key') || [];\r\n          }\r\n          var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n          // if no command_key is specified, the descended command is\r\n          // always enabled; but it usually overrides the enabled() method\r\n          return !checkNode || _.all(nodes, checkNode);\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    _getNodeActionForSignature: function (node, signatures) {\r\n      var action;\r\n      if (node) {\r\n        var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n        if (!!checkNode) {\r\n          action = checkNode.call(this, node);\r\n        }\r\n      }\r\n      return action;\r\n    }\r\n  });\r\n\r\n  return CommandModel;\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/go.to.node.history',['module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var visitedNodesByContext = {};\r\n\r\n  var GoToNodeHistoryCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Back',\r\n      name: lang.GoToHistory\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      // Module configuration can change later, than this module has been\r\n      // required and its callback executed. Repeat reading its config.\r\n      var config = _.extend({\r\n            enabled: false\r\n          }, module.config()),\r\n          context = status.context || options && options.context,\r\n          visitedNodes;\r\n      // Context us not mandatory; some commands can work without it,\r\n      // and those, which cannot, should say it\r\n      if (!context) {\r\n        return false;\r\n      }\r\n      if (config.enabled) {\r\n        this._ensureGoBackList(context);\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] || [];\r\n      // Top node is the current one. At least one more node below is needed\r\n      // for being able to go back to it.\r\n      return config.enabled && visitedNodes.length > 1;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node'\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            visitedNodes = visitedNodesByContext[context.cid] || [];\r\n        // Do not crash if somebody executed this command without asking\r\n        // if it is enabled first. Sanity check.\r\n        if (visitedNodes.length > 1) {\r\n          // Top node is the current one. Pop it, so that the previous one\r\n          // on the stack can become the current one.\r\n          visitedNodes.pop();\r\n          nextNode.set('id', visitedNodes[visitedNodes.length - 1]);\r\n        }\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    clearHistory: function (context) {\r\n      delete visitedNodesByContext[context.cid];\r\n    },\r\n\r\n    _ensureGoBackList: function (context) {\r\n      // There is only one command instance on the page, once the command\r\n      // has been required, but there can be multiple contexts.\r\n      var visitedNodes = visitedNodesByContext[context.cid];\r\n      if (visitedNodes) {\r\n        return;\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] = [];\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function (NodeModelFactory, NextNodeModelFactory) {\r\n        var nextNode = context.getModel(NextNodeModelFactory);\r\n        // Ensure, that the initially empty stack start with the current node.\r\n        visitCurrentNode(NodeModelFactory);\r\n        // Whenever the context is fetched, ensure, that the new node gets\r\n        // pushed on the top of the stack.\r\n        context.on('request', function () {\r\n          visitCurrentNode(NodeModelFactory);\r\n        });\r\n        // Some components either do not wait for context's \"request\" event,\r\n        // or they registered their listener earlier, than this command.\r\n        // Get the new node before a context plugin decides to fetch context.\r\n        nextNode.on('change:id', function () {\r\n          visitCurrentNode(NextNodeModelFactory);\r\n        });\r\n        function visitCurrentNode(Factory) {\r\n          var node = context.getModel(Factory),\r\n              nodeId = node.get('id');\r\n          // Node ID could be reset, if nextNode event has been caught.\r\n          // If both nextNode's and node's events are triggered, this\r\n          // function will be called with the same node ID.\r\n          if (nodeId && visitedNodes[visitedNodes.length - 1] !== nodeId) {\r\n            visitedNodes.push(nodeId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return GoToNodeHistoryCommand;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/root/localized.strings',{\r\n  \"GoToHistory\": \"Go Back\",\r\n  \"OpenFullPageContainer\": \"Open Full Page Container\"\r\n});\r\n\n","\n","csui.define('csui/integration/folderbrowser/commands/open.full.page.container',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var OpenFullPageWorkpsace = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Page',\r\n      name: lang.OpenFullPageContainer\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var config = _.extend({\r\n        enabled: false\r\n      }, module.config());\r\n      return config.enabled && !!status.container;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/node.links/node.links'], function (nodeLinks) {\r\n        window.open(nodeLinks.getUrl(status.container));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return OpenFullPageWorkpsace;\r\n});\r\n\n","csui.define('csui/models/commands',['csui/lib/underscore', 'csui/lib/backbone', 'csui/models/command'\r\n], function (_, Backbone, CommandModel) {\r\n\r\n  var CommandCollection = Backbone.Collection.extend({\r\n\r\n    model: CommandModel,\r\n\r\n    constructor: function CommandCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    clone: function () {\r\n      // Provide the options; they may include other parameters\r\n      var clone = new this.constructor(this.models, this.options);\r\n      clone.signatures = _.clone(this.signatures);\r\n      return clone;\r\n    },\r\n\r\n    // Get 'command_key' filtering by toolbarItems using signatures.\r\n    getSignatures: function (toolbarItems) {\r\n      var sigArray = [];\r\n      _.mapObject(toolbarItems, function (val, key) {\r\n        sigArray = _.union(sigArray, _.without(val.getCollection().pluck('signature'), 'disabled'));\r\n      });\r\n\r\n      var commands = this.clone();\r\n      var commandsToRemove = [];\r\n      commands.each(function (command) {\r\n        if (sigArray.indexOf(command.get('signature')) === -1) {\r\n          commandsToRemove.push(command);\r\n        }\r\n      });\r\n      commands.remove(commandsToRemove, {silent: true});\r\n\r\n      return commands.getAllSignatures();\r\n    },\r\n\r\n    getAllSignatures: function () {\r\n      return _.chain(this.pluck('command_key'))\r\n          .map(function (signature) {\r\n            if (_.isArray(signature)) {\r\n              // If there are multiple command keys to check, take just the\r\n              // first one, which is the V2 one needed for the URL query\r\n              var result = signature[0];\r\n              // If the 'default' command key is requested, add the concrete\r\n              // key too; v1 expects 'default' and v2 'open', while the\r\n              // concrete action would be at the third place then.\r\n              if (result === 'default') {\r\n                result = ['default', 'open', signature[2]];\r\n              }\r\n              return result;\r\n            }\r\n            return signature;\r\n          })\r\n          .flatten()\r\n          .compact()\r\n          .unique()\r\n          .value();\r\n    }\r\n\r\n  });\r\n\r\n  return CommandCollection;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands',[\r\n  'csui/lib/underscore', 'csui/models/commands',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands'\r\n], function (_, CommandCollection, extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection();\r\n\r\n  _.extend(commands, {\r\n    signatures: {\r\n      browse: 'Browse',\r\n      open: 'Open',\r\n      download: 'Download',\r\n      add: 'Add',\r\n      navigate: 'Navigate',\r\n      original: 'Original'\r\n    },\r\n    version: '1.0'\r\n  });\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n         .flatten(true)\r\n         .map(function (Command) {\r\n           return new Command();\r\n         })\r\n         .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n});\r\n\n","csui.define('csui/utils/commands/add.categories',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/utils/base\", \"csui/utils/log\",\r\n  \"csui/models/command\"\r\n], function (require, $, _, base, log, CommandModel) {\r\n\r\n  var AddCategories = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'AddCategory',\r\n      command_key: ['addcategory', 'AddCategory'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope = this.get(\"scope\");\r\n      var nodes = this._getNodesByScope(status, scope);\r\n\r\n      if (nodes && nodes.length > 0) {\r\n        // since this is a 'single' scope command, just check one node\r\n        if (nodes[0].get('id') === undefined) {\r\n          // ********* NOTE: **********\r\n          // For Create scenario, the server team does not deliver a RestAPI call to get the\r\n          // actions. Both Stefan Greim from CWS and Alex Gerasimov from RM have special\r\n          // requirements to enable/disable the actions based on the workflow/object state.\r\n          // Ferda came up with a solution by checking:\r\n          // - if there is no form[role_name='categories'], then allow the 'AddCategory' command\r\n          // - or if there is form[role_name='categories'], then check custom field in Alpaca form:\r\n          //   >> options.forms[role_name='categories'].schema.additionalProperties = true/false\r\n          // Then enable/disable the 'AddCategory' action based on this value.\r\n          //\r\n          // Stefan and Alex will set this value in their code if they want to override and control\r\n          // the 'AddCategory' command.  For their commands such as 'AddClassifications', they will\r\n          // implement similar logics as of this 'add.categories' command in their command\r\n          // implementation of the enabled() method.\r\n\r\n          var enabled = true;\r\n          if (status.originalFormCollection) {\r\n            status.originalFormCollection.each(function (form) {\r\n              if (form.get('role_name') === 'categories' &&\r\n                  form.get('schema').additionalProperties === false) {\r\n                enabled = false;\r\n              }\r\n            });\r\n          }\r\n          return enabled;\r\n        } else {\r\n          // For Edit/Copy/Move scenario, check the node for the actions\r\n          return CommandModel.prototype.enabled.apply(this, arguments);\r\n        }\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.categories.controller'\r\n      ], function (MetadataAddCategoriesController) {\r\n\r\n        /* Options needed:\r\n        var options = {\r\n          action: this.options.action,\r\n          node: this.options.node,\r\n          collection: this.options.collection,\r\n          container: this.options.container,\r\n          inheritance: this.options.inheritance,\r\n          context: this.options.context,\r\n          parentView: this.options.parentView,  // use for blocking view and callback\r\n          addPropertiesCallback: this.options.addPropertiesCallback  // to insert the new Category\r\n        }; */\r\n\r\n        var metadataAddCatController = new MetadataAddCategoriesController();\r\n        metadataAddCatController.AddNewCategory(options)\r\n            .done(function (resp) {\r\n              if (options.addPropertiesCallback) {\r\n                options.addPropertiesCallback.call(options.parentView, resp.catModel);\r\n              }\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(err);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataAddCategoriesController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return AddCategories;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/dialogs/file.open/impl/file.open',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<input type=\\\"file\\\" style=\\\"display:none\\\" \"\n    + this.escapeExpression(((helper = (helper = helpers.multiple || (depth0 != null ? depth0.multiple : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"multiple\",\"hash\":{}}) : helper)))\n    + \">\\r\\n\";\n}});\nHandlebars.registerPartial('csui_dialogs_file.open_impl_file.open', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/dialogs/file.open/file.open.dialog',['module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/utils/log', 'csui/utils/base',\r\n  'hbs!csui/dialogs/file.open/impl/file.open'\r\n], function (module, _, $, Marionette, log, base, template) {\r\n  'use strict';\r\n\r\n  log = log(module.id);\r\n\r\n  var FileOpenDialog = Marionette.ItemView.extend({\r\n\r\n    className: 'csui-file-open',\r\n\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        multiple: this.options.multiple ? 'multiple' : ''\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      fileInput: 'input'\r\n    },\r\n\r\n    events: {\r\n      'change @ui.fileInput': '_processFiles'\r\n    },\r\n\r\n    constructor: function FileOpenDialog(options) {\r\n      // Memoize properties, which can be provided as functions\r\n      this.className = _.result(this, 'className');\r\n\r\n      // If the previous caller didn't destroy the dialog, do it now.\r\n      // The view should be garbage collected. There should be just\r\n      // one dialog on the page at the same time.\r\n      var earlierElement = $(document.body).find('> .' + this.className);\r\n      if (earlierElement.length) {\r\n        log.debug('Removing an earlier file-open input element.')\r\n        && console.log(log.last);\r\n        earlierElement.remove();\r\n      }\r\n\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    onDestroy: function(){\r\n      this.ui.fileInput.off();\r\n    },\r\n\r\n    show: function () {\r\n      log.debug('Showing a file-open input element.')\r\n      && console.log(log.last);\r\n      this.render();\r\n      $(document.body).append(this.el);\r\n      this.ui.fileInput.trigger('click');\r\n      this.ui.fileInput.trigger('focus');\r\n    },\r\n\r\n    _processFiles: function (event) {\r\n      var originalEvent = event.originalEvent,\r\n          files = originalEvent.target.files ||\r\n                  originalEvent.dataTransfer &&\r\n                  originalEvent.dataTransfer.files;\r\n      log.debug(files.length + ' file(s) selected by a file-open input element.')\r\n      && console.log(log.last);\r\n      this.trigger('add:files', files);\r\n    }\r\n\r\n  });\r\n\r\n  return FileOpenDialog;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/log\", \"csui/utils/base\", \"csui/utils/commandhelper\",\r\n  \"csui/models/command\", 'csui/models/node/node.model',\r\n  'csui/dialogs/file.open/file.open.dialog'\r\n], function (require, $, _, lang, log, base, CommandHelper, CommandModel,\r\n    NodeModel, FileOpenDialog) {\r\n  'use strict';\r\n\r\n  var AddCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Add\"\r\n    },\r\n\r\n    enabled: function (status) {\r\n      status || (status = {});\r\n      if (status.container && status.container.get('container')) {\r\n        //Hide the add toolbar for the type collection 298\r\n        if (status.container.get(\"type\") === 298) {\r\n          return false;\r\n        }\r\n        status.data || (status.data = {});\r\n        var addableTypes = status.data.addableTypes;\r\n        return addableTypes && _.any([0, 1, 140, 144, 298], function (type) {\r\n          return !!addableTypes.get(type);\r\n        });\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      if (options && options.addableType === undefined) {\r\n        throw new Error('Missing options.addableType');\r\n      }\r\n      // the command handles multiple addable types (Content Server SubType)\r\n      var newNode, promise,\r\n          addableTypeName = this._getAddableTypeName(status, options);\r\n      // if status.forwardToTable == true then tabletoolbar (the command controller) can\r\n      // delegate the action to the table.view (used for inline forms)\r\n      switch (options.addableType) {\r\n      case 0: // folder\r\n      case 298: // collection\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": true,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 140: // url (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": false,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 1: // short-cut (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        promise = this._selectShortcutTarget(status, options);\r\n        break;\r\n      case 144: // document (Content Server SubType)\r\n        status.suppressSuccessMessage = true;\r\n        options.actionType = 'UPLOAD';\r\n        promise = this._selectFilesForUpload(status, options);\r\n        break;\r\n      default :\r\n        var errMsg = \"The \\\"Add\\\" action for the addableType \" +\r\n                     options.addableType + \" is not implemented\";\r\n        log.debug(errMsg) && console.log(log.last);\r\n        promise = $.Deferred().reject({\r\n          error: errMsg,\r\n          commandSignature: this.signature\r\n        }).promise();\r\n      }\r\n      // TODO: The add command is no actual command.  It cannot cay when it\r\n      // is finished - the node has been added.  Client which report the\r\n      // command status show immediately success.  It should be redesigned.\r\n      return promise;\r\n    },\r\n\r\n    _selectFilesForUpload: function (status, options) {\r\n      var fileOpenDialog, \r\n      deferred = $.Deferred();\r\n      // View to provide the area for the drag'n'drop overlay-view, which will\r\n      // turn up when files are dragged over it and trigger an event when the\r\n      // files are dropped on it.\r\n      require(['csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (GlobalMessage.isActionInProgress(options.actionType, lang.UploadNotAllowed, lang.CommandTitleAdd)) {\r\n          return deferred.resolve();\r\n        }\r\n        fileOpenDialog = new FileOpenDialog({multiple: true});\r\n        deferred.resolve(); // resolve immediately because fileOpenDialog can't trigger anything\r\n        // on cancel\r\n        fileOpenDialog\r\n            .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n              require(['csui/controls/fileupload/fileupload'\r\n              ], function (fileUploadHelper) {\r\n                deferred.resolve();\r\n                var uploadController = fileUploadHelper.newUpload(status, options);\r\n                uploadController.addFilesToUpload(files, {\r\n                  collection: status.collection,\r\n                });\r\n                uploadController.listenTo(uploadController, 'destroy', function () {\r\n                  fileOpenDialog.destroy();\r\n                });\r\n              });\r\n            }).show();\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectShortcutTarget: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/dialogs/node.picker/node.picker'\r\n      ], function (NodePicker) {\r\n        var pickerOptions   = {\r\n              dialogTitle: lang.ShortcutPickerTitle,\r\n              connector: status.container.connector,\r\n              context: options.context,\r\n              initialContainer: status.container,\r\n              globalSearch: true,\r\n              startLocation: 'recent.containers',\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              unselectableTypes: [141, 142, 133],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            },\r\n            addableTypeName = self._getAddableTypeName(status, options);\r\n        self.nodePicker = new NodePicker(pickerOptions);\r\n        return self.nodePicker\r\n            .show()\r\n            .then(function (args) {\r\n              var node = args.nodes[0];\r\n              var newNode = new NodeModel({\r\n                \"type\": 1,\r\n                \"type_name\": addableTypeName,\r\n                \"container\": false,\r\n                \"name\": node.get('name'),\r\n                \"original_id\": node.get('id'),\r\n                // Show the right icon for this not-yet-saved node\r\n                \"original_id_expand\": node.attributes\r\n              }, {\r\n                connector: status.container.connector,\r\n                collection: status.collection\r\n              });\r\n              return newNode;\r\n            })\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    // The type_name is used before the actual node is created to supply\r\n    // the right icon, to provide the placeholder text for entering the\r\n    // node name, to make the title of the creation dialog etc.\r\n    _getAddableTypeName: function (status, options) {\r\n      // The command caller can override the type name returned by\r\n      // /addablenodetypes\r\n      if (options.addableTypeName) {\r\n        return options.addableTypeName;\r\n      }\r\n      // The enable method checks, that the type exists\r\n      var addableType = status.data.addableTypes.findWhere({\r\n        type: options.addableType\r\n      });\r\n      // The type_name is he same as returned by the server from the node\r\n      // info calls; nodeSpriteCollection should be used to show the\r\n      // displayable node type name and icon\r\n      return addableType.get('type_name');\r\n    }\r\n\r\n  }, {\r\n\r\n    // static methods here:\r\n    _getAddableTypesWithoutInlineFormAsMap: function () {\r\n      return {\r\n        144: true // document is handled by FileUploadController\r\n      };\r\n    },\r\n\r\n    isAddableTypeWithoutInlineForm: function (addableType) {\r\n      var x = this._getAddableTypesWithoutInlineFormAsMap();\r\n      return x[addableType] === true;\r\n    }\r\n\r\n  });\r\n\r\n  return AddCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.item.metadata',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/commandhelper\", \"csui/models/command\"\r\n], function (module, require, _, $, Backbone, log, CommandHelper, CommandModel) {\r\n\r\n  var AddItemMetadataCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"AddItemMetadata\",\r\n      command_key: \"Add_Item\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.item.controller'\r\n      ], function (MetadataAddItemController) {\r\n        var metadataAddItemController = new MetadataAddItemController();\r\n        metadataAddItemController\r\n            .displayForm(status, options)\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  AddItemMetadataCommand.version = \"1.0\";\r\n\r\n  return AddItemMetadataCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.version',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/dialogs/file.open/file.open.dialog'\r\n], function (module, require, $, _, lang, CommandModel, CommandHelper,\r\n    FileOpenDialog) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    actionType: 'ADD_VERSION'\r\n  });\r\n\r\n  var GlobalMessage;\r\n  var AddVersionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"AddVersion\",\r\n      command_key: \"addversion\",\r\n      name: lang.CommandNameAddVersion,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status || (status = {});\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      this.trigger('close:dialogView:form');\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        if (GlobalMessage.isActionInProgress(config.actionType, lang.AddVersionNotAllowed, lang.CommandNameAddVersion)) {\r\n          return deferred.resolve();\r\n        }\r\n        if (!!status.tableView) {\r\n          status.tableView.lockedForOtherContols = false;\r\n        }\r\n        self._pickFileAndUpload(status, options).done(deferred.resolve);\r\n        status.suppressSuccessMessage = true;\r\n        var file = status.file;\r\n\r\n        if (file) {\r\n          self\r\n              ._addVersionController(file, status)\r\n              .done(deferred.resolve)\r\n              .fail(deferred.reject);\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _pickFileAndUpload: function (status, options) {\r\n      var fileOpenDialog = new FileOpenDialog({multiple: false}),\r\n          deferred       = $.Deferred(),\r\n          self           = this;\r\n      deferred.resolve();\r\n      fileOpenDialog\r\n          .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n            self._addVersionController(files[0], status)\r\n                .done(deferred.resolve)\r\n                .always(function () {\r\n                  fileOpenDialog.destroy();\r\n                });\r\n          })\r\n          .show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addVersionController: function (file, status) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/fileupload/impl/addversion.controller'\r\n      ], function (AddVersionController) {\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        var addVersionController = new AddVersionController({\r\n          status: status,\r\n          view: status.originatingView,\r\n          selectedNode: node\r\n        });\r\n\r\n        return addVersionController\r\n            .uploadFile(file, config.actionType).done(deferred.resolve);\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n  });\r\n\r\n  return AddVersionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.node.perspective',['require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/utils/commandhelper'\r\n], function (require, $, _, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var OpenNodePerspectiveCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node'\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            node = CommandHelper.getJustOneNode(status);\r\n\r\n        var viewState = context.viewStateModel.get('state');\r\n        if (viewState) {\r\n          context.viewStateModel.set('state', _.omit(viewState, 'filter'), {silent: true});\r\n        }\r\n\r\n        // The nodestable uses this event to remove the order_by from the viewStateModel\r\n        nextNode.trigger('before:change:id', node.get('id'));\r\n        nextNode.set('id', node.get('id'));\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNodePerspectiveCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/browse',['csui/utils/commands/open.node.perspective', 'csui/utils/commandhelper'\r\n], function (OpenNodePerspectiveCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var BrowseCommand = OpenNodePerspectiveCommand.extend({\r\n    defaults: {\r\n      signature: 'Browse',\r\n      // The server has no concrete action for children browsing;\r\n      // the 'default' command key has to be the first one\r\n      // WARNING: No other command should use the 'default'/'open'\r\n      // command key.  Always request a concrete command key from\r\n      // your REST API developer.\r\n      command_key: ['default', 'open', 'browse', 'Browse'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('container') && (\r\n          // Some scenarios receive nodes only with the open-ability flag.\r\n          node.get('openable')\r\n          // Other scenarios receive nodes with permitted actions, but because\r\n          // they are older, they do not include the open-ability flag.\r\n          || this.checkPermittedActions(node));\r\n    }\r\n  });\r\n\r\n  return BrowseCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/root/lang',{\r\n  collectCommandSignature: 'Collect',\r\n  addItemsToolTip: 'Add Items',\r\n  collectItemsDialogTitle: 'Add items',\r\n  selectCollectionDialogTitle: 'Select collection',\r\n  selectButtonLabel: 'Add',\r\n  selectCollectButtonLabel: 'Collect',\r\n  conflictsItemsHeader: 'Listed items will not be added',\r\n  conflictsDialogCloseLabel: 'Close',\r\n  CollectItemsNoneMessage: \"No items added.\",\r\n  CollectOneItemSuccessMessage: '1 new item was successfully added',\r\n  CollectManyItemsSuccessMessage: '{0} new items were successfully added',\r\n  CollectOneItemFailMessage: '1 of your collected items already added',\r\n  CollectManyItemsFailMessage: '{0} of your collected items are already added',\r\n  RemoveCollectItemsCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                              \"<%- message %>\" +\r\n                                              \"</span>\",\r\n  RemoveCommandConfirmDialogSingleMessage: \"Do you want to remove {0} from collection?\",\r\n  RemoveCommandConfirmDialogMultipleMessage: \"Do you want to remove {0} items from collection?\",\r\n  RemoveCommandConfirmDialogTitle: \"Remove from collection\",\r\n  RemoveItemsNoneMessage: \"No items removed from collection.\",\r\n  RemoveOneItemSuccessMessage: \"1 item successfully removed from collection.\",\r\n  RemoveSomeItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveManyItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveOneItemFailMessage: \"1 item failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveItems: 'Removing {0} items from collection',\r\n  RemovingOneItem: 'Removing item from collection',\r\n  RemovingSomeItems: 'Removing {0} items from collection',\r\n  CollectingOneItem: 'Collecting item',\r\n  CollectingItems: 'Collecting {0} items',\r\n  CollectManyItemsFailMessage2: '{2} items failed to Collecting.',\r\n  removefromCollection: \"Remove from collection\"\r\n});\n","\n","csui.define('csui/utils/commands/collection/collect.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/base', 'csui/models/nodes',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Backbone, Url, CommandError, CommandModel,\r\n    lang, base, NodeCollection) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView,\r\n      CollectCommand = CommandModel.extend({\r\n        defaults: {\r\n          signature: 'CollectionCanCollect',\r\n          name: lang.addItemsToolTip,\r\n          command_key: ['collectionCanCollect'],\r\n          scope: 'single',\r\n          successMessages: {\r\n            formatForOne: lang.CollectOneItemSuccessMessage,\r\n            formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n            formatForMany: lang.CollectManyItemsSuccessMessage,\r\n            formatForFive: lang.CollectManyItemsSuccessMessage\r\n          },\r\n          errorMessages: {\r\n            formatForOne: lang.CollectOneItemFailMessage,\r\n            formatForTwo: lang.CollectManyItemsFailMessage,\r\n            formatForMany: lang.CollectManyItemsFailMessage,\r\n            formatForFive: lang.CollectManyItemsFailMessage\r\n          }\r\n        },\r\n\r\n        enabled: function (status) {\r\n          if (status.container.get('type') === 298) {\r\n            status.nodes = new NodeCollection([status.container]);\r\n            return CollectCommand.__super__.enabled.apply(this, arguments);\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var deferred = $.Deferred(),\r\n              self     = this;\r\n\r\n          require(['csui/controls/globalmessage/globalmessage',\r\n            'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n            'csui/utils/taskqueue',\r\n            'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n            'csui/utils/contexts/factories/next.node'\r\n          ], function () {\r\n            GlobalMessage = arguments[0];\r\n            CollectionConflictView = arguments[1];\r\n            TaskQueue = arguments[2];\r\n            UploadFileCollection = arguments[3];\r\n            PageLeavingBlocker = arguments[4];\r\n            NextNodeModelFactory = arguments[5];\r\n            self._addToCollection(status, options)\r\n                .done(function (selectedOptions) {\r\n                  var selectedNodes    = selectedOptions.nodes,\r\n                      nodes            = _.map(selectedNodes, function (node) {\r\n                        return {\r\n                          name: node.get('name'),\r\n                          state: 'pending',\r\n                          count: 0,\r\n                          total: 1,\r\n                          node: node\r\n                        };\r\n                      }),\r\n                      targetFolder     = status.container,\r\n                      uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n                      connector        = status.container && status.container.connector;\r\n                  status.container.collection = status.collection;\r\n                  self._announceOperationStart(status);\r\n                  uploadCollection.each(function (fileUpload) {\r\n                    var node = fileUpload.get('node');\r\n                    fileUpload.node = node;\r\n                    fileUpload.unset('node');\r\n                    fileUpload.set('mime_type', node.get('mime_type'));\r\n                  });\r\n\r\n                  self._addSelectedNodesToCollection(uploadCollection, connector, targetFolder,\r\n                      status.collection)\r\n                      .then(function (promises) {\r\n                        GlobalMessage.hideFileUploadProgress();\r\n                        var result = self._checkPromises(promises);\r\n                        if (result.failedNodes.length) {\r\n                          self._showDialog(result.failedNodes).then(\r\n                              function (resolveOption, dialog) {\r\n                                dialog.kill();\r\n                                //if any success items are there then show global message\r\n                                if (result.successNodes.length) {\r\n                                  self._showGlobalMessage(result.successNodes.length);\r\n                                }\r\n                              });\r\n\r\n                        } else if (result.successNodes.length) {\r\n                          self._showGlobalMessage(result.successNodes.length);\r\n                        }\r\n                      });\r\n                  self._announceOperationEnd(status);\r\n                  deferred.resolve();\r\n                })\r\n                .fail(function (error) {\r\n                  if (error && !error.cancelled) {\r\n                    self.showError(error);\r\n                  }\r\n                  deferred.reject();\r\n                });\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addToCollection: function (status, options) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n\r\n          require(['csui/dialogs/node.picker/node.picker'],\r\n              function (NodePicker) {\r\n                var pickerOptions = _.extend({\r\n                  selectableTypes: [],\r\n                  showAllTypes: true,\r\n                  orderBy: 'type asc',\r\n                  dialogTitle: lang.collectItemsDialogTitle,\r\n                  selectButtonLabel: lang.selectButtonLabel,\r\n                  globalSearch: true,\r\n                  selectMultiple: true,\r\n                  context: options ? options.context : status.context,\r\n                  startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                    'favorites', 'recent.containers'],\r\n                  resolveShortcuts: true\r\n                }, status);\r\n\r\n                self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n                self.nodePicker\r\n                    .show()\r\n                    .done(function () {\r\n                      deferred.resolve.apply(deferred, arguments);\r\n                    })\r\n                    .fail(function () {\r\n                      deferred.reject.apply(deferred, arguments);\r\n                    });\r\n              }, function (error) {\r\n                deferred.reject(error);\r\n              });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n            targetCollection) {\r\n          var self     = this,\r\n              queue    = new TaskQueue({\r\n                parallelism: config.parallelism\r\n              }),\r\n              count    = 0,\r\n              promises = _.map(uploadCollection.models, function (model) {\r\n                var deferred = $.Deferred();\r\n                queue.pending.add({\r\n                  worker: function () {\r\n                    var node     = model.node,\r\n                        node_id  = node.get('id'),\r\n                        targetId = targetFolder.get('id');\r\n                    self._collectNode(connector, targetId, node_id)\r\n                        .done(function () {\r\n                          // self._addToCurrentTable(model, targetCollection);\r\n                          model.set('count', 1);\r\n                          model.deferred.resolve(model);\r\n                          self._addToCurrentTable(model.node, targetCollection, targetId);\r\n                          deferred.resolve(model);\r\n                        })\r\n                        .fail(function (cause) {\r\n                          deferred.resolve(model);\r\n                        });\r\n                    return deferred.promise();\r\n                  }\r\n                });\r\n                count++;\r\n                return deferred.promise(promises);  // return promises\r\n              });\r\n          GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n            oneFileTitle: lang.CollectingOneItem,\r\n            oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n            multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            oneFilePending: lang.CollectingOneItem,\r\n            multiFilePending: lang.CollectingItems,\r\n            oneFileFailure: lang.CollectOneItemFailMessage,\r\n            multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n            someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            someFilePending: lang.CollectingItems,\r\n            someFileFailure: lang.CollectManyItemsFailMessage2,\r\n            enableCancel: false\r\n          });\r\n\r\n          return $.whenAll.apply($, promises);\r\n        },\r\n\r\n        _collectNode: function (connector, targetFolderID, node_id) {\r\n          var deferred = $.Deferred();\r\n          var nodeAttr = {\r\n            \"collection_id\": targetFolderID\r\n          };\r\n\r\n          var collectOptions = {\r\n            url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + node_id),\r\n            type: 'PUT',\r\n            data: nodeAttr,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          };\r\n\r\n          connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n            deferred.resolve(resp);\r\n\r\n          }).fail(function (resp) {\r\n            deferred.reject(resp);\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _getListView: function (conflictFiles) {\r\n          var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n          return retVal;\r\n        },\r\n\r\n        _showDialog: function (conflictFiles) {\r\n          var deferred = $.Deferred(),\r\n              buttons  = [{\r\n                id: 'close',\r\n                label: lang.conflictsDialogCloseLabel,\r\n                toolTip: lang.conflictsDialogCloseLabel,\r\n                click: function (args) {\r\n                  deferred.resolve('close', args.dialog);\r\n                }\r\n              }];\r\n          this._showConflictDialog(conflictFiles, buttons);\r\n          return deferred;\r\n        },\r\n\r\n        _showConflictDialog: function (collection, buttons) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n          require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n            var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n                dialog         = new DialogView({\r\n                  title: failureMessage,\r\n                  midSize: true,\r\n                  iconLeft: 'csui-icon-notification-information',\r\n                  className: \"csui-collection-conflicts-dialog\",\r\n                  view: self._getListView(collection),\r\n                  buttons: buttons\r\n                });\r\n            dialog.show();\r\n            return dialog;\r\n          });\r\n\r\n        },\r\n\r\n        _checkPromises: function (promises) {\r\n          if (!_.isArray(promises)) {\r\n            promises = [promises];\r\n          }\r\n\r\n          var successPromises = new Backbone.Collection(),\r\n              failedPromises  = new Backbone.Collection();\r\n\r\n          _.each(promises, function (prom) {\r\n            if (prom !== undefined) {\r\n              if (!prom.cancelled) {\r\n                if (prom.get(\"count\") === undefined) {\r\n                  //which is not resolved or rejected\r\n                } else if (prom.get(\"count\")) {\r\n                  successPromises.push(prom);\r\n                }\r\n                else {\r\n                  failedPromises.push(prom);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          return {\r\n            successNodes: successPromises,\r\n            failedNodes: failedPromises\r\n          };\r\n        },\r\n\r\n        _addToCurrentTable: function (collectItem, targetCollection, targetId) {\r\n          collectItem.isLocallyCreated = true;\r\n          collectItem.refernce_id = targetId;\r\n          collectItem.fetch({collection: targetCollection})\r\n              .then(function () {\r\n                targetCollection.unshift(collectItem.clone());\r\n              });\r\n        },\r\n\r\n        _showGlobalMessage: function (successCount) {\r\n          var successMessage = base.formatMessage(successCount, this.get(\"successMessages\"));\r\n          GlobalMessage.showMessage(\"success\", successMessage);\r\n        },\r\n        _announceOperationStart: function (status) {\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.blockActions) {\r\n            originatingView.blockActions();\r\n          }\r\n          PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n        },\r\n\r\n        _announceOperationEnd: function (status) {\r\n          PageLeavingBlocker.disable();\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.unblockActions) {\r\n            originatingView.unblockActions();\r\n          }\r\n        }\r\n      });\r\n\r\n  return CollectCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/multiple.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, CommandHelper, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies initialized during execution\r\n  var PageLeavingBlocker;\r\n\r\n  var MultipleItemsCommand = {\r\n\r\n    execute: function (status, options) {\r\n      // avoid messages from handleExecutionResults\r\n      // we use our own evaluation here and show message\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self = this,\r\n          promises;\r\n      require(['csui/utils/taskqueue', 'csui/utils/page.leaving.blocker'\r\n      ], function (TaskQueue) {\r\n        PageLeavingBlocker = arguments[1];\r\n        options = options || {};\r\n        if (!options.context) {\r\n          options.context = status.context;\r\n        }\r\n        self._announceStart(status);\r\n        var nodes = CommandHelper.getAtLeastOneNode(status),\r\n            queue = new TaskQueue({\r\n              parallelism: options.parallelism || config.parallelism\r\n            });\r\n\r\n        promises = nodes.map(function (node, index) {\r\n          var deferred = $.Deferred();\r\n          queue.pending.add({\r\n            worker: function () {\r\n              self._performAction(node, options)\r\n                  .done(deferred.resolve)\r\n                  .fail(function(error){\r\n                    deferred.reject(error);\r\n                  });\r\n              return deferred.promise();\r\n            }\r\n          });\r\n          return deferred.promise();\r\n        });\r\n\r\n        // return a promise that has an array with results of original promises\r\n        $.whenAll\r\n            .apply($, promises)\r\n            .always(_.bind(self._announceFinish, self, status))\r\n            .done(function () {\r\n              if(!status.suppressMultipleSuccessMessage) {\r\n                self.showSuccess(promises);\r\n              }\r\n              deferred.resolve.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            })\r\n            .fail(function () {\r\n              if(!status.suppressMultipleFailMessage) {\r\n                self.showError(promises);\r\n              }\r\n              deferred.reject.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    showError: function(promises) {\r\n      var errorMessage,\r\n          successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if(checkResult) {\r\n        var countFailed = checkResult.countFailed;\r\n        var countOk = checkResult.countOk;\r\n\r\n        errorMessage = this._getErrorMessage(countFailed);\r\n\r\n        var msg;\r\n        if(countOk > 0) {\r\n          successMessage = this._getSuccessMessage(countOk);\r\n          msg = successMessage + \" \" + errorMessage;\r\n        } else {\r\n          msg = errorMessage;\r\n        }\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"error\", msg, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccess: function(promises) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success\", successMessage, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccessWithLink: function(promises, msgOptions) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success_with_link\", successMessage, undefined, msgOptions);\r\n        });\r\n      }\r\n    },\r\n\r\n    // helper\r\n    _getErrorMessage: function(cnt) {\r\n      var emessages = this.get(\"errorMessages\");\r\n      var errorMessage = base.formatMessage(cnt, emessages);\r\n\r\n      return errorMessage;\r\n    },\r\n\r\n    // helper\r\n    _getSuccessMessage: function(cnt) {\r\n      var smessages = this.get(\"successMessages\");\r\n      var successMessage = base.formatMessage(cnt, smessages);\r\n\r\n      return successMessage;\r\n    },\r\n\r\n    // Analyzes the given promises and returns a result object with:\r\n    // {\r\n    //   countOk: okCnt,\r\n    //   countFailed: failedCnt\r\n    // }\r\n    //\r\n    _checkPromises: function(promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var okCnt = 0;\r\n      var failedCnt = 0;\r\n\r\n      // At this point all promises from all commands must either be resolved or rejected.\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          // an error or a node can be cancelled, skip it from counting.\r\n          // pressing \"cancel\" button may result in object with cancelled flag set.\r\n          if (!prom.cancelled) {\r\n            if (prom instanceof CommandError) {\r\n              failedCnt++;\r\n            } else if (typeof prom.state !== 'undefined' && typeof prom.state === 'function') {\r\n              // if state exists, evaluate it\r\n              if (prom.state() && prom.state().toLowerCase() === 'resolved') {\r\n                okCnt++;\r\n              } else {\r\n                failedCnt++;\r\n              }\r\n            } else {\r\n              // some model or anything else\r\n              okCnt++;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        countOk: okCnt,\r\n        countFailed: failedCnt\r\n      };\r\n    },\r\n\r\n\r\n    _announceStart: function (status) {\r\n     if(!status.deleteBlockAction){\r\n        var originatingView = status.originatingView;\r\n        if (originatingView && originatingView.blockActions) {\r\n          originatingView.blockActions();\r\n        }\r\n        var pageLeavingWarning = this.get('pageLeavingWarning');\r\n        if (pageLeavingWarning) {\r\n          PageLeavingBlocker.enable(pageLeavingWarning);\r\n        }\r\n      }\r\n\r\n        \r\n    },\r\n\r\n    _announceFinish: function (status) {\r\n      if (this.get('pageLeavingWarning')) {\r\n        PageLeavingBlocker.disable();\r\n      }\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return MultipleItemsCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/confirmable',['csui/lib/underscore', 'csui/lib/jquery',\r\n  'require', 'csui/utils/commands/multiple.items'\r\n], function (_, $, require, MultipleItemsCommand) {\r\n\r\n  var ConfirmableCommand = {\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      return this\r\n          ._confirmAction(status, options)\r\n          .then(function () {\r\n            return self._performActions(status, options);\r\n          }, function(error) {\r\n            return $.Deferred().reject().promise();\r\n          });\r\n    },\r\n\r\n    _confirmAction: function (status, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      if (this._getConfirmTemplate) {\r\n        var data = this._getConfirmData(status, options),\r\n        // FIXME: Use text instead of HTML template\r\n            html = this._getConfirmTemplate(status, options)(data);\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion($(html).text(), data.title)\r\n              .done(function (arg) {\r\n                deferred.resolve(arg);\r\n              })\r\n              .fail(function (arg) {\r\n                deferred.reject(arg);\r\n              });\r\n        });\r\n\r\n      }\r\n      else{\r\n        deferred.resolve();\r\n      }\r\n      return deferred.promise();\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(ConfirmableCommand, _.omit(MultipleItemsCommand, 'execute'));\r\n\r\n  return ConfirmableCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/remove.collected.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/confirmable', 'csui/utils/commands/multiple.items',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, CommandModel, CommandHelper, Url, lang,\r\n    ConfirmableCommand, MultipleItemsCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1\r\n  });\r\n\r\n  var GlobalMessage;\r\n\r\n  var RemoveCollectionItemsCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'RemoveCollectedItems',\r\n      command_key: 'removefromcollection',\r\n      name: lang.removefromCollection,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemSuccessMessage,\r\n        formatForTwo: lang.RemoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.RemoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemFailMessage,\r\n        formatForTwo: lang.RemoveSomeItemsFailMessage,\r\n        formatForFive: lang.RemoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.RemoveCollectItemsCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogMultipleMessage,\r\n                     nodes.length) );\r\n      return {\r\n        title: lang.RemoveCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _performAction: function (model, options) {\r\n      var node                = model.node,\r\n          d                   = $.Deferred(),\r\n          nodeAttr            = {\r\n            \"collection_id\": options.container.get(\"id\"),\r\n            \"operation\": \"remove\"\r\n          },\r\n          connector           = options.container.connector,\r\n          containerCollection = options.containerCollection,\r\n\r\n          collectOptions      = {\r\n            url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + node.get(\"id\")),\r\n            type: 'PUT',\r\n            data: nodeAttr,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          },\r\n\r\n          jqxhr               = connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n            model.set('count', 1);\r\n            containerCollection.remove(node);\r\n            model.deferred.resolve(model);\r\n            d.resolve(model);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, model) :\r\n                               error;\r\n            model.deferred.reject(model, commandError);\r\n            if (!error) {\r\n              jqxhr.abort();\r\n            }\r\n            d.reject(commandError);\r\n          });\r\n\r\n      return d.promise();\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.RemovingOneItem,\r\n        oneFileSuccess: lang.RemoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.RemoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.RemovingOneItem,\r\n        multiFilePending: lang.RemoveItems,\r\n        oneFileFailure: lang.RemoveOneItemFailMessage,\r\n        multiFileFailure: lang.RemoveManyItemsFailMessage2,\r\n        someFileSuccess: lang.RemoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.RemovingSomeItems,\r\n        someFileFailure: lang.RemoveSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RemoveCollectionItemsCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localGlobalMessage) {\r\n        GlobalMessage = localGlobalMessage;\r\n        self._executeRemoveCollectionItems(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeRemoveCollectionItems: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          commandData = status.data || {},\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n\r\n      var showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      ConfirmableCommand.execute.apply(this, arguments)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n                  return !(result instanceof CommandError);\r\n                });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      options || (options = {});\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      options.container || (options.container = status.container);\r\n      options.containerCollection = status.collection;\r\n      require(['csui/models/fileuploads'\r\n      ], function (UploadFileCollection) {\r\n        var models = status.nodes.models;\r\n        var nodes = _.map(models, function (node) {\r\n          return {\r\n            name: node.get('name'),\r\n            state: 'pending',\r\n            count: 0,\r\n            total: 1,\r\n            node: node\r\n          };\r\n        });\r\n        var connector = models && models[0] && models[0].connector;\r\n        var uploadCollection = new UploadFileCollection(nodes, {connector: connector});\r\n        var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n        uploadCollection.each(function (fileUpload) {\r\n          // Replace the new node in the file upload model with the existing\r\n          // one to be able to destroy it; sync and destroy events will be\r\n          // triggered on it and the parent collection and view will see them.\r\n          var node = fileUpload.get('node');\r\n          fileUpload.node = node;\r\n          fileUpload.unset('node');\r\n          fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n        });\r\n\r\n        if (showProgressDialog) {\r\n          self.startGlobalMessage(uploadCollection);\r\n        }\r\n\r\n        // do not display our result messages in _performActions\r\n        newStatus.suppressMultipleSuccessMessage = true;\r\n        newStatus.suppressMultipleFailMessage = true;\r\n\r\n        MultipleItemsCommand._performActions.call(self, newStatus, options)\r\n            .done(function (results) {\r\n              if (showProgressDialog) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n              }\r\n              self.showSuccess(results);\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (errors) {\r\n              if (!showProgressDialog) {\r\n                self.showError(errors);\r\n              }\r\n              return deferred.reject(errors);\r\n            });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return RemoveCollectionItemsCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/copy',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/multiple.items'\r\n], function (module, require, _, $, lang, log, CommandModel,\r\n    CommandHelper, CommandError, MultipleItemsCommand) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3,\r\n    actionType: 'COPY',\r\n    allowMultipleInstances: true\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver, TaskQueue,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, nodeLinks;\r\n\r\n  var CopyCommandParent = CommandModel.extend({});                // create helper parent\r\n  _.extend(CopyCommandParent.prototype, MultipleItemsCommand);    // apply needed mixin\r\n\r\n  var CopyCommand = CopyCommandParent.extend({\r\n    defaults: {\r\n      signature: \"Copy\",\r\n      command_key: ['copy', 'Copy'],\r\n      name: lang.CommandNameCopy,\r\n      verb: lang.CommandVerbCopy,\r\n      pageLeavingWarning: lang.CopyPageLeavingWarning,\r\n      allowMultipleInstances : config.allowMultipleInstances,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemSuccessMessage,\r\n        formatForTwo: lang.CopySomeItemsSuccessMessage,\r\n        formatForFive: lang.CopyManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemFailMessage,\r\n        formatForTwo: lang.CopySomeItemsFailMessage,\r\n        formatForFive: lang.CopyManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressSuccessMessage = true;\r\n      status.suppressFailMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node', 'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        ApplyPropertiesSelectorView = arguments[3];\r\n        UploadFileCollection = arguments[4];\r\n        PageLeavingBlocker = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n        nodeLinks = arguments[7];\r\n        if (GlobalMessage.isActionInProgress(config.actionType, lang.CopyNotAllowed, lang.CommandTitleCopy)) {\r\n          return deferred.resolve();\r\n        }\r\n        self._selectCopyOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var openMetadata = selectedOptions.openSelectedProperties;\r\n              var applyProperties = selectedOptions.applyProperties;\r\n              var bundleNumber = new Date().getTime(); \r\n\r\n              // note: in some scenarios such as expanded tile, the status.container is undefined\r\n              var copyToCurrentFolder = status.container ?\r\n                                        (targetFolder.get('id') === status.container.get('id')) :\r\n                                        false;\r\n\r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false,\r\n                  bundleNumber : bundleNumber\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                returnObj.targetLocation = {\r\n                  id : targetFolder.get('id'),\r\n                  url : nodeLinks.getUrl(targetFolder)\r\n                };\r\n                return returnObj;\r\n              });\r\n              var copyNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, copyNamesToResolve)\r\n                  .done(function (copyInstructions) {\r\n\r\n                    _.each(copyInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(copyInstructions,\r\n                        _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(copyInstructions, {\r\n                            container: targetFolder ? targetFolder.clone() : undefined\r\n                          });\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n                          uploadCollection.each(function (model) {\r\n                            var sourceNode = selectedNodes.findWhere({\r\n                              id: model.get('id')\r\n                            });\r\n                            model.node.set(_.omit(sourceNode.attributes, 'id'));\r\n                          });\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n\r\n                          self._copySelectedNodes(uploadCollection, connector,\r\n                              targetFolder, applyProperties, copyToCurrentFolder, status.collection, status, context)\r\n                              .done(function (promises) {\r\n                                if (promises.length) {\r\n                                  // display result message\r\n                                  var msgOptions = {\r\n                                    context: context,\r\n                                    nextNodeModelFactory: NextNodeModelFactory,\r\n                                    link_url: nodeLinks.getUrl(targetFolder),\r\n                                    targetFolder: targetFolder\r\n                                  };\r\n                                }\r\n                                var targetNodeIncurrentCollection;\r\n                                if (status.collection && status.originatingView &&\r\n                                    status.originatingView.findNodeFromCollection) {\r\n                                  targetNodeIncurrentCollection = status.originatingView.findNodeFromCollection(\r\n                                      status.collection, targetFolder);\r\n                                } else if (status.collection) {\r\n                                  targetNodeIncurrentCollection = status.collection.get(\r\n                                      targetFolder.get('id')) ||\r\n                                                                  status.collection.findWhere({\r\n                                                                    id: targetFolder.get('id')\r\n                                                                  });\r\n                                }\r\n                                !copyToCurrentFolder && targetNodeIncurrentCollection &&\r\n                                targetNodeIncurrentCollection.fetch();\r\n                                deferred.resolve(uploadCollection);\r\n                              })\r\n                              .always(function (promises) {\r\n                                self._announceOperationEnd(status, copyToCurrentFolder);\r\n                              })\r\n                              .fail(function (copyResults) {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail(function (error) {\r\n                          self._announceOperationEnd(status, copyToCurrentFolder);\r\n\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {\r\n                    // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                        \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    }\r\n                    else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status, copyToCurrentFolder);\r\n                    deferred.reject();\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if (error && !error.cancelled) {                                   // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);          // require\r\n\r\n      return deferred.promise();    // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status, copyToCurrentFolder) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    },\r\n\r\n    _selectCopyOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            //account for a copy command coming from a folders context menu.\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ?\r\n                                  (status.container.get('id') ===\r\n                                   status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(\r\n                numNodes > 1 ? lang.DialogTitleCopy : lang.DialogTitleSingleCopy, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: 'copy',\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              addableTypes: [0], // Allowing folders to add from picker. Revisit when LPAD-61637 done.\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true,\r\n              includeResources:['show_hidden']\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n            self.originatingView = status.originatingView;\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames) {\r\n      var h1 = (nodeNames.length === 1) ? lang.CopyingNode :\r\n               _.str.sformat(lang.CopyingNodes, nodeNames.length);\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: lang.CommandNameCopy,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames,\r\n        originatingView: this.originatingView\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, options) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView && this.originatingView._blockingCounter === 0 &&\r\n      this.originatingView.blockActions();\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = 'copy';\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copySelectedNodes: function (uploadCollection, connector, targetFolder, applyProperties,\r\n        copyToCurrentFolder, targetCollection, status, context) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var attributes = model.attributes,\r\n                    targetId   = targetFolder.get('id');\r\n\r\n                self._getCategories(attributes, connector, targetId, applyProperties)\r\n                    .done(function (categories) {\r\n                      self._copyNode(categories, attributes, connector, targetId, model.node)\r\n                          .done(function () {\r\n                            model.set('count', 1);\r\n                            model.deferred.resolve(model);\r\n                            copyToCurrentFolder &&\r\n                            self._addToCurrentTable(model.node, targetCollection);\r\n                            deferred.resolve(attributes);\r\n                          })\r\n                          .fail(function (cause) {\r\n                            var errMsg = new CommandError(cause);\r\n                            model.deferred.reject(model, errMsg);\r\n                            deferred.reject(errMsg);\r\n                          });\r\n                    })\r\n                    .fail(function (cause) {\r\n                      var errMsg = new CommandError(cause);\r\n                      model.deferred.reject(model, errMsg);\r\n                      deferred.reject(errMsg);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            return deferred.promise(promises);      // return promises\r\n          });\r\n      GlobalMessage.showProgressPanel(uploadCollection, {\r\n        oneFileTitle: lang.CopyingOneItem,\r\n        oneFileSuccess: lang.CopyOneItemSuccessMessage,\r\n        multiFileSuccess: lang.CopyManyItemsSuccessMessage,\r\n        oneFilePending: lang.CopyingOneItem,\r\n        multiFilePending: lang.CopyItems,\r\n        oneFileFailure: lang.CopyOneItemFailMessage,\r\n        multiFileFailure: lang.CopyManyItemsFailMessage,\r\n        someFileSuccess: lang.CopySomeItemsSuccessMessage,\r\n        someFilePending: lang.CopySomeItems,\r\n        someFileFailure: lang.CopySomeItemsFailMessage2,\r\n        locationLabelPending : lang.CopyingLocationLabel,\r\n        locationLabelCompleted: lang.CopiedLocationLabel,\r\n        enableCancel: false,\r\n        actionType: config.actionType,\r\n        allowMultipleInstances : config.allowMultipleInstances,\r\n        context: context,\r\n        nextNodeModelFactory: NextNodeModelFactory\r\n      });\r\n      this._announceOperationEnd(status);\r\n\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _addToCurrentTable: function (node, targetCollection) {\r\n      node.isLocallyCreated = true;\r\n      node.fetch({collection: targetCollection})\r\n          .then(function () {\r\n            targetCollection.unshift(node);\r\n          });\r\n    },\r\n\r\n    _copyNode: function (categories, instruction, connector, targetFolderID, node) {\r\n      var nodeAttr = {\r\n        \"original_id\": instruction.id,\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": categories\r\n      };\r\n\r\n      // FileUploadModel should be created with a container or connector\r\n      // to make its node cloneable.  But if not needed, use the default\r\n      // container of the upload controller to provide the connector.\r\n      if (!node.connector) {\r\n        connector.assignTo(node);\r\n      }\r\n\r\n      return node.save(undefined, {\r\n        data: nodeAttr,\r\n        url: connector.connection.url + '/nodes'\r\n      });\r\n    },\r\n\r\n    _getCategories: function (attributes, connector, targetFolderID, applyProperties) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      if (attributes.extended_data && attributes.extended_data.roles) {\r\n        deferred.resolve(attributes.extended_data.roles);\r\n      }\r\n      else {\r\n        var getCategoriesOptions = {\r\n          url: connector.connection.url + '/forms/nodes/copy?' +\r\n               $.param({\r\n                 id: attributes.id,\r\n                 parent_id: targetFolderID\r\n               })\r\n        };\r\n\r\n        connector.makeAjaxCall(getCategoriesOptions)\r\n            .then(function (response, statusText, jqxhr) {\r\n              var form = response.forms[1],\r\n                  data = form && form.data || {};\r\n              var categoryGroupMapping;\r\n              categoryGroupMapping = {};\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n              var categories = data[categoryGroupMapping[applyProperties]];\r\n              deferred.resolve({\"categories\": categories});\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return CopyCommand;\r\n});\r\n\n","csui.define('csui/utils/routing',['module', 'csui/lib/underscore'\r\n], function (module, _) {\r\n  'use strict';\r\n\r\n  var developmentPage = module.config().developmentPage;\r\n  // TODO: Deprecate and remove configurability for the two muodules.\r\n  readOldSettings('csui/pages/start/perspective.routing');\r\n  readOldSettings('csui/pages/start/impl/perspective.router');\r\n\r\n  function readOldSettings(moduleName) {\r\n    if (developmentPage === undefined) {\r\n      var oldConfig = window.csui.requirejs.s.contexts._.config\r\n        .config[moduleName] || {};\r\n      developmentPage = oldConfig.developmentPage;\r\n    }\r\n  }\r\n\r\n  return {\r\n    routesWithSlashes: function () {\r\n      // Append the client application paths to the \"server\" page path, when\r\n      // we run on the server; append the client application paths in back of\r\n      // the hash, when we run on a development HTML page\r\n      return /\\/app(?:\\/.*)?$/.test(location.pathname) || !developmentPage;\r\n    }  \r\n  };\r\n});\r\n\n","\n","csui.define('csui/utils/node.links/node.links',[\r\n  'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  'csui/utils/routing',\r\n  // Load and register external node link rules\r\n  'csui-ext!csui/utils/node.links/node.links'\r\n], function (_, Backbone, Url, RulesMatchingMixin, routing, rules) {\r\n  'use strict';\r\n\r\n  var routesWithSlashes = routing.routesWithSlashes();\r\n\r\n  var NodeLinkModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      url: null\r\n    },\r\n\r\n    constructor: function NodeLinkModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(NodeLinkModel.prototype);\r\n\r\n  var NodeLinkCollection = Backbone.Collection.extend({\r\n    model: NodeLinkModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function NodeLinkCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      // Make the URLs point to the original node, if the current node is\r\n      // a shortcut; leave generation point to itself for now, until\r\n      // we support it properly\r\n      var type = node.get('type');\r\n      if (type === 1 && node.original && node.original.get('id') > 0) {\r\n        node = node.original;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        return item.matchRules(node, item.attributes);\r\n      });\r\n      if (rule) {\r\n        var url = rule.get('getUrl')(node, options);\r\n        return this.completeUrl(node, url, options);\r\n      }\r\n    },\r\n\r\n    completeUrl: function (node, url, options) {\r\n      if (!url) {\r\n        return location.href;\r\n      }\r\n\r\n      var connector = node.connector || options && options.connector;\r\n      var serverUrl = new Url(connector && connector.connection.url ||\r\n                              location.href);\r\n      var absoluteUrl = serverUrl.makeAbsoluteUrl(url, this._getApplicationUrlPrefix(serverUrl));      \r\n      var context = options && options.context,\r\n          viewStateModel = context && context.viewStateModel,\r\n          currentRouter = viewStateModel && viewStateModel.get('activeRouterInstance'),\r\n          urlParams = currentRouter && currentRouter.buildUrlParams();\r\n      if (urlParams) {\r\n        absoluteUrl += '?' + urlParams;\r\n      }\r\n      return absoluteUrl;\r\n    },\r\n\r\n    _getApplicationUrlPrefix: function (serverUrl) {\r\n      // Application URLs start after '#' on the development pages, while\r\n      // on the actual server they are merged with the main access point\r\n      var applicationUrlPrefix;\r\n      if (routesWithSlashes) {\r\n        applicationUrlPrefix = Url.combine(serverUrl.getCgiScript(), '/app/');\r\n      } else {\r\n        applicationUrlPrefix = location.origin + location.pathname +\r\n                               location.search + '#';\r\n      }\r\n      return applicationUrlPrefix;\r\n    }\r\n  });\r\n\r\n  var nodeLinks = new NodeLinkCollection();\r\n\r\n  if (rules) {\r\n    nodeLinks.add(_.flatten(rules, true));\r\n  }\r\n\r\n  return nodeLinks;\r\n});\r\n\n","csui.define('csui/utils/commands/copy.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'csui/utils/node.links/node.links',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, NodeLinks, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var CopyLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'CopyLink',\r\n      name: lang.CommandNameCopyLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return !!node;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          urlOptions = {context: status.context},\r\n          nodeLink = status.url ? NodeLinks.completeUrl(node, status.url, urlOptions) : NodeLinks.getUrl(node, urlOptions),\r\n          success  = this._copyToClipboard(nodeLink);\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (success) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', lang.CopyLinkSuccessMessage);\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', lang.CopyLinkFailMessage);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copyToClipboard: function (nodeLink) {\r\n      if (window.clipboardData) { /*Workaround for IE*/\r\n        window.clipboardData.setData('Text', nodeLink);\r\n        return true;\r\n      } else {\r\n        /* Create a fake text node in body, select it by creating a range, trigger copy command,\r\n         remove fake text node*/\r\n        var success  = false,\r\n            element  = document.createTextNode(nodeLink),\r\n            elParent = document.createElement('span');\r\n        //Set styles for span, so that text node doesn't use widget styles\r\n        elParent.style.color = 'black';\r\n        elParent.style.background = 'tranparent';\r\n        elParent.style.backgroundColor = 'white';\r\n\r\n        elParent.appendChild(element);\r\n        document.body.appendChild(elParent);\r\n        if (window.getSelection) { // moz, opera, webkit, ie11\r\n          var selection = window.getSelection();\r\n          selection.removeAllRanges();\r\n          var range = document.createRange();\r\n          range.selectNodeContents(element);\r\n          selection.addRange(range);\r\n          success = document.execCommand(\"copy\");\r\n          selection.removeAllRanges();\r\n        }\r\n        document.body.removeChild(elParent);\r\n        return success;\r\n      }\r\n    }\r\n  });\r\n\r\n  return CopyLinkCommand;\r\n});\r\n\n","//TODO Check if this should be moved to pman \r\ncsui.define('csui/models/perspective/perspective.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  \"csui/utils/log\", \"csui/utils/base\", 'csui/utils/url'\r\n], function (module, _, Backbone, UploadableMixin, ConnectableMixin, log,\r\n    base, Url) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options);\r\n    },\r\n\r\n    getPerspectiveId: function() {\r\n      return this.get('id');\r\n    },\r\n\r\n    getPerspective: function () {\r\n      return this.get('perspective');\r\n    },\r\n\r\n    setPerspective: function (attributes, options) {\r\n      this.set('perspective', attributes, options);\r\n    },\r\n\r\n    update: function (changes) {\r\n      this.set.apply(this, arguments);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    urlBase: function () {\r\n      var id  = this.get('id'),\r\n          url = this.connector.connection.url;\r\n      if (!id) {\r\n        // Create a new node by POST /perspectives\r\n        url = Url.combine(url, 'perspectives');\r\n      } else if (!_.isNumber(id) || id > 0) {\r\n        // Access an existing node by VERB /perspectives/:id\r\n        url = Url.combine(url, 'perspectives', id);\r\n      } else {\r\n        throw new Error('Unsupported id value');\r\n      }\r\n      return url;\r\n    },\r\n\r\n    url: function () {\r\n      var url = this.urlBase();\r\n      return url;\r\n    },\r\n\r\n    prepareFormData: function (data, options) {\r\n      return {pData: JSON.stringify(data)};\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveModel.prototype);\r\n\r\n  return PerspectiveModel;\r\n\r\n});\n","csui.define('csui/utils/commands/create.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.model',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, PerspectiveModel, lang) {\r\n  'use strict';\r\n\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: true\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory, NodeModelFactory, AncestorCollectionFactory;\r\n\r\n  var CreatePerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'CreatePerspective',\r\n      name: lang.CreatePerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          attributes = context.perspective.attributes;\r\n      if (attributes.id === undefined && attributes.canEditPerspective &&\r\n          context._applicationScope.attributes.id === \"node\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n          isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._editInline(status, options, context);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        return this._editInClassicPMan(status, options, context);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Prepare new perspective config required for current node since no perspective is configured yet.\r\n     */\r\n    _preparePerspectiveConfig: function (context) {\r\n      var perspectiveConfig = {\r\n            \"perspective\": {\r\n              \"type\": \"flow\",\r\n              \"options\": {\r\n                \"widgets\": [\r\n                  {\r\n                    \"type\": \"csui/widgets/nodestable\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"overrideType\": \"genericContainer\",\r\n            \"scope\": \"local\",\r\n            \"containerType\": \"-1\",\r\n            \"cascading\": \"false\"\r\n          },\r\n          node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n          collection        = context.getCollection(AncestorCollectionFactory);\r\n      perspectiveConfig.nodepath = this._getNodePath(collection);\r\n      perspectiveConfig.node = node.get('id');\r\n      perspectiveConfig.containerType = node.get('type');\r\n      perspectiveConfig.title = node.get('name');\r\n      return perspectiveConfig;\r\n    },\r\n\r\n    _editInline: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/ancestors',\r\n        'csui/perspective.manage/pman.view'\r\n      ], function () {\r\n        NodeModelFactory = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var PManView          = arguments[3],\r\n            // Create new perspective\r\n            perspectiveConfig = self._preparePerspectiveConfig(context, NodeModelFactory,\r\n                AncestorCollectionFactory);\r\n        // Append current timestamp to avoid name conflicts in perspective volume\r\n        perspectiveConfig.title = perspectiveConfig.title + ' ' + new Date().getTime();\r\n        var perspective = new PerspectiveModel(perspectiveConfig,\r\n            {connector: context.getObject(ConnectorFactory)});\r\n        var pmanView = new PManView({\r\n          context: context,\r\n          perspective: perspective\r\n        });\r\n        pmanView.show();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/ancestors'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var f = self._getForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getUrlQueryParameters(context, status);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var perspectiveConfig = this._preparePerspectiveConfig(context, NodeModelFactory,\r\n          AncestorCollectionFactory);\r\n      perspectiveConfig.ui = {\r\n        \"elements\": {\r\n          \"btn-mode-code\": true,\r\n          \"btn-view-general\": true,\r\n          \"btn-view-rules\": false,\r\n          \"btn-view-layout\": true,\r\n          \"btn-view-widgets\": true,\r\n\r\n          \"view-perspective-action\": true,\r\n          \"perspective-action-create\": true,\r\n          \"perspective-action-edit\": true,\r\n          \"perspective-action-copy\": true,\r\n\r\n          \"view-perspective-form\": true,\r\n          \"perspective-title\": true,\r\n          \"perspective-type\": true,\r\n          \"perspective-scope\": true,\r\n          \"perspective-nodetypes\": true,\r\n          \"perspective-node\": true,\r\n          \"perspective-cascading\": true,\r\n\r\n          \"display-size-msg\": false,\r\n          \"rules-code\": true,\r\n\r\n          \"layout-flow\": true,\r\n          \"layout-left-center-right\": true,\r\n          \"layout-grid\": false,\r\n          \"layout-tabbed\": false\r\n        },\r\n        \"widgetGroupsBlacklist\": [],\r\n        \"widgetsWhitelist\": [],\r\n        \"disableGrouping\": false\r\n      };\r\n      return {\r\n        config: JSON.stringify(perspectiveConfig)\r\n      };\r\n    },\r\n\r\n    _getNodePath: function (collection) {\r\n      var nodepath = \"\";\r\n      collection.each(function (model) {\r\n        nodepath += nodepath ? ':' : '';\r\n        nodepath += model.get('name');\r\n      });\r\n      return nodepath;\r\n    }\r\n\r\n  });\r\n\r\n  return CreatePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/node',['csui/lib/underscore', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items'\r\n], function (_, CommandModel, MultipleItemsCommand) {\r\n\r\n  var NodeCommand = CommandModel.extend({\r\n\r\n    _performAction: function (node, options) {\r\n      throw new Error('Method not implemented in the descendant command.');\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(NodeCommand.prototype, MultipleItemsCommand);\r\n\r\n  return NodeCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/delete',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/log', 'csui/utils/commandhelper', 'csui/utils/commands/node',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commands/confirmable',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, lang, log, CommandHelper, NodeCommand,\r\n    MultipleItemsCommand, ConfirmableCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1,\r\n    actionType: 'DELETE',\r\n    allowMultipleInstances: true\r\n  });\r\n\r\n  var UploadFileCollection, NextNodeModelFactory, GlobalMessage;\r\n\r\n  var DeleteCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'Delete',\r\n      command_key: ['delete', 'Delete'],\r\n      name: lang.CommandNameDelete,\r\n      verb: lang.CommandVerbDelete,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      allowMultipleInstances : config.allowMultipleInstances,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemSuccessMessage,\r\n        formatForTwo: lang.DeleteSomeItemsSuccessMessage,\r\n        formatForFive: lang.DeleteManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemFailMessage,\r\n        formatForTwo: lang.DeleteSomeItemsFailMessage,\r\n        formatForFive: lang.DeleteManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogMultipleMessage,\r\n                     nodes.length));\r\n      return {\r\n        title: lang.DeleteCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    // Perform the delete action. Return a promise, which is resolved with the deleted node if\r\n    // successful or rejected with the error.\r\n    // Note, that the node is used later to display the name of the deleted item.\r\n    _performAction: function (model, options) {\r\n      var node = model.node;\r\n      var d = $.Deferred();\r\n      var collection = node.collection;\r\n      var jqxhr = node.destroy({\r\n        wait: true\r\n      })\r\n        .done(function () {\r\n          model.set('count', 1);\r\n          model.deferred.resolve(model);\r\n          d.resolve(node);\r\n        })\r\n        .fail(function (error) {\r\n          var commandError = error ? new CommandError(error, node) :\r\n            error;\r\n          model.deferred.reject(model, commandError);\r\n          if (!error) {\r\n            jqxhr.abort();\r\n          }\r\n          d.reject(commandError);\r\n        });\r\n\r\n        var originatingView = options.originatingView;\r\n        if (originatingView && originatingView.unblockActions) {\r\n          originatingView.unblockActions();\r\n        }\r\n\r\n      return d.promise();\r\n    },\r\n\r\n    // keep in sync with versions/delete.js\r\n    startGlobalMessage: function (uploadCollection, options) {\r\n      /* GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        oneFileSuccess: isVersionModel ? versionLang.DeleteVersionOneItemSuccessMessage : lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: isVersionModel ? versionLang.DeleteVersionManyItemsSuccessMessage : lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        multiFilePending: isVersionModel ? versionLang.DeleteVersions : lang.DeleteFiles,\r\n        oneFileFailure: isVersionModel ? versionLang.DeleteVersionOneItemFailMessage : lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: isVersionModel ? versionLang.DeleteVersionManyItemsFailMessage2 : lang.DeleteManyItemsFailMessage2,\r\n        someFileSuccess: isVersionModel ? versionLang.DeleteVersionSomeItemsSuccessMessage : lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: isVersionModel ? versionLang.DeletingSomeVersions : lang.DeletingSomeFiles,\r\n        someFileFailure: isVersionModel ? versionLang.DeleteVersionSomeItemsFailMessage2 : lang.DeleteSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      }); */\r\n      GlobalMessage.showProgressPanel(uploadCollection, {\r\n        oneFileTitle: lang.DeletingOneItem,\r\n        oneFileSuccess: lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: lang.DeletingOneItem,\r\n        multiFilePending: lang.DeleteItems,\r\n        oneFileFailure: lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: lang.DeleteManyItemsFailMessage,\r\n        someFileSuccess: lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: lang.DeletingSomeItems,\r\n        someFileFailure: lang.DeleteSomeItemsFailMessage,\r\n        enableCancel: false,\r\n        originatingView: options.originatingView,\r\n        locationLabelPending : lang.deletingLocationLabel,\r\n        locationLabelCompleted: lang.deletedLocationLabel,\r\n        allowMultipleInstances : config.allowMultipleInstances,\r\n        actionType: config.actionType\r\n      });\r\n    }\r\n  });\r\n\r\n  _.extend(DeleteCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults (must be set here and not in any async\r\n      // callbacks, because it is used in the calling code immediately after calling execute)\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n      status.deleteBlockAction = true;\r\n\r\n      require([\r\n        'csui/models/fileuploads',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localUploadFileCollection, localNextNodeModelFactory,\r\n          localGlobalMessage) {\r\n        UploadFileCollection = localUploadFileCollection;\r\n        NextNodeModelFactory = localNextNodeModelFactory;\r\n        GlobalMessage = localGlobalMessage;\r\n        if (GlobalMessage.isActionInProgress(config.actionType, lang.DeleteNotAllowed, lang.CommandTitleDelete)) {\r\n          return deferred.resolve();\r\n        }\r\n        self._executeDelete(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeDelete: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n      options.originatingView = status.originatingView;\r\n\r\n\r\n      // Do not use 'apply' with 'arguments' array because the 'options' parameter that is\r\n      // undefined and locally set will not be passed on with the locally set value.\r\n      // Use 'call' with parameters list.\r\n      ConfirmableCommand.execute.call(this, status, options)\r\n          .done(function (results) {\r\n\r\n            // If the current container is deleted, open its parent\r\n            if (node && node === status.container) {\r\n              // Let the other subscribers execute before navigating away\r\n              setTimeout(function () {\r\n                var nextNode = context.getModel(NextNodeModelFactory),\r\n                    parentId = status.container.get('parent_id');\r\n                nextNode.set('id', parentId.id || parentId);\r\n              });\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            else if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n              return !(result instanceof CommandError);\r\n            });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true,\r\n          models             = status.nodes.models;\r\n      var nodes = _.map(models, function (node) {\r\n        return {\r\n          name: node.get('name'),\r\n          state: 'pending',\r\n          count: 0,\r\n          total: 1,\r\n          node: node\r\n        };\r\n      });\r\n      var connector = models && models[0] && models[0].connector;\r\n      var uploadCollection = new UploadFileCollection(nodes, {\r\n        connector: connector,\r\n        container: status.container ? status.container.clone() : undefined\r\n      });\r\n      var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n      var bundleNumber = new Date().getTime();\r\n      // TODO: Make the progressbar a reusable component; do not\r\n      // misuse the file-upload-progressbar for other scenarios.\r\n      // TODO: Handle this in the multi-item command to be consistent\r\n      // with other commands; do not override the delete command only.\r\n      uploadCollection.each(function (fileUpload) {\r\n        // Replace the new node in the file upload model with the existing\r\n        // one to be able to destroy it; sync and destroy events will be\r\n        // triggered on it and the parent collection and view will see them.\r\n        var node = fileUpload.get('node');\r\n        fileUpload.node = node;\r\n        fileUpload.unset('node');\r\n        fileUpload.set('bundleNumber', bundleNumber);\r\n        fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n      });\r\n\r\n      // var isVersionModel = uploadCollection.models[0].node instanceof VersionModel;\r\n      if (showProgressDialog) {\r\n        this.startGlobalMessage(uploadCollection, options);\r\n      }\r\n\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n\r\n      // do not display our result messages in _performActions\r\n      newStatus.suppressMultipleSuccessMessage = true;\r\n      newStatus.suppressMultipleFailMessage = true;\r\n\r\n      MultipleItemsCommand._performActions.call(this, newStatus, options)\r\n          .done(function (results) {\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (errors) {\r\n            if (!showProgressDialog) {\r\n              self.showError(errors);\r\n            }\r\n            return deferred.reject(errors);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return DeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/download',[\"module\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/utils/base\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/utils/log\", \"csui/utils/command.error\",\r\n  \"csui/utils/url\", \"csui/utils/commandhelper\", \"csui/utils/connector\", \"csui/models/command\",\r\n  \"csui/models/version\"\r\n], function (module, _, $, base, lang, log, CommandError, Url, CommandHelper, Connector,\r\n    CommandModel, VersionModel) {\r\n  'use strict';\r\n\r\n  var DownloadCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Download\",\r\n      command_key: ['download', 'Download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = this._getNode(status);\r\n\r\n      if (base.isAppleMobile()) {\r\n        // in case of iOS open the document in a new tab\r\n        return this._openContent(node, options);\r\n      } else {\r\n        return this._downloadContent(node, options);\r\n      }\r\n    },\r\n\r\n    _getNode: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      var type = node.get('type');\r\n      // In search results, Generation node carries the version_number (not in the original node).\r\n      var generationVersionNumber = node.get('version_number');\r\n\r\n      // Apply the open/download command always to the Shortcut or Generation target.\r\n      // The original node reference must be expanded.\r\n      if (node.original && node.original.get('id') > 0) {\r\n        if (type === 1 || type === 2) {  // Shortcut or Generation\r\n          node = node.original;\r\n        }\r\n        if (type === 2 && generationVersionNumber !== undefined) {  // Generation\r\n          node.set('version_number', generationVersionNumber, {silent: true});\r\n        }\r\n      }\r\n\r\n      // In Search Results, the collection can contain models with non current version but these\r\n      // models are not of type VersionModel.  Such models need the version_number.\r\n      // Check for the 'current_version=false' that is set explicitly.\r\n      // Note: the Search Results code does not always set/have 'current_version=true' explicitly.\r\n      var versionsObj = node.get('versions');\r\n      var currentVersion = !(versionsObj && (versionsObj.current_version === false));\r\n\r\n      // Always open or download with the latest version.\r\n      // Remove the version number properties if the node is not a VersionModel nor Generation.\r\n      // Same for Search Results latest/current version.\r\n      if (!(node instanceof VersionModel) && type !== 2 && currentVersion) {\r\n        var cloneNode = node.clone();\r\n        var versionNumProps = ['version_number', 'version_number_major', 'version_number_minor',\r\n          'version_number_name'];\r\n        versionNumProps.forEach(function (property) {\r\n          cloneNode.unset(property, {silent: true});\r\n          if (cloneNode.attributes.versions && _.isObject(cloneNode.attributes.versions)) {\r\n            delete cloneNode.attributes.versions[property];\r\n          }\r\n        });\r\n        return cloneNode;\r\n      }\r\n\r\n      return node;\r\n    },\r\n\r\n    _downloadContent: function (node, options, action) {\r\n      return this._executeContentCommand(node, options)\r\n          .then(_.bind(function (token) {\r\n            var url = this._getContentUrl(node, options, action || \"download\", token);\r\n            return this._performDownload(url);\r\n          }, this));\r\n    },\r\n\r\n    _openContent: function (node, options) {\r\n      var self = this;\r\n      var content = window.open(\"\");\r\n      return this._executeContentCommand(node, options)\r\n          .then(function (token) {\r\n            content.location.href = self._getContentUrl(node, options, \"download\", token);\r\n            content.focus();\r\n            return $.Deferred().resolve();\r\n          }, function () {\r\n            content.close();\r\n            return $.Deferred().reject();\r\n          });\r\n    },\r\n\r\n    _executeContentCommand: function (node, options) {\r\n      var promise = $.Deferred();\r\n      node.connector.requestContentAuthToken(node)\r\n          .done(function (data) {\r\n            promise.resolve(data.token);\r\n          })\r\n          .fail(function (error) {\r\n            promise.reject(new CommandError(error));\r\n          });\r\n      return promise.promise();\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = \"\";\r\n      if (node.get('version_number')) {\r\n        url = Url.combine(node.connector.connection.url, \"nodes\",\r\n            node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      } else {\r\n        url = Url.combine(node.connector.connection.url, \"nodes\",\r\n            node.get('id'), \"content\");\r\n      }\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    },\r\n\r\n    _performDownload: function (url) {\r\n      // Creating an iframe with non-displayable document forces the download\r\n      // action in the browser and the page stays undisturbed.\r\n      var iframe = $(\"<iframe></iframe>\")\r\n          .hide()\r\n          .attr(\"src\", url)\r\n          .appendTo($(document.body));\r\n      var delay = Math.min(Connector.prototype.connectionTimeout || 60 * 1000, 60 * 1000);\r\n      setTimeout(function () {\r\n        iframe.remove();\r\n      }, delay);\r\n      return $.Deferred().resolve();\r\n    }\r\n\r\n  });\r\n\r\n  return DownloadCommand;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/open.document/delegates/open.document.delegates',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  // Load and register external document opening command delegates\r\n  'csui-ext!csui/utils/commands/open.document/delegates/open.document.delegates'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var OpenDocumentDelegateModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      command: null\r\n    },\r\n\r\n    constructor: function OpenDocumentDelegateModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    },\r\n\r\n    enabled: function (node, status, options) {\r\n      return this.matchRules(node, this.attributes) &&\r\n        this.get('command').enabled(status, options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(OpenDocumentDelegateModel.prototype);\r\n\r\n  var OpenDocumentDelegateCollection = Backbone.Collection.extend({\r\n    model: OpenDocumentDelegateModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function OpenDocumentDelegateCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, status, options) {\r\n      var rule = this.find(function (rule) {\r\n        return rule.enabled(node, status, options);\r\n      });\r\n      return rule && rule.get('command');\r\n    }\r\n  });\r\n\r\n  var openDocumentDelegates = new OpenDocumentDelegateCollection();\r\n\r\n  if (rules) {\r\n    openDocumentDelegates.add(_\r\n      .chain(rules)\r\n      .flatten(rules)\r\n      .map(function (rule) {\r\n        return _.defaults({\r\n          command: new rule.command()\r\n        }, rule);\r\n      })\r\n      .value());\r\n  }\r\n\r\n  return openDocumentDelegates;\r\n});\r\n\n","csui.define('csui/utils/commands/open.document/open.document',[\r\n  'csui/lib/underscore', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.document/delegates/open.document.delegates'\r\n], function (_, CommandModel, CommandHelper, openDocumentDelegates) {\r\n  'use strict';\r\n\r\n  var OpenDocumentCommand = CommandModel.extend({\r\n    defaults: { signature: 'OpenDocument' },\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // Allow only a single node to be opened.\r\n      if (!node) {\r\n        return false;\r\n      }\r\n      // TODO: Ask for content:true to be added to the REST API. They added\r\n      // versionable:true, which will be great for the version history enabling,\r\n      // but not for content opening, because containers can be versionable too.\r\n      // TODO: Move E-mail and Drawing to their modules\r\n      var type = node.get('type');\r\n      if (!(type && _.contains(['144', '749', '736'], type.toString()))) {\r\n        return false;\r\n      }\r\n      // Check permissions of the least demanding command - the fallback,\r\n      // which is evaluated at the end of the prioritized collection.\r\n      var fallbackCommand = openDocumentDelegates.last().get('command');\r\n      return fallbackCommand.enabled(status, options);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var delegatedCommand = chooseDelegatedCommand(status, options);\r\n      return delegatedCommand.execute(status, options);\r\n    }\r\n  });\r\n\r\n  function chooseDelegatedCommand (status, options) {\r\n    var node = CommandHelper.getJustOneNode(status);\r\n    return node && openDocumentDelegates.findByNode(node, status, options);\r\n  }\r\n\r\n  return OpenDocumentCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/zipanddownload',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/utils/command.error\",\r\n  \"csui/utils/commandhelper\", \"csui/models/command\", \"csui/utils/url\"\r\n], function (module, require, _, $, lang, CommandError, CommandHelper,\r\n    CommandModel, URL) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, PreFlightModel, StagesModel, ModalAlert, stageInterval = 2000;\r\n\r\n  var ZipAndDownloadCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"ZipAndDownload\",\r\n      command_key: ['ZipAndDownload', 'zipanddownload'],\r\n      name: lang.CommandNameZipDownload,\r\n      verb: lang.CommandVerbZipDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"multiple\",\r\n      selfBlockOnly: true\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var flag = false;\r\n      if(!status.nodes || !status.nodes.models){\r\n        return false;\r\n      }\r\n\r\n      if (status.nodes.models.length === 1) {\r\n        var node = CommandHelper.getJustOneNode(status),\r\n            zipAndDownloadExists;\r\n        for (var idx = 0; idx < status.nodes.models.length; idx++) {\r\n          zipAndDownloadExists = _.filter(\r\n              status.nodes.models && status.nodes.models[idx].actions &&\r\n              status.nodes.models[idx].actions.models,\r\n              function (action) { return action.id === \"zipanddownload\"; });\r\n        }\r\n        if (node.get(\"container\") && zipAndDownloadExists.length > 0) {\r\n          flag = true;\r\n        }\r\n      } else if (status.nodes.models.length > 1) {\r\n        var count = 0;\r\n        for (var index = 0; index < status.nodes.models.length; index++) {\r\n          var downloadExists = _.filter(status.nodes.models && status.nodes.models[index].actions &&\r\n                                        status.nodes.models[index].actions.models,\r\n              function (action) { return action.id === \"zipanddownload\"; });\r\n          if (downloadExists.length > 0) {\r\n            count++;\r\n          }\r\n        }\r\n        if (count > 0 && count === status.nodes.models.length) {\r\n          flag = true;\r\n        }\r\n      }\r\n      return flag;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      this.set('isExecuting', true);\r\n      if (this.stagesModel) {\r\n        delete this.stagesModel;  // to prepare fresh model with new job id\r\n      }\r\n      var nodes = CommandHelper.getAtLeastOneNode(status),\r\n          self  = this;\r\n      this.options = options || {};\r\n      this._deferred = $.Deferred();\r\n      this.connector = this.options.connector ||\r\n                       status.collection && status.collection.connector ||\r\n                       status.container && status.container.connector ||\r\n                       nodes.models && nodes.models[0].connector;\r\n\r\n      require(['csui/controls/globalmessage/globalmessage',\r\n        \"csui/models/zipanddownload/zipanddownload.preflight\",\r\n        \"csui/models/zipanddownload/zipanddownload.stages\",\r\n        \"csui/dialogs/modal.alert/modal.alert\"\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        PreFlightModel = arguments[1];\r\n        StagesModel = arguments[2];\r\n        ModalAlert = arguments[3];\r\n        //Verify the selected nodes will able to zip and download\r\n        //TODO: enable preflight once rest api handles the permissions check\r\n        /*self._preFlightCheck(status, nodes).done(\r\n          function (preFlightModel) {\r\n            if (preFlightModel.get('results').data.jobs.total_skipped > 0) {\r\n              require([\r\n                'csui/controls/zipanddownload/impl/preflight.dialog/preflight.dialog.view'\r\n              ], function (PreflightDialogView) {\r\n                var dialogOptions = {\r\n                  model: preFlightModel,\r\n                  buttons: [\r\n                    {\r\n                      id: 'zipDownload',\r\n                      label: lang.PreFlightDialogBtnContinue,\r\n                      click: _.bind(self.stageAndPrepeareDownload, self, status, nodes, preFlightModel),\r\n                      'default': true\r\n                    },\r\n                    {\r\n                      label: lang.DialogBtnCancel,\r\n                      click: _.bind(self.onClickCancelButton, self)\r\n\r\n                    }\r\n                  ]\r\n                };\r\n                self._showdialogbox(PreflightDialogView, status, nodes, dialogOptions);\r\n              });\r\n            } else {\r\n              self.stageAndPrepeareDownload(status, nodes, preFlightModel);\r\n            }\r\n          });*/\r\n        self.stageAndPrepeareDownload(status, nodes, {});\r\n      });\r\n      // this._deferred.resolve();  // Donot block other actions\r\n      this._deferred.always(function () {\r\n        self.set('isExecuting', false);\r\n      });\r\n      return this._deferred.promise();\r\n    },\r\n\r\n    _preFlightCheck: function (status, nodes) {\r\n      var deferred = $.Deferred();\r\n      var self     = this,\r\n          formData = {\r\n            id_list: nodes.pluck('id'),\r\n            type: 'ZipAndDownload'\r\n          };\r\n      var preFlightModel = new PreFlightModel(formData, status);\r\n      preFlightModel.preflight = true;\r\n      var preflightXHR = preFlightModel.save(formData, {\r\n        silent: true,\r\n        wait: true\r\n      }).done(function () {\r\n        deferred.resolve(preFlightModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, preFlightModel) :\r\n                           error;\r\n        if (error.statusText !== 'abort') {\r\n          ModalAlert.showError(commandError.message, lang.error);\r\n        }\r\n        self._deferred.reject({cancelled: true});\r\n        deferred.reject(preFlightModel, commandError);\r\n      });\r\n      GlobalMessage.showLoader(preflightXHR, {\r\n        label: lang.VerifyZipAndDownloadPrefetch\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getJobId: function (status, nodes) {\r\n      var url         = this.connector.getConnectionUrl().getApiBase('v2'),\r\n          formData    = {\r\n            id_list: nodes.pluck('id'),\r\n            type: 'ZipAndDownload'\r\n          },\r\n          ajaxOptions = {\r\n            url: URL.combine(url, 'zipanddownload'),\r\n            type: 'POST',\r\n            data: formData,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          };\r\n      return this.connector.makeAjaxCall(ajaxOptions);\r\n    },\r\n\r\n    changeStageMessage: function (xhr) {\r\n      // better pass a model to global message loader panel and update that model so that loader\r\n      // panel view re-renders itself\r\n      var currentStage = this.stagesModel && this.stagesModel.get('current_stage') || 0;\r\n      var message = currentStage === 0 ? lang.ExtractingZipAndDownload :\r\n                    (currentStage === 1 ? lang.CompressingZipAndDownload :\r\n                     lang.CleanUpZipAndDownload);\r\n      GlobalMessage.changeLoaderMessage(message, xhr);\r\n    },\r\n\r\n    _checkStage: function (status, jobIdModel, deferred) {\r\n      deferred = deferred || $.Deferred();\r\n      this.stagesModel || (this.stagesModel = new StagesModel(jobIdModel, {\r\n        connector: this.connector\r\n      }));\r\n      var self    = this,\r\n          promise = deferred.promise(),\r\n          xhr     = this.stagesModel.fetch();\r\n      this.changeStageMessage(xhr);\r\n      xhr.done(function () {\r\n        if (self.stagesModel.get('complete')) {\r\n          deferred.resolve(self.stagesModel);\r\n        } else {\r\n          if (self.stagesModel.get('stage_summary').some(function (stage) {\r\n                return !stage.complete;\r\n              })) {\r\n            self.stageCheckTimeout = setTimeout(function () {\r\n              clearTimeout(self.stageCheckTimeout);\r\n              self.stageCheckTimeout = undefined;\r\n              self._checkStage(status, jobIdModel, deferred);\r\n            }, stageInterval);\r\n          } else {\r\n            deferred.resolve(self.stagesModel);\r\n          }\r\n        }\r\n      });\r\n      promise.abort = xhr.abort;   // helper for loader panel view cancel\r\n      return promise;\r\n    },\r\n\r\n    _showdialogbox: function (view, status, nodes, dialogOptions) {\r\n      var self = this;\r\n      // dialog view\r\n      self._dialog = new view(_.extend(dialogOptions, {\r\n        status: status,\r\n        nodes: nodes,\r\n        iconLeft: 'notification_warning'\r\n      }));\r\n      self._dialog.listenTo(self._dialog, 'hide', _.bind(self.onHideDialog, self));\r\n      self._dialog.show();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      if (this._deferred) {\r\n        if (this._deferred.state() === 'pending') {\r\n          this._deferred.reject({cancelled: true});\r\n        }\r\n      }\r\n    },\r\n\r\n    stageAndPrepeareDownload: function (status, nodes, preFlightModel) {\r\n      var self         = this,\r\n          deferred     = $.Deferred(),\r\n          currentStage = self.stagesModel && self.stagesModel.get('current_stage') || 0;\r\n      self._getJobId(status, nodes).done(function (jobIdModel) {\r\n        jobIdModel = jobIdModel.results.data.jobs;\r\n        var checkStage = self._checkStage(status, jobIdModel);\r\n        GlobalMessage.showLoader(checkStage, {\r\n          label: currentStage === 0 ? lang.ExtractingZipAndDownload :\r\n                 (currentStage === 1 ? lang.CompressingZipAndDownload :\r\n                  lang.CleanUpZipAndDownload),\r\n          onDestroy: function (success) {\r\n            if (self.stageCheckTimeout) {\r\n              clearTimeout(self.stageCheckTimeout);\r\n            }\r\n            success ? self._deferred.resolve() : self._deferred.reject();\r\n          }\r\n        });\r\n        checkStage.done(\r\n            function (stagesModel) {\r\n              deferred.resolve();\r\n              if (stagesModel && stagesModel.get('complete') &&\r\n                  stagesModel.get('current_stage') === stagesModel.get('stage_summary').length) {\r\n                require([\r\n                  'csui/controls/zipanddownload/impl/download.dialog/download.dialog.view'\r\n                ], function (DownloadDialogView) {\r\n                  deferred.resolve();\r\n                  var dialogOptions = {\r\n                    model: stagesModel,\r\n                    status: status,\r\n                    //preFlightModel: preFlightModel,\r\n                    buttons: [\r\n                      {\r\n                        id: 'zipDownload',\r\n                        label: lang.DownloadDialogBtnDownload,\r\n                        click: _.bind(function () {\r\n                          //validate the name\r\n                          var archiveName = this._dialog.ui.fileName.val(),\r\n                              isValidName = false;\r\n                          if (/^[\\W]+/.test(archiveName)) {\r\n                            //Allowing download of other languages(non-english)\r\n                            if (/[^\\u0000-\\u007F]/g.test(archiveName)) {\r\n                              isValidName = true;\r\n                            }\r\n                          }\r\n                          if (archiveName.trim().length === 0) {\r\n                            this._dialog.ui.errorEl.html(\r\n                                lang.TheArchiveNameCannotBeEmpty);\r\n                          } else if (archiveName.trim().length > 248) {\r\n                            this._dialog.ui.errorEl.html(\r\n                                lang.TheArchiveNameMaxLength);\r\n                          } else if (archiveName.search(\r\n                                  /[\\?\\:<>\\|\\\"\\\\\\/\\@\\^\\,\\{\\}\\[\\]\\!\\%\\&\\(\\)\\~]/g) !== -1) {\r\n                            this._dialog.ui.errorEl.html(\r\n                                lang.InvalidArchiveCharacters);\r\n                          } else if (/^[\\W]+/.test(archiveName) && !isValidName) {\r\n                            this._dialog.ui.errorEl.html(lang.InvalidArchiveName);\r\n                          } else {\r\n                            if (this._dialog.options.status &&\r\n                                this._dialog.options.status.originatingView) {\r\n                              var toolItem = this._dialog.options.status.originatingView.$el.find(\r\n                                  '[data-csui-command=' + this.get(\"signature\").toLowerCase() +\r\n                                  '] a.binf-disabled');\r\n                              if (toolItem.length > 0) {\r\n                                toolItem.removeClass(\"binf-disabled\");\r\n                              }\r\n                            }\r\n                            if (!/(.)+(.zip)$/i.test(archiveName)) {\r\n                              archiveName += '.zip';\r\n                            }\r\n                            /*  window.open(URL.combine(this.connector.connection.url.replace(/\\/api\\/v[1|2]\\/?/gi, ''),\r\n                             StagesModel.get('link')));  */\r\n                            // Resource interpreted as Document but transferred with MIME type\r\n                            // application/octet-stream:\r\n                            window.location.href = URL.appendQuery(URL.combine(\r\n                                this.connector.connection.url.replace(/\\/api\\/v[1|2]/gi, ''),\r\n                                stagesModel.get('link')),\r\n                                'downloadName=' + encodeURIComponent(archiveName));\r\n                            this._dialog.destroy();\r\n                            delete this._dialog;\r\n                          }\r\n                        }, self),\r\n                        'default': true,\r\n                        disabled: stagesModel.get('total_completed') === 0\r\n                      }, {\r\n                        label: lang.DialogBtnCancel,\r\n                        click: _.bind(self.onClickCancelButton, self)\r\n                      }\r\n                    ]\r\n                  };\r\n                  self._showdialogbox(DownloadDialogView, status, nodes, dialogOptions);\r\n                });\r\n              } else {\r\n                ModalAlert.showError(stagesModel.get('status_formatted'));\r\n              }\r\n            }).fail(function (error) {\r\n          GlobalMessage.showMessage('error', error.statusText);\r\n          deferred.reject(error);\r\n        });\r\n      });\r\n      if (this._dialog) {\r\n        this._dialog.destroy();\r\n        delete this._dialog;\r\n      }\r\n    },\r\n\r\n    onClickCancelButton: function () {\r\n      if (this._dialog.options.status && this._dialog.options.status.originatingView) {\r\n        var toolItem = this._dialog.options.status.originatingView.$el.find(\r\n            '[data-csui-command=' + this.get(\"signature\").toLowerCase() +\r\n            '] a.binf-disabled');\r\n        if (toolItem.length > 0) {\r\n          toolItem.removeClass(\"binf-disabled\");\r\n        }\r\n      }\r\n      this._dialog.destroy();\r\n      delete this._dialog;\r\n    }\r\n  });\r\n  return ZipAndDownloadCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.classic.page',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, Url, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var OpenClassicPageCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      // TODO: Remove this. Commands have to return false from enabled()\r\n      // in this case.\r\n      if (config.classicUnsupported) {\r\n        return this._classicUnsupported(status);\r\n      }\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // TODO: Merge status and options on a higher level\r\n      return this._navigateTo(node, _.extend({}, status, options));\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var connector = node.connector || options.connector,\r\n          url = new Url(connector.connection.url).getCgiScript(),\r\n          urlQuery = this.getUrlQueryParameters(node, options);\r\n      if (urlQuery && !_.isString(urlQuery)) {\r\n        urlQuery = $.param(urlQuery);\r\n      }\r\n      if (urlQuery) {\r\n        url += '?' + urlQuery;\r\n      }\r\n      return url;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n    },\r\n\r\n    openInNewTab: function () {\r\n      return config.openInNewTab;\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: false,\r\n\r\n    _classicUnsupported: function (status) {\r\n      var deferred = $.Deferred();\r\n      status.suppressFailMessage = true;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n        ModalAlert.showInfo(lang.viewTypeUnsupported);\r\n      });\r\n      return deferred.reject();\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url, openInNewTab, shouldCloseTabAfterRedirect,\r\n          config, closeUrl, connection;\r\n\r\n      // If no URL is available, the terminal command can formulate\r\n      // a meaningful message\r\n      try {\r\n        url = this.getUrl(node, options);\r\n      } catch (error) {\r\n        return $\r\n            .Deferred()\r\n            .reject(error)\r\n            .promise();\r\n      }\r\n\r\n      openInNewTab = this.openInNewTab;\r\n      if (_.isFunction(openInNewTab)) {\r\n        openInNewTab = openInNewTab.call(this);\r\n      }\r\n\r\n      shouldCloseTabAfterRedirect = this.shouldCloseTabAfterRedirect;\r\n      if (_.isFunction(shouldCloseTabAfterRedirect)) {\r\n        shouldCloseTabAfterRedirect = shouldCloseTabAfterRedirect.call(this);\r\n      }\r\n\r\n      // Append nextURL parameter pointing to the current or to a\r\n      // self-closing page, when the classic page has been submitted\r\n      if (shouldCloseTabAfterRedirect) {\r\n        // Use the self-closing page, only if a new window is opened;\r\n        // otherwise go back to the current page\r\n        if (openInNewTab) {\r\n          connection = (node.connector || options.connector).connection;\r\n          // Ask for the configuration first here; it can be set later\r\n          // during requiring of other modules\r\n          closeUrl = module.config().closeUrl ||\r\n                     Url.appendQuery( new Url(connection.url).getCgiScript(),\r\n                         'func=csui.closewindow' );\r\n\r\n          if (!new Url(closeUrl).isAbsolute()) {\r\n            if (closeUrl[0] !== '/') {\r\n              closeUrl = Url.appendQuery(\r\n                  new Url(connection.url).getCgiScript(), closeUrl);\r\n            } else {\r\n              closeUrl = Url.combine(\r\n                  new Url(connection.url).getOrigin(), closeUrl);\r\n            }\r\n          }\r\n        } else {\r\n          closeUrl = location.href;\r\n        }\r\n        url = Url.appendQuery(url, Url.combineQueryString({\r\n          nextURL: closeUrl\r\n        }));\r\n      }\r\n\r\n      if (openInNewTab) {\r\n        window\r\n            .open(url, '_blank')\r\n            .focus();\r\n      } else {\r\n        location.href = url;\r\n      }\r\n\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  }, {\r\n    openInNewTab: config.openInNewTab\r\n  });\r\n\r\n  return OpenClassicPageCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'Edit',\r\n      command_key: 'edit',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editactivex',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditActiveX = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditActiveX',\r\n      command_key: 'editactivex',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditActiveX;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editofficeonline',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditOfficeOnline = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditOfficeOnline',\r\n      command_key: 'editofficeonline',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditOfficeOnline;\r\n\r\n});\r\n\n","csui.define('csui/models/perspective/server.adaptor.mixin',[\r\n  'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url'\r\n], function (_, $, Url) {\r\n  'use strict';\r\n\r\n  var ServerAdaptorMixin = {\r\n    mixin: function (prototype) {\r\n      return _.extend(prototype, {\r\n        makeServerAdaptor: function (options) {\r\n          return this;\r\n        },\r\n\r\n        isFetchableDirectly: function () {\r\n          return this.get('id') > 0;\r\n        },\r\n\r\n        urlBase: function () {\r\n          var id  = this.get('id'),\r\n              url = this.connector.connection.url;\r\n          if (!id) {\r\n            // Create a new node by POST /perspectives\r\n            url = Url.combine(url, 'perspectives');\r\n          } else if (!_.isNumber(id) || id > 0) {\r\n            // Access an existing node by VERB /perspectives/:id\r\n            url = Url.combine(url, 'perspectives', id);\r\n          } else {\r\n            throw new Error('Unsupported id value');\r\n          }\r\n          return url;\r\n        },\r\n\r\n        url: function () {\r\n          var url = this.urlBase();\r\n          return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var perspectives = response.perspectives;\r\n          if (!perspectives) {\r\n            // Update response\r\n            return response;\r\n          }\r\n\r\n          if(perspectives.length === 0){\r\n            // Perspectives are empty for GET request\r\n            return {};\r\n          }\r\n          perspectives = _.each(perspectives, function (perspective) {\r\n            perspective.cascading = perspective.cascading + '';\r\n            perspective.containerType = perspective.container_type;\r\n            perspective.constantData = perspective.constant_data;\r\n            perspective.overrideType = perspective.override_type;\r\n            perspective.overrideId = perspective.override_id;\r\n            perspective.nodepath = perspective.node_path;\r\n            perspective.rules = perspective.rule_data;\r\n            perspective.perspective = JSON.parse(perspective.perspective);\r\n            perspective.constant_extraction_mode = perspective.container_type;\r\n            perspective.pnodepath = perspective.perspective_node_path;\r\n          });\r\n          return {\r\n            'perspectives': perspectives\r\n          };\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return ServerAdaptorMixin;\r\n});\r\n  \n","//TODO Check if this should be moved to pman\r\ncsui.define('csui/models/perspective/perspective.template.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  \"csui/models/perspective/server.adaptor.mixin\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/perspective/perspective.model',\r\n  \"csui/utils/log\", \"csui/utils/base\"\r\n], function (module, _, Backbone, ServerAdaptorMixin, UploadableMixin, ConnectableMixin,\r\n    PerspectiveModel, log,\r\n    base) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveTemplateModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveTemplateModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options)\r\n          .makeServerAdaptor(options);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return !!this.get('id');\r\n    },\r\n\r\n    set: function (key, value, options) {\r\n      var attrs;\r\n      if (key == null) {\r\n        return this;\r\n      }\r\n      if (typeof key === 'object') {\r\n        attrs = key;\r\n        options = value;\r\n      } else {\r\n        (attrs = {})[key] = value;\r\n      }\r\n      if (attrs.perspectives) {\r\n        key = 'perspectives';\r\n        var perspectiveCollection = new Backbone.Collection();\r\n        options = _.pick(this.options, ['connector']);\r\n\r\n        _.each(attrs.perspectives, function (perspective) {\r\n          //default 'id' for the current perspective model will be replaced with perspective 'id'\r\n          //later  as models in the collection need to have unique 'id'\r\n          perspectiveCollection.add(new PerspectiveModel(perspective, options));\r\n        });\r\n        value = perspectiveCollection;\r\n        (attrs = {})[key] = value;\r\n      }\r\n      // do the usual set\r\n      return Backbone.Model.prototype.set.call(this, attrs, options);\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveTemplateModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveTemplateModel.prototype);\r\n  ServerAdaptorMixin.mixin(PerspectiveTemplateModel.prototype);\r\n\r\n  return PerspectiveTemplateModel;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.template.model',\r\n  'csui/models/perspective/perspective.model',\r\n  'csui/utils/perspective/perspective.util',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, PerspectiveTemplateModel, PerspectiveModel, PerspectiveUtil, lang) {\r\n  'use strict';\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: true,\r\n    enablePersonalization: true\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory, NodeModelFactory, AncestorCollectionFactory;\r\n\r\n  var EditPerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditPerspective',\r\n      name: lang.EditPerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context     = status.context || options && options.context,\r\n          perspective = context.perspective;\r\n      if (!perspective) {\r\n        return false;\r\n      }\r\n      return this._enablePersonalizePage(perspective, options, context) ||\r\n             this._enableEditPerspective(perspective) ||\r\n             this._enableCreatePerspective(perspective, context);\r\n    },\r\n\r\n    /**\r\n     * Enable \"Personalize Page\" only when\r\n     *  - Current page is Landing Page\r\n     *  - Perspective Type is \"flow\"\r\n     *  - All of the widgets of flow perspective are having \"w_id\".\r\n     *  - Version info available in perspective\r\n     *\r\n     * @param {Backbone.Model} perspective - context.perspective\r\n     * @param {status.options} options\r\n     * @param {PerspectiveContext} context\r\n     */\r\n    _enablePersonalizePage: function (perspective, options, context) {\r\n      var enable = (config.enablePersonalization || options.enablePersonalization) &&\r\n                   !context._applicationScope.get('id') && // Landing Page only\r\n                   perspective.get('type') === 'flow' /** && perspective.has('override') &&\r\n           !!perspective.get('override').perspective_version*/;\r\n      if (!enable) {\r\n        return enable;\r\n      }\r\n      // TODO move this prerequisite check to respective perspective view since it perspective payload varies from type to type\r\n      var perspectiveOptions = perspective.get('options');\r\n      var allWidgetsHasIds = perspectiveOptions &&\r\n                             _.every(perspectiveOptions.widgets, PerspectiveUtil.hasWidgetId);\r\n      return allWidgetsHasIds;\r\n    },\r\n\r\n    _enableEditPerspective: function (perspective) {\r\n      return (perspective.has('id') || perspective.has('perspective_id')) &&\r\n             perspective.get('canEditPerspective');\r\n    },\r\n\r\n    _enableCreatePerspective: function (perspective, context) {\r\n      return !(perspective.has('id') || perspective.has('perspective_id')) &&\r\n             perspective.get('canEditPerspective') &&\r\n             context._applicationScope.get('id') === \"node\";\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred    = $.Deferred(),\r\n          context     = status.context || options && options.context,\r\n          perspective = context.perspective;\r\n\r\n      if (perspective.has('id')) {\r\n        this._fetchPerspective(context, perspective).then(_.bind(function (perspectiveModel) {\r\n          if (perspectiveModel) {\r\n            this._continueExecution(status, options, deferred, perspectiveModel);\r\n          }\r\n        }, this), deferred.reject);\r\n      } else {\r\n        // Create new perspective.\r\n        this._continueExecution(status, options, deferred);\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _continueExecution: function (status, options, deferred, perspectiveModel) {\r\n      var context                 = status.context || options && options.context,\r\n          perspective             = context.perspective,\r\n          enablePersonalization   = this._enablePersonalizePage(perspective, options, context),\r\n          enableEditPerspective   = this._enableEditPerspective(perspective),\r\n          enableCreatePerspective = this._enableCreatePerspective(perspective, context);\r\n      if (enablePersonalization) {\r\n        if (enableEditPerspective || enableCreatePerspective) {\r\n          this._promptToChooseEditPage(status, options, context, deferred, perspectiveModel);\r\n        } else {\r\n          this._doPersonalizePage(status, options, context, deferred);\r\n        }\r\n      } else {\r\n        this._doEditPage(status, options, context, deferred, perspectiveModel);\r\n      }\r\n    },\r\n\r\n    _fetchPerspective: function (context, perspective) {\r\n      var deferred      = $.Deferred(),\r\n          perspectiveId = perspective.get('id') ||\r\n                          perspective.get('perspective_id');\r\n      require(['csui/utils/contexts/factories/connector', 'csui/dialogs/modal.alert/modal.alert'],\r\n          _.bind(function (ConnectorFactory, alertDialog) {\r\n            var perspectiveTemplate = new PerspectiveTemplateModel(\r\n                {id: perspectiveId},\r\n                {connector: context.getObject(ConnectorFactory)});\r\n            perspectiveTemplate.fetch().then(_.bind(function () {\r\n              var allPerspectives = perspectiveTemplate.get('perspectives');\r\n              if (allPerspectives && allPerspectives.length != 1) {\r\n                //show warning dialog as the perspective template is used by multiple nodes\r\n                alertDialog.showError(lang.editPerspectiveErrorMessage)\r\n                    .done(function () {\r\n                      deferred.resolve();\r\n                    })\r\n                    .fail(deferred.reject);\r\n              } else {\r\n                deferred.resolve(allPerspectives.at(0));\r\n              }\r\n\r\n            }, this), deferred.reject);\r\n          }, this));\r\n      return deferred.promise();\r\n    },\r\n\r\n    _doPersonalizePage: function (status, options, context, deferred) {\r\n      require(['csui/perspective.manage/pman.view', 'csui/utils/contexts/factories/node',\r\n            'csui/models/perspective/personalization.model', 'csui/utils/contexts/factories/connector',\r\n            'csui/utils/contexts/factories/application.scope.factory',\r\n            'csui/utils/contexts/factories/user'],\r\n          function (PManView, NodeModelFactory, PersonalizationModel, ConnectorFactory,\r\n              ApplicationScopeModelFactory, UserModelFactory) {\r\n            var applicationScope = context.getModel(ApplicationScopeModelFactory),\r\n                sourceModel;\r\n            if (applicationScope.id == 'node') {\r\n              sourceModel = CommandHelper.getJustOneNode(status) ||\r\n                            context.getModel(NodeModelFactory);\r\n            } else {\r\n              sourceModel = context.getModel(UserModelFactory);\r\n            }\r\n            var currentPerspective = sourceModel.get('perspective'),\r\n                overrideInfo       = currentPerspective.override,\r\n                defPersonal        = _.pick(currentPerspective, 'type', 'options',\r\n                    'perspective_version',\r\n                    'perspective_id');\r\n            defPersonal = _.defaults(defPersonal,\r\n                _.pick(overrideInfo, 'perspective_version', 'perspective_id'));\r\n            defPersonal.perspective_id = defPersonal.perspective_id ||\r\n                                         currentPerspective.id;\r\n            var personalization = new PersonalizationModel({},\r\n                {\r\n                  context: context,\r\n                  connector: context.getObject(ConnectorFactory),\r\n                  sourceModel: sourceModel,\r\n                  perspective: currentPerspective,\r\n                });\r\n            personalization.setPerspective(defPersonal);\r\n            PersonalizationModel.loadPersonalization(sourceModel, context).then(\r\n                function (result) {\r\n                  if (!!result) {\r\n                    personalization.setPerspective(result);\r\n                  }\r\n                  var pmanView = new PManView({\r\n                    context: context,\r\n                    perspective: personalization,\r\n                    mode: PerspectiveUtil.MODE_PERSONALIZE\r\n                  });\r\n                  pmanView.show();\r\n                  deferred.resolve();\r\n                });\r\n          }, deferred.reject);\r\n    },\r\n\r\n    _doEditPage: function (status, options, context, deferred, perspectiveModel) {\r\n      if (this._enableEditPerspective(context.perspective)) {\r\n        this._doEditPerspective(status, options, context, deferred, perspectiveModel);\r\n      } else if (this._enableCreatePerspective(context.perspective, context)) {\r\n        this._doCreatePerspective(status, options, context, deferred);\r\n      }\r\n    },\r\n\r\n    _doCreatePerspective: function (status, options, context, deferred) {\r\n      var isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        this._createInline(status, options, context, deferred);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        this._createInClassicPMan(status, options, context, deferred);\r\n      }\r\n    },\r\n\r\n    _doEditPerspective: function (status, options, context, deferred, perspectiveModel) {\r\n      var isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        this._editInline(perspectiveModel, context, deferred);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        this._editInClassicPMan(status, options, context, deferred);\r\n      }\r\n    },\r\n\r\n    _promptToChooseEditPage: function (status, options, context, deferred, perspectiveModel) {\r\n      var self = this;\r\n      //   deferred = $.Deferred();\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n        self.dialog = alertDialog.confirmQuestion(lang.editPageDialogMessage,\r\n            lang.editPageTitle,\r\n            {\r\n              buttons: {\r\n                showYes: true,\r\n                labelYes: lang.editPageButton,\r\n                showNo: true,\r\n                labelNo: lang.personalizePageButton,\r\n                showCancel: true,\r\n                labelCancel: lang.editPageCancelButton\r\n              },\r\n            }).then(function (result) {\r\n          if (result === true) {\r\n            // Edit Page\r\n            self._doEditPage(status, options, context, deferred, perspectiveModel);\r\n          }\r\n        }, function (result) {\r\n          if (result === false) {\r\n            // Personalize Page\r\n            self._doPersonalizePage(status, options, context, deferred);\r\n          } else {\r\n            // Cancel\r\n            deferred.resolve();\r\n          }\r\n        });\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _editInline: function (perspectiveModel, context, deferred) {\r\n      require(['csui/perspective.manage/pman.view'],\r\n          function (PManView) {\r\n            var perspectiveId = context.perspective.get('id') ||\r\n                                context.perspective.get('perspective_id');\r\n            var currentPerspective = perspectiveModel;\r\n            currentPerspective.set('id', perspectiveId);\r\n            var pmanView = new PManView({\r\n              context: context,\r\n              perspective: currentPerspective\r\n            });\r\n            pmanView.show();\r\n            deferred.resolve();\r\n          }, deferred.reject);\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context, deferred) {\r\n      var self = this;\r\n      require(['csui/utils/contexts/factories/connector'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        var f = self._getEditForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _getEditForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getEditUrlQueryParameters(context);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getEditUrlQueryParameters: function (context) {\r\n      var perspective_id = context.perspective.attributes.id,\r\n          parameters;\r\n      if (perspective_id !== undefined && perspective_id > 0) {\r\n        parameters = {\r\n          perspective_id: perspective_id\r\n        };\r\n      } else {\r\n        parameters = {};\r\n      }\r\n      return parameters;\r\n    },\r\n\r\n    /**\r\n     * Prepare new perspective config required for current node since no perspective is configured yet.\r\n     */\r\n    _preparePerspectiveConfig: function (context) {\r\n      var perspectiveConfig = {\r\n            \"perspective\": {\r\n              \"type\": \"flow\",\r\n              \"options\": {\r\n                \"widgets\": [\r\n                  {\r\n                    \"type\": \"csui/widgets/nodestable\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"overrideType\": \"genericContainer\",\r\n            \"scope\": \"local\",\r\n            \"containerType\": \"-1\",\r\n            \"cascading\": \"false\"\r\n          },\r\n          node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n          collection        = context.getCollection(AncestorCollectionFactory);\r\n      perspectiveConfig.nodepath = this._getNodePath(collection);\r\n      perspectiveConfig.node = node.get('id');\r\n      perspectiveConfig.containerType = node.get('type');\r\n      perspectiveConfig.title = node.get('name');\r\n      return perspectiveConfig;\r\n    },\r\n\r\n    _createInline: function (status, options, context, deferred) {\r\n      var self = this;\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/ancestors',\r\n        'csui/perspective.manage/pman.view'\r\n      ], function () {\r\n        NodeModelFactory = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var PManView          = arguments[3],\r\n            // Create new perspective\r\n            perspectiveConfig = self._preparePerspectiveConfig(context, NodeModelFactory,\r\n                AncestorCollectionFactory);\r\n        // Append current timestamp to avoid name conflicts in perspective volume\r\n        perspectiveConfig.title = perspectiveConfig.title + ' ' + new Date().getTime();\r\n        var perspective = new PerspectiveModel(perspectiveConfig,\r\n            {connector: context.getObject(ConnectorFactory)});\r\n        var pmanView = new PManView({\r\n          context: context,\r\n          perspective: perspective\r\n        });\r\n        pmanView.show();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _createInClassicPMan: function (status, options, context, deferred) {\r\n      var self = this;\r\n      require(['csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/ancestors'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var f = self._getCreateForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n    },\r\n\r\n    _getCreateForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getCreateUrlQueryParameters(context, status);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getCreateUrlQueryParameters: function (context, status) {\r\n      var perspectiveConfig = this._preparePerspectiveConfig(context, NodeModelFactory,\r\n          AncestorCollectionFactory);\r\n      perspectiveConfig.ui = {\r\n        \"elements\": {\r\n          \"btn-mode-code\": true,\r\n          \"btn-view-general\": true,\r\n          \"btn-view-rules\": false,\r\n          \"btn-view-layout\": true,\r\n          \"btn-view-widgets\": true,\r\n\r\n          \"view-perspective-action\": true,\r\n          \"perspective-action-create\": true,\r\n          \"perspective-action-edit\": true,\r\n          \"perspective-action-copy\": true,\r\n\r\n          \"view-perspective-form\": true,\r\n          \"perspective-title\": true,\r\n          \"perspective-type\": true,\r\n          \"perspective-scope\": true,\r\n          \"perspective-nodetypes\": true,\r\n          \"perspective-node\": true,\r\n          \"perspective-cascading\": true,\r\n\r\n          \"display-size-msg\": false,\r\n          \"rules-code\": true,\r\n\r\n          \"layout-flow\": true,\r\n          \"layout-left-center-right\": true,\r\n          \"layout-grid\": false,\r\n          \"layout-tabbed\": false\r\n        },\r\n        \"widgetGroupsBlacklist\": [],\r\n        \"widgetsWhitelist\": [],\r\n        \"disableGrouping\": false\r\n      };\r\n      return {\r\n        config: JSON.stringify(perspectiveConfig)\r\n      };\r\n    },\r\n\r\n    _getNodePath: function (collection) {\r\n      var nodepath = \"\";\r\n      collection.each(function (model) {\r\n        nodepath += nodepath ? ':' : '';\r\n        nodepath += model.get('name');\r\n      });\r\n      return nodepath;\r\n    }\r\n\r\n  });\r\n\r\n  return EditPerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/editwebdav',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditWebDAV = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditWebDAV',\r\n      command_key: 'editwebdav',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditWebDAV;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/lang',{\r\n\r\n  // Share\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/email.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/node.info.sprites',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Url, CommandError, CommandModel,\r\n    CommandHelper, publicLang, lang, extraLinksInfo) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    rewriteApplicationURL: false,\r\n    enableAppleSupport: false,\r\n    appleNodeLinkBase: 'x-otm-as-cs16://?launchUrl=nodes/'\r\n  }, module.config());\r\n\r\n  var nodeLinks,\r\n      NEW_LINE = '\\n'; // constant variable to add new line.\r\n\r\n  var EmailLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EmailLink',\r\n      name: lang.CommandNameEmailLink,\r\n      verb: lang.CommandVerbEmailLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      return nodes && nodes.length;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/node.links/node.links'], function () {\r\n        nodeLinks = arguments[0];\r\n        // TODO: Share the node e-mail link gathering code and the e-mail\r\n        // formatting code by creating a new module for it\r\n        var nodes          = CommandHelper.getAtLeastOneNode(status),\r\n            context        = status.context || (options && options.context),\r\n            applicationUrl = this._getApplicationUrl(nodes, context),\r\n            body           = this._getNodesLinks(nodes, applicationUrl, context),\r\n            newHref        = 'mailto:?subject=' + this._getEMailSubject(nodes) +\r\n                             '&body=' + encodeURIComponent(body),\r\n            error          = this._openNewHref(newHref);\r\n        if (error) {\r\n          deferred.reject(error);\r\n        } else {\r\n          deferred.resolve();\r\n        }\r\n      }.bind(this), deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getEMailSubject: function(nodes) {\r\n      var title = \" \";\r\n      if (nodes && nodes.length === 1) {\r\n        title = nodes.first().get('name');\r\n      }\r\n      return encodeURIComponent(title);\r\n    },\r\n\r\n    _getApplicationUrl: function (nodes) {\r\n      var connector = nodes.first().connector;\r\n      return Url.combine(new Url(connector.connection.url).getCgiScript(), '/app');\r\n    },\r\n\r\n    _openNewHref: function (newHref) {\r\n      if (newHref.length > 2048) {\r\n        return new CommandError(lang.EmailLinkCommandFailedWithTooMuchItemsErrorMessage);\r\n      } else {\r\n        window.location.href = newHref;\r\n      }\r\n    },\r\n\r\n    _getNodesLinks: function (nodes, applicationUrl, context) {\r\n\r\n      var viewStateModel = context && context.viewStateModel,\r\n          currentRouter = viewStateModel && viewStateModel.get('activeRouterInstance'),\r\n          urlParams = currentRouter && currentRouter.buildUrlParams();\r\n\r\n      var iOSEnabled  = config.enableAppleSupport,\r\n          iOSText     = lang.EmailAppleLinkFormat,\r\n          androidText = publicLang.EmailLinkDesktop + NEW_LINE,\r\n          desktopText = nodes.map(function (node) {\r\n            var name         = node.get('name') + \":\",\r\n                actionUrl    = nodeLinks.getUrl(node),\r\n                nodeLinkInfo = '';\r\n            \r\n            if (urlParams) {\r\n              actionUrl += '?' + urlParams;\r\n            }\r\n\r\n            if (config.rewriteApplicationURL) {\r\n              // This disallows using the hash part, when the slash-based routing is enabled.\r\n              // But it should be no problem, because it is temporary for the mobile\r\n              // application only. and it didn't offer such contract for the old scenarios.\r\n              var hash = actionUrl.lastIndexOf('#');\r\n              if (hash >= 0) {\r\n                actionUrl = applicationUrl + '/' + actionUrl.substr(hash + 1);\r\n              }\r\n            }\r\n\r\n            if (iOSEnabled) {\r\n              // This is not the node ID returned by nodeLinks.getUrl.\r\n              // There is no extensibility applied, which can happen there.\r\n              // I am not sure, if it is worth to fix it.\r\n              var nodeId = (node.get('type') === 1) ? node.original.get('id') : node.get('id');\r\n              iOSText += NEW_LINE + name + NEW_LINE + config.appleNodeLinkBase +\r\n                         nodeId;\r\n            }\r\n\r\n            nodeLinkInfo = name + NEW_LINE + actionUrl;\r\n\r\n            if (extraLinksInfo) {\r\n              extraLinksInfo.each(function (extraLinkInfo) {\r\n                // TODO: need to check what parameters to be include in nodeLinksOptions\r\n                var nodeLinksOptions = {\r\n                      NEW_LINE: NEW_LINE,\r\n                      context: context,\r\n                      node: node\r\n                    },\r\n                    extraInfo        = '';\r\n                try {\r\n                  extraInfo = $.trim(extraLinkInfo.get('getCustomUrl')(nodeLinksOptions));\r\n                } catch (error) {\r\n                  console.error(error);\r\n                }\r\n                nodeLinkInfo += extraInfo.length ? (NEW_LINE + extraInfo + NEW_LINE) : '';\r\n              });\r\n            }\r\n\r\n            return nodeLinkInfo;\r\n          }).join(NEW_LINE);\r\n\r\n      return iOSEnabled ? androidText + desktopText + NEW_LINE + NEW_LINE + iOSText : desktopText;\r\n\r\n    }\r\n  });\r\n\r\n  return EmailLinkCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/execute.saved.query',[\r\n  'require', 'csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var ExecuteSavedQueryCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ExecuteSavedQuery',\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 258\r\n             // If the object data does not contain the open-ability flag, consider\r\n             // the object open-able for compatibility with older REST API.\r\n             && node.get('openable') !== false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node    = CommandHelper.getJustOneNode(status),\r\n          context = status.context || options && options.context;\r\n      if (node.get('custom_view_search')) {\r\n        // Custom Search has form created and assigned to it. Open from in sidepanel\r\n        return this._openFormInSidepanel(node, context);\r\n      } else {\r\n        this._triggerSearchResults(node, context);\r\n      }\r\n    },\r\n\r\n    _triggerSearchResults: function (node, context) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/contexts/factories/search.query.factory'\r\n      ], function (SearchQueryModelFactory) {\r\n        var searchQuery = context.getModel(SearchQueryModelFactory);\r\n        searchQuery.clear({silent: true});\r\n        searchQuery.set('query_id', node.get('id'));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openFormInSidepanel: function (node, context) {\r\n      var deferred = $.Deferred();\r\n      require(\r\n          ['csui/controls/side.panel/side.panel.view',\r\n            'csui/widgets/search.custom/impl/search.object.view',\r\n            'csui/widgets/search.custom/impl/search.customquery.factory'],\r\n          function (SidePanelView, SearchCustomObjectView, SearchCustomQueryFactory) {\r\n            var savedQuery = context.getCollection(SearchCustomQueryFactory, {\r\n              attributes: {\r\n                id: node.get('id')\r\n              }\r\n            });\r\n            savedQuery.ensureFetched().then(function () {\r\n              var schema = savedQuery.get('schema'),\r\n                  title  = schema.title ? schema.title : node.get('name');\r\n\r\n              var customSearchForm = new SearchCustomObjectView({\r\n                context: context,\r\n                model: savedQuery,\r\n                savedSearchQueryId: node.get('id'),\r\n                hideSearchButton: true,\r\n                showInSearchResultsNewPerspective: true\r\n              });\r\n\r\n              var sidePanel = new SidePanelView({\r\n                slides: [{\r\n                  title: title,\r\n                  content: customSearchForm,\r\n                  footer: {\r\n                    buttons: [{\r\n                      label: lang.searchButtonMessage,\r\n                      type: 'action',\r\n                      id: 'search-btn',\r\n                      className: 'binf-btn binf-btn-primary',\r\n                      disabled: false\r\n                    }]\r\n                  }\r\n                }],\r\n                sidePanelClassName: 'cvs-in-sidepanel'\r\n              });\r\n              customSearchForm.listenTo(customSearchForm, 'render:form', function() {\r\n                sidePanel.triggerMethod('set:focus');\r\n              });\r\n              sidePanel.show();\r\n              sidePanel.listenTo(customSearchForm, \"button:click\", function (actionButton) {\r\n                if (actionButton.id === 'search-btn') {\r\n                  customSearchForm.loadCustomSearch();\r\n                }\r\n                sidePanel.hide();\r\n              });\r\n\r\n              sidePanel.listenTo(customSearchForm, 'enable:search', function (isSearchEnabled) {\r\n                customSearchForm.trigger(\"update:button\", \"search-btn\", {\r\n                  disabled: !isSearchEnabled\r\n                });\r\n              });\r\n\r\n              sidePanel.listenTo(customSearchForm, 'click:search', function () {\r\n                // Close Side panel when search triggered from CVS as it would navigate to search result.\r\n                sidePanel.hide();\r\n              });\r\n              deferred.resolve();\r\n            })\r\n                .fail(function () {\r\n                  deferred.reject();\r\n                });\r\n          }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ExecuteSavedQueryCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.add',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var FavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"Favorite\",\r\n      command_key: ['favorite', 'favorite'],\r\n      scope: \"single\",\r\n      name: lang.CommandNameFavorite,\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandDoneVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && !status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && !nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.addToFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', true);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(new CommandError(err));\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return FavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.remove',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var NonFavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"NonFavorite\",\r\n      command_key: ['nonfavorite', 'NonFavorite'],\r\n      scope: \"single\",\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandRemovedVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.removeFromFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', false);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n          .fail(function (err) {\r\n            deferred.reject(new CommandError(err));\r\n          });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return NonFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/inlineedit',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var InlineEditCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"InlineEdit\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/inlineform.factory'\r\n      ], function (inlineFormViewFactory) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n        var inlineFormView = inlineFormViewFactory.getInlineFormView(node.get('type'));\r\n        if (!inlineFormView) {\r\n          // fallback to generic for rename action\r\n          inlineFormView = inlineFormViewFactory.getInlineFormView(-1);\r\n        }\r\n        if (inlineFormView) {\r\n          node.inlineFormView = inlineFormView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n        }\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(InlineEditCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return InlineEditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/move',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/utils/url', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/multiple.items'\r\n], function (module, require, _, $, lang, log, Url, CommandModel,\r\n    CommandHelper, CommandError, MultipleItemsCommand) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3,\r\n    actionType: 'MOVE',\r\n    allowMultipleInstances: true\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver, TaskQueue,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, nodeLinks;\r\n\r\n  // create a helper parent where we can derive from and do additional function modifications\r\n  var MoveCommandParent = CommandModel.extend({});\r\n  _.extend(MoveCommandParent.prototype, MultipleItemsCommand);     // apply needed mixin\r\n\r\n  var MoveCommand = MoveCommandParent.extend({\r\n    defaults: {\r\n      signature: \"Move\",\r\n      command_key: ['move', 'Move'],\r\n      name: lang.CommandNameMove,\r\n      verb: lang.CommandNameVerbMove,\r\n      pageLeavingWarning: lang.MovePageLeavingWarning,\r\n      allowMultipleInstances : config.allowMultipleInstances,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemSuccessMessage,\r\n        formatForTwo: lang.MoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.MoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemFailMessage,\r\n        formatForTwo: lang.MoveSomeItemsFailMessage,\r\n        formatForFive: lang.MoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    execute: function (status, options) {\r\n      var self             = this,\r\n          deferred         = $.Deferred(),\r\n          context          = status.context || options && options.context,\r\n          uploadFileModels = [];\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        ApplyPropertiesSelectorView = arguments[3];\r\n        UploadFileCollection = arguments[4];\r\n        PageLeavingBlocker = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n        nodeLinks = arguments[7];\r\n        if (GlobalMessage.isActionInProgress(config.actionType, lang.MoveNotAllowed, lang.CommandTitleMove)) {\r\n          return deferred.resolve();\r\n        }\r\n        self._selectMoveOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var applyProperties = selectedOptions.applyProperties;\r\n              var bundleNumber = new Date().getTime(); \r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false,\r\n                  bundleNumber : bundleNumber\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                returnObj.targetLocation = {\r\n                  id : targetFolder.get('id'),\r\n                  url : nodeLinks.getUrl(targetFolder)\r\n                };\r\n                return returnObj;\r\n              });\r\n              var moveNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, moveNamesToResolve)\r\n                  .done(function (moveInstructions) {\r\n\r\n                    _.each(moveInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(moveInstructions,\r\n                        _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(moveInstructions, {\r\n                            container: targetFolder ? targetFolder.clone() : undefined\r\n                          });\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n\r\n                          uploadCollection.each(function (model) {\r\n                            model.node = selectedNodes.findWhere({\r\n                              id: model.get('id')\r\n                            });\r\n                          });\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n                          self._moveSelectedNodes(uploadCollection, connector,\r\n                              targetFolder, applyProperties, status, context)\r\n                              .done(function (promises) {\r\n                                if (promises.length) {\r\n                                  var msgOptions = {\r\n                                    context: context,\r\n                                    nextNodeModelFactory: NextNodeModelFactory,\r\n                                    link_url: nodeLinks.getUrl(targetFolder),\r\n                                    targetFolder: targetFolder\r\n                                  };\r\n                                }\r\n                                //Remove uploadable nodes, not selected items\r\n                                uploadCollection.models && uploadCollection.models.length > 0 &&\r\n                                _.each(uploadCollection.models, function (filemodel) {\r\n                                  uploadFileModels.push(filemodel.node);\r\n                                });\r\n                                // status.collection can be undefined; for example: go to Properties\r\n                                // dropdown menu of the current folder in table header, then use the\r\n                                // Move command from the item's dropdown menu in Properties view.\r\n                                status.collection && status.collection.remove(uploadFileModels);     // remove only processed nodes and not all selected\r\n                                //to refetch collection in table View\r\n                                self.allowCollectionRefetch = true;\r\n                                deferred.resolve(uploadFileModels);\r\n                              })\r\n                              .always(function () {\r\n                                self._announceOperationEnd(status);\r\n                                context.trigger('current:folder:changed');\r\n                              })\r\n                              .fail(function () {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail(function () {\r\n                          self._announceOperationEnd(status);\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {   // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                        \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    }\r\n                    else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status);\r\n                    deferred.reject();                  // empty promise\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if (error && !error.cancelled) {                           // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);              // require\r\n\r\n      return deferred.promise();        // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    },\r\n\r\n    _selectMoveOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodeDestinationPicker) {\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ? (status.container.get('id') ===\r\n                                                      status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(\r\n                numNodes > 1 ? lang.DialogTitleMove : lang.DialogTitleSingleMove, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: 'move',\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              addableTypes: [0], // Allowing folders to add from picker. Revisit when LPAD-61637 done.\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.nodes.models[0].parent &&\r\n                                status.nodes.models[0].parent.get('id') > 0 ?\r\n                                status.nodes.models[0].parent : status.container,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true,\r\n              includeResources:['show_hidden']\r\n            }, status);\r\n\r\n            self.nodePicker = new NodeDestinationPicker(pickerOptions);\r\n            self.originatingView = status.originatingView;\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames) {\r\n      var h1 = nodeNames.length === 1 ? lang.MovingNode :\r\n               _.str.sformat(lang.MovingNodes, nodeNames.length);\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: lang.CommandNameMove,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames,\r\n        originatingView: this.originatingView\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, options) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView && this.originatingView._blockingCounter === 0 &&\r\n      this.originatingView.blockActions();\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = 'move';\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _moveSelectedNodes: function (uploadCollection, connector, targetFolder, applyProperties, status,\r\n      context) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var promise,\r\n                    attributes = model.attributes;\r\n                if (attributes.extended_data && attributes.extended_data.roles) {\r\n                  // metadata was already set interactively by the user via MetadataView\r\n                  promise = self._moveNodeWithMetadata(attributes, connector,\r\n                      targetFolder.get('id'), applyProperties);\r\n                } else {\r\n                  promise = self._moveNode(attributes, connector, targetFolder.get('id'),\r\n                      applyProperties);\r\n                }\r\n                promise\r\n                    .done(function () {\r\n                      model.set('count', 1);\r\n                      model.deferred.resolve(model);\r\n                      deferred.resolve(model);\r\n                    })\r\n                    .fail(function (cause) {\r\n                      var errObj = new CommandError(cause);\r\n                      model.deferred.reject(model, errObj);\r\n                      deferred.reject(errObj);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            return deferred.promise(promises);      // return promises\r\n          });\r\n\r\n      GlobalMessage.showProgressPanel(uploadCollection, {\r\n        oneFileTitle: lang.MovingOneItem,\r\n        oneFileSuccess: lang.MoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.MoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.MovingOneItem,\r\n        multiFilePending: lang.MovingItems,\r\n        oneFileFailure: lang.MoveOneItemFailMessage,\r\n        multiFileFailure: lang.MoveManyItemsFailMessage,\r\n        someFileSuccess: lang.MoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.MovingSomeItems,\r\n        someFileFailure: lang.MoveSomeItemsFailMessage,\r\n        locationLabelPending : lang.MovingLocationLabel,\r\n        locationLabelCompleted: lang.MovedLocationLabel,\r\n        enableCancel: false,\r\n        actionType: config.actionType,\r\n        allowMultipleInstances : config.allowMultipleInstances,\r\n        context: context,\r\n        nextNodeModelFactory: NextNodeModelFactory\r\n      });\r\n      this._announceOperationEnd(status);\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _moveNodeWithMetadata: function (instruction, connector, targetFolderID, applyProperties) {\r\n      var self = this;\r\n      var bodyParam;\r\n      var moveOptions;\r\n\r\n      bodyParam = {\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": instruction.extended_data.roles\r\n      };\r\n      moveOptions = {\r\n        url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/', instruction.id),\r\n        method: 'PUT',\r\n        data: bodyParam,\r\n        contentType: connector.getAjaxContentType()\r\n      };\r\n\r\n      return connector.makeAjaxCall(moveOptions);\r\n    },\r\n\r\n    _moveNode: function (instruction, connector, targetFolderID, applyProperties) {\r\n      var self = this;\r\n\r\n      return this._getCategories(connector, instruction.id, targetFolderID)\r\n          .then(function (categories) {\r\n            var categoryGroupMapping;\r\n            var bodyParam;\r\n            var moveOptions;\r\n\r\n            categoryGroupMapping = {};\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n\r\n            bodyParam = {\r\n              \"parent_id\": targetFolderID,\r\n              \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n              \"roles\": {\r\n                \"categories\": categories[categoryGroupMapping[applyProperties]]\r\n              }\r\n            };\r\n            moveOptions = {\r\n              url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/',\r\n                  instruction.id),\r\n              method: 'PUT',\r\n              data: bodyParam,\r\n              contentType: connector.getAjaxContentType()\r\n            };\r\n\r\n            return connector.makeAjaxCall(moveOptions);\r\n          });\r\n    },\r\n\r\n    _getCategories: function (connector, nodeID, targetFolderID) {\r\n      var getCategoriesOptions = {\r\n        url: connector.connection.url + '/forms/nodes/move?' +\r\n             $.param({\r\n               id: nodeID,\r\n               parent_id: targetFolderID\r\n             })\r\n      };\r\n\r\n      return connector.makeAjaxCall(getCategoriesOptions)\r\n          .then(function (response, statusText, jqxhr) {\r\n            var form = response.forms[1];\r\n            return form && form.data || {};\r\n          });\r\n    }\r\n  });\r\n\r\n  return MoveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/navigate',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'csui/models/node/node.model', 'csui/utils/node.links/node.links'\r\n], function (module, _, $, base, CommandHelper, CommandModel, NodeModel,\r\n    nodeLinks) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var NavigateCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Navigate'\r\n    },\r\n\r\n    // As long as you can see the URL object, you can navigate to the target\r\n    // URL stored on it.\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 140;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return this._navigateTo(node, options);\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url = node.get('url'),\r\n          promise = $.Deferred(),\r\n          content;\r\n\r\n      function finish() {\r\n        content || (content = window);\r\n        content.location.href = nodeLinks.completeUrl(node, url);\r\n        content.focus();\r\n        promise.resolve();\r\n      }\r\n\r\n      if (config.openInNewTab) {\r\n        content = window.open('', '_blank');\r\n      }\r\n      if (url) {\r\n        finish();\r\n      } else {\r\n        // The node model does not contain the URL information; not every\r\n        // REST API call may return it, unfortunately.\r\n        node = new NodeModel({id: node.get('id')}, {\r\n          connector: node.connector,\r\n          fields: {\r\n            properties: ['url']\r\n          }\r\n        });\r\n        node.fetch()\r\n            .done(function () {\r\n              url = node.get('url');\r\n              if (url) {\r\n                finish();\r\n              } else if (content) {\r\n                content.close();\r\n              }\r\n            })\r\n            .fail(function (request) {\r\n              if (content) {\r\n                content.close();\r\n              }\r\n              promise.reject(new base.Error(request));\r\n            });\r\n      }\r\n      return promise.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return NavigateCommand;\r\n});\r\n\n","\n","csui.define('csui/utils/commands/open.plugins/open.plugins',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  // Load and register external document opening plugin rules\r\n  'csui-ext!csui/utils/commands/open.plugins/open.plugins'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var OpenPluginModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      plugin: null\r\n    },\r\n\r\n    constructor: function OpenPluginModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(OpenPluginModel.prototype);\r\n\r\n  var OpenPluginCollection = Backbone.Collection.extend({\r\n    model: OpenPluginModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function OpenPluginCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, options) {\r\n      var openInNewTab, widgetOnly;\r\n      if (options) {\r\n        openInNewTab = options.openInNewTab;\r\n        widgetOnly = options.widgetOnly;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        var plugin = item.get('plugin');\r\n        // Plugins opening a full page can be used in both\r\n        // the current and a new windows, unless a widget\r\n        // was requested.\r\n        return (widgetOnly !== true &&\r\n                (plugin.openWindow || plugin.getUrl ||\r\n                plugin.getUrlQuery) ||\r\n                // Plugins supporting only a widget mode can be\r\n                // opened in the current window only (for now).\r\n                widgetOnly !== false && openInNewTab !== true &&\r\n                (plugin.openWidget || plugin.createWidget)\r\n               ) && item.matchRules(node, item.attributes);\r\n      });\r\n      return rule && rule.get('plugin');\r\n    }\r\n  });\r\n\r\n  var openPlugins = new OpenPluginCollection();\r\n\r\n  if (rules) {\r\n    openPlugins.add(_.chain(rules)\r\n                     .flatten(true)\r\n                     .map(function (rule) {\r\n                       return _.defaults({\r\n                         plugin: new rule.plugin()\r\n                       }, rule);\r\n                     })\r\n                     .value());\r\n  }\r\n\r\n  return openPlugins;\r\n});\r\n\n","csui.define('csui/utils/commands/open',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/models/node.actions', 'csui/utils/commandhelper', 'csui/utils/commands/download',\r\n  'csui/utils/commands/open.plugins/open.plugins'\r\n], function (module, require, _, $, Url, NodeActionCollection, CommandHelper, DownloadCommand, openPlugins) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    // If overridden, true will always open a new window,\r\n    // false will always use the current window.\r\n    openInNewTab: null,\r\n\r\n    // If overridden, true will always download the document;\r\n    // opening it in the viewer or natively will not be offered.\r\n    forceDownload: false\r\n  }, module.config());\r\n\r\n  var openAuthenticatedPage, NextNodeModelFactory;\r\n\r\n  var OpenCommand = DownloadCommand.extend({\r\n    defaults: {\r\n      signature: 'Open',\r\n      // Open has a different UI behaviour than download, but both are about\r\n      // the content access, which decide the permission.  There is no\r\n      // 'open-document' action anyway in the current REST API response.\r\n      command_key: ['default', 'open', 'download', 'Download'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // Allow only a single node to be opened.\r\n      if (!node) {\r\n        return false;\r\n      }\r\n      // TODO: Ask for content:true to be added to the REST API. They added\r\n      // versionable:true, which will be great for the version history enabling,\r\n      // but not for content opening, because containers can be versionable too.\r\n      // TODO: Move E-mail and Drawing to their modules\r\n      var type = node.get('type');\r\n      if (!(type && _.contains(['144', '749', '736'], type.toString()))) {\r\n        return false;\r\n      }\r\n      // TODO: Deprecate this command in favour of OpenDocument. Introduce a new\r\n      // OpenDocumentContent command, which will check permissions properly.\r\n      // Permitted actions for content access are not checked here! This was\r\n      // the usability compromise done when \"fast-browsing\" was introduced.\r\n      // The permissions are checked before the execution. If they are missing,\r\n      // the document perspective will be opened instead of the content, which\r\n      // is not what the Open command originally did. It is what the\r\n      // configurable OpenDocument command does.\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = this._getNode(status);\r\n\r\n      if (config.forceDownload) {\r\n        return this._downloadContent(node, options, 'download');\r\n      }\r\n\r\n      var plugin = openPlugins.findByNode(node, {\r\n        openInNewTab: config.openInNewTab\r\n      });\r\n\r\n      if (plugin) {\r\n        return this._checkPermission(node)\r\n            .then(function (permitted) {\r\n              return permitted ? this._openContent(node, options, plugin)\r\n                  : this._showOverview(node, options);\r\n            }.bind(this));\r\n      }\r\n\r\n      return this._downloadContent(node, options, 'download');\r\n    },\r\n\r\n    _openContent: function (node, options, plugin) {\r\n      if (config.openInNewTab) {\r\n        return this._openWindow(plugin, node, window.open(''), options);\r\n      }\r\n      if (plugin.widgetView) {\r\n        return this._openWidget(plugin.widgetView, node, options);\r\n      }\r\n      var content = config.openInNewTab === false ?\r\n                    window : window.open('');\r\n\r\n      return this._openWindow(plugin, node, content, options);\r\n    },\r\n\r\n    _openWidget: function (view, node, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/commands/impl/full.page.modal/full.page.modal.view',\r\n        view\r\n      ], function (FullPageModal, ViewerView) {\r\n        var viewerView = new ViewerView({\r\n              context: options.context,\r\n              model: node\r\n            }),\r\n            fullPageModal = new FullPageModal({\r\n              view: viewerView\r\n            });\r\n        fullPageModal.on('destroy', function () {\r\n                       deferred.resolve();\r\n                     })\r\n                     .show();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openWindow: function (plugin, node, content, options) {\r\n      var deferred = $.Deferred();\r\n      var self = this;\r\n      require([\r\n        'csui/utils/open.authenticated.page'\r\n      ], function () {\r\n        openAuthenticatedPage = arguments[0];\r\n        // Prefer the full-URL-retrieving method, then try\r\n        // the URL-query-only-retrieving method\r\n        var promise = plugin.getUrl && plugin.getUrl(node) ||\r\n                      plugin.getUrlQuery(node);\r\n        promise.then(function (url) {\r\n          return self._openURL(plugin, node, content, url, options);\r\n        }, function (error) {\r\n          if (content !== window) {\r\n            content.close();\r\n          }\r\n          deferred.reject(error);\r\n          return $.Deferred().reject();\r\n        })\r\n        .then(function () {\r\n          content.focus();\r\n          deferred.resolve();\r\n        });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openURL: function (plugin, node, content, url, options) {\r\n      var connector = node.connector || options.connector;\r\n      // If the URL-query-only-retrieving method was used,\r\n      // prepend the CGI URL base to complete the URL\r\n      if (!plugin.getUrl) {\r\n        url = Url.appendQuery(\r\n            new Url(connector.connection.url).getCgiScript(),\r\n            Url.combineQueryString(url));\r\n      }\r\n      if (plugin.needsAuthentication && plugin.needsAuthentication(node)) {\r\n        return openAuthenticatedPage(connector, url, {\r\n          window: content,\r\n          openInNewTab: config.openInNewTab\r\n        });\r\n      }\r\n      content.location.href = url;\r\n      return $.Deferred().resolve().promise();\r\n    },\r\n\r\n    _checkPermission: function (node) {\r\n      var openables = new NodeActionCollection(undefined, {\r\n        connector: node.connector,\r\n        nodes: [ node.get('id') ],\r\n        commands: [ 'open', 'download' ]\r\n      });\r\n\r\n      return openables.fetch().then(function () {\r\n        var nodeId = node.get('id');\r\n        var openable = openables.get(nodeId);\r\n        if (openable.actions.get('open') || openable.actions.get('download')) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    _showOverview: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function () {\r\n        NextNodeModelFactory = arguments[0];\r\n        var nextNode = options.context.getModel(NextNodeModelFactory);\r\n        var nodeId = node.get('id');\r\n\r\n        nextNode.set('id', nodeId);\r\n      }, deferred.reject);\r\n\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return OpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.discussion',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenDiscussionCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenDiscussion'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 215;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenDiscussionCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.milestone',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenMilestoneCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMilestone'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 212;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseMilestone',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenMilestoneCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.channel',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenChannelCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenChannel'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 207;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewChannel',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenChannelCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.news',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenNewsCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenNews'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 208;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewNews',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNewsCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.poll',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenPollCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenPoll'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 218;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'OpenPoll',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenPollCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.prospector',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenProspectorCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenProspector'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 384;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ProspectorBrowse',\r\n        objId: node.get('id'),\r\n        order: '-SCORE',\r\n        summaries: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenProspectorCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.classic.page',[\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (OpenClassicPageCommand, CommandHelper, classicNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificClassicPageCommand = OpenClassicPageCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificClassicPage'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node\r\n          // If the object data does not contain the open-ability flag, consider\r\n          // the object open-able for compatibility with older REST API.\r\n          && node.get('openable') !== false\r\n          && classicNodes.isSupported(node);\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      return classicNodes.getUrl(node);\r\n    }\r\n  });\r\n\r\n  return OpenSpecificClassicPageCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.node.perspective',[\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/smart.nodes/smart.nodes'\r\n], function (OpenNodePerspectiveCommand, CommandHelper, smartNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificNodePerspectiveCommand = OpenNodePerspectiveCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificNodePerspective'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node\r\n          // If the object data does not contain the open-ability flag, consider\r\n          // the object open-able for compatibility with older REST API.\r\n          && node.get('openable') !== false\r\n          && smartNodes.isSupported(node);\r\n    }\r\n  });\r\n\r\n  return OpenSpecificNodePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.task',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTask'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 206;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTask',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.taskgroup',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskGroupCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskGroup'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 205;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskGroup',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskGroupCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.tasklist',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskListCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskList'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 204;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskList',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskListCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.topic',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTopicCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTopic'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 130 || type === 134;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        show: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTopicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var PermissionsCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'permissions',\r\n      command_key: ['permissions', 'Permissions'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          selected           = status.nodes,\r\n          container          = status.container,\r\n          navigationView     = true, nodes,\r\n          metadatanavigation = !!status.originatingView ? status.originatingView.$el.closest(\r\n              '.cs-metadata-navigation-wrapper') : [];\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n        selected = selected.first();\r\n      }\r\n\r\n      // The metadatanavigation view gets invoked from the nodestable and the search results\r\n      // differently. In Both cases I did not see a reason why adding the cs-metadata-no-bg-color\r\n      // class. Actually adding it creates an issues when the metadatanavigation is launched from\r\n      // the nodestable.\r\n      /*if (metadatanavigation.length > 0) {\r\n        metadatanavigation.addClass(\"cs-metadata-no-bg-color\");\r\n      }*/\r\n\r\n      var context = status.context || options && options.context;\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/widgets/permissions/permissions.view', this.get('commands')\r\n      ], function (PermissioNavigationWidget, MetadataView, DialogView, PermissionsView, commands) {\r\n\r\n        var permissionsView, nodeId = selected.get('id'),\r\n            showInDialogView        = status.data && !!status.data.dialogView;\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          // bring back shortcut Node and maintain in slected node  if at all node has any..\r\n          !!status.originatingView.mdv && status.originatingView.mdv.model.get('shortcutNode') ?\r\n          selected.attributes.shortcutNode = status.originatingView.mdv.model.get('shortcutNode') :\r\n          selected;\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            containerCollection: status.collection,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? false : true,\r\n            activeTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                       status.originatingView.mdv.metadataTabView.options.activeTab,\r\n            selectedTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                         status.originatingView.mdv.metadataTabView.tabLinks.selected,\r\n            showPermissionView: true\r\n          });\r\n        }\r\n        else if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            permissionsView = new PermissioNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              isExpandedView: status.originatingView &&\r\n                              !!status.originatingView.options.isExpandedView,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n          } else {\r\n            if (status.originatingView &&\r\n                status.originatingView.supportOriginatingView === undefined) {\r\n              status.originatingView.supportOriginatingView = true;\r\n            }\r\n            permissionsView = new MetadataView({\r\n              model: selected,\r\n              originatingView: status.originatingView,\r\n              targetView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              showBackIcon: status.originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n            if (status.originatingView) {\r\n              status.originatingView.permissionsView = permissionsView;\r\n            }\r\n          }\r\n        } else {\r\n          if (status.originatingView &&\r\n              status.originatingView.supportOriginatingView === undefined) {\r\n            status.originatingView.supportOriginatingView = true;\r\n          }\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n          if (status.originatingView) {\r\n            status.originatingView.permissionsView = permissionsView;\r\n          }\r\n        }\r\n        //Replace metadata content view with permissions widget\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          if (status.originatingView.mdv && status.originatingView.mdv.metadataTabView) {\r\n            status.originatingView.mdv.destroy();\r\n            status.originatingView.showPermissionView = true;\r\n            permissionsView.render();\r\n            Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n            status.originatingView.$el.find(\".metadata-content\").append(permissionsView.el);\r\n            Marionette.triggerMethodOn(permissionsView, 'show');\r\n          }\r\n        }// replace the originatingView with sliding left/right animation\r\n        else if (status.originatingView && !showInDialogView) {\r\n\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = status.originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-permissions-wrapper'></div>\");\r\n          $csProperties = $($originatingView.parent().find('.cs-permissions-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          permissionsView.render();\r\n          //permissionsView.blockActions();\r\n          Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n          $csProperties.append(permissionsView.el);\r\n\r\n          $originatingView = $originatingView.parent().find(\".cs-properties-wrapper\").length > 0 ?\r\n                             $originatingView.parent().find(\".cs-properties-wrapper\") :\r\n                             $originatingView;\r\n\r\n          $originatingView.hide('blind', {\r\n            direction: 'left',\r\n            complete: function () {\r\n              $csProperties.show('blind',\r\n                  {\r\n                    direction: 'right',\r\n                    complete: function () {\r\n                      if (status.originatingView.metadataView) {\r\n                        $originatingView.parent().find(\".cs-properties-wrapper\").remove();\r\n                        status.originatingView.metadataView &&\r\n                        status.originatingView.metadataView.destroy();\r\n                      }\r\n                      Marionette.triggerMethodOn(permissionsView, 'show');\r\n                    }\r\n                  },\r\n                  100);\r\n            }\r\n          }, 100);\r\n\r\n          $originatingView.promise().done(function () {\r\n            status.originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            if (metadatanavigation.length > 0) {\r\n              metadatanavigation.removeClass(\"cs-metadata-no-bg-color\");\r\n            }\r\n            $csProperties.hide('blind', {\r\n              direction: 'right',\r\n              complete: function () {\r\n                status.originatingView.$el.show('blind',\r\n                    {\r\n                      direction: 'left',\r\n                      complete: function () {\r\n                        status.originatingView.metadataView &&\r\n                        status.originatingView.metadataView.destroy();\r\n                        status.originatingView.permissionsView &&\r\n                        status.originatingView.permissionsView.destroy();\r\n                        status.originatingView.triggerMethod('dom:refresh');\r\n                        status.originatingView.isDisplayed = true;\r\n                        //reset required switch to default.\r\n                        !!status.collection && (status.collection.requireSwitched = false);\r\n                        // Trigger an event to let originating view aware of closing properties view and going back to it.\r\n                        // Hence originatingView can handle it and do necessary actions (if any).\r\n                        status.originatingView.trigger('permissions:view:destroyed');\r\n                      }\r\n                    },\r\n                    100);\r\n                permissionsView.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          self.listenTo(permissionsView, 'metadata:close',\r\n              _.bind(_showOriginatingView, self));\r\n          self.listenTo(permissionsView, 'metadata:close:without:animation', function () {\r\n            $originatingView.show('blind',\r\n                {\r\n                  direction: 'left',\r\n                  complete: function () {\r\n                    status.originatingView.triggerMethod('dom:refresh');\r\n\r\n                    //reset required switch to default.\r\n                    !!status.collection && (status.collection.requireSwitched = false);\r\n                  }\r\n                },\r\n                100);\r\n            permissionsView.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show permissionsView View in a modal dialog\r\n          if (permissionsView.metadataTabView) {\r\n            // edit permission popover should be in dialog element\r\n            // not on body , else we loose focus on first element of popover\r\n            permissionsView.metadataTabView.options.isExpandedView = true;\r\n          }\r\n          self.dialog = new DialogView({\r\n            className: 'cs-permissions',\r\n            largeSize: true,\r\n            view: permissionsView\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(permissionsView, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n          self.dialog.listenTo(permissionsView, 'metadata:close:without:animation',\r\n              function () {\r\n                self.dialog.destroy();\r\n                deferred.resolve();\r\n              });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      if (!status.nodes) {\r\n        return new NodeCollection();\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        return status.collection;\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n  return PermissionsCommand;\r\n});\n","csui.define('csui/utils/commands/properties',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection, MetadataFactory) {\r\n  'use strict';\r\n\r\n  var PropertiesCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Properties',\r\n      command_key: ['properties', 'Properties'],\r\n      openable: true,\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    _executeWithSaveState: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/metadata.factory'\r\n      ], function (MetadataFactory) {\r\n        var context         = status.context || options && options.context,\r\n            metadataModel = context.getModel(MetadataFactory),\r\n            node            = CommandHelper.getJustOneNode(status) || (status.nodes && status.nodes.at(0)),\r\n            container = status.container,\r\n            selected = status.nodes,\r\n            navigationView = true,\r\n            nodes;\r\n            \r\n        if (selected && selected.first() === container) {\r\n          // The container properties were requested for the container\r\n          navigationView = false;\r\n        } else {\r\n          nodes = this._getAtLeastOneNode(status);\r\n        }\r\n\r\n        metadataModel.set('metadata_info', {\r\n              id: node.get('id'),\r\n              model: node,\r\n              navigator: navigationView,\r\n              collection: nodes,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              isThumbnailView: status.originatingView.thumbnailView\r\n        });\r\n\r\n        deferred.resolve();\r\n      }.bind(this), function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _isInMetadataPerspective: function (context) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/metadata.factory'\r\n      ], function (MetadataFactory) {\r\n        var metadataModel = context.getModel(MetadataFactory);\r\n        var metadataInfo = metadataModel.get('metadata_info');\r\n        if (metadataInfo && _.keys(metadataInfo).length > 0) {\r\n          deferred.resolve();\r\n        } else {\r\n          deferred.reject();\r\n        }\r\n      }.bind(this), function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n\r\n    },\r\n\r\n    _executeWithoutSaveState: function (status, options) {\r\n      var context = status.context || (options && options.context),\r\n          self = this,\r\n          deferred = $.Deferred(),\r\n          selected = status.nodes,\r\n          container = status.container,\r\n          navigationView = true,\r\n          nodes;\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n      }\r\n      var originatingView = status.originatingView || (options && options.originatingView);\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/models/nodeversions', this.get('commands')\r\n      ], function (MetadataNavigationWidget, MetadataView, DialogView,\r\n          NodeVersionCollection, commands) {\r\n\r\n        var metadata, showInDialogView = status.data && !!status.data.dialogView;\r\n        if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            metadata = new MetadataNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              showThumbnails: status.showThumbnails,\r\n              disableViewState: true\r\n            });\r\n          } else {\r\n            if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n              originatingView.supportOriginatingView = true;\r\n            }\r\n            metadata = new MetadataView({\r\n              model: selected.get(\"id\") ? selected : selected.models[0],\r\n              originatingView: originatingView,\r\n              targetView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: originatingView ? false : true,\r\n              showBackIcon: originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              disableViewState: true\r\n            });\r\n            if (originatingView) {\r\n              originatingView.metadataView = metadata;\r\n            }\r\n          }\r\n        } else {\r\n          if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n            originatingView.supportOriginatingView = true;\r\n          }\r\n          metadata = new MetadataView({\r\n            model: selected,\r\n            originatingView: originatingView,\r\n            targetView: originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: originatingView ? false : true,\r\n            showBackIcon: originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            selectedProperty: status.selectedProperty,\r\n            disableViewState: true\r\n          });\r\n          if (originatingView) {\r\n            originatingView.metadataView = metadata;\r\n          }\r\n        }\r\n\r\n        if (originatingView instanceof MetadataNavigationWidget &&\r\n            !(status.collection instanceof NodeVersionCollection)) {\r\n          if (originatingView.mdv && originatingView.mdv.metadataTabView) {\r\n            metadata = null;\r\n            originatingView.showPermissionView = false;\r\n            originatingView._showNode(selected.get(\"id\") ? selected : selected.models[0]);\r\n          }\r\n        } // replace the originatingView with sliding left/right animation\r\n        else if (originatingView && !showInDialogView) {\r\n          originatingView.triggerMethod('metadata:created', metadata);\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-properties-wrapper'></div>\");\r\n          $originatingView.parent().addClass('csui-node-properties-wrapper');\r\n          $csProperties = $($originatingView.parent().find('.cs-properties-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          metadata.render();\r\n          Marionette.triggerMethodOn(metadata, 'before:show');\r\n          $csProperties.append(metadata.el);\r\n\r\n          $originatingView = $originatingView.parent().find(\".cs-permissions-wrapper\").length > 0 ?\r\n                             $originatingView.parent().find(\".cs-permissions-wrapper\") :\r\n                             $originatingView;\r\n\r\n          $originatingView.hide('blind', {\r\n            direction: 'left',\r\n            complete: function () {\r\n              $csProperties.show('blind',\r\n                  {\r\n                    direction: 'right',\r\n                    complete: function () {\r\n                      if (originatingView.permissionsView) {\r\n                        $originatingView.parent().find(\".cs-permissions-wrapper\").remove();\r\n                        originatingView.permissionsView &&\r\n                        originatingView.permissionsView.destroy();\r\n                      }\r\n                      Marionette.triggerMethodOn(metadata, 'show');\r\n                    }\r\n                  },\r\n                  100);\r\n            }\r\n          }, 100);\r\n\r\n          $originatingView.promise().done(function () {\r\n            originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            $csProperties.hide('blind', {\r\n              direction: 'right',\r\n              complete: function () {\r\n                originatingView.$el.show('blind',\r\n                    {\r\n                      direction: 'left',\r\n                      complete: function () {\r\n                        originatingView.metadataView && originatingView.metadataView.destroy();\r\n                        originatingView.permissionsView &&\r\n                        originatingView.permissionsView.destroy();\r\n                        originatingView.triggerMethod('dom:refresh');\r\n                        originatingView.isDisplayed = true;\r\n                        //reset required switch to default.\r\n                        !!status.collection && (status.collection.requireSwitched = false);\r\n                        // Trigger an event to let originating view aware of closing properties view and going back to it.\r\n                        // Hence originatingView can handle it and do necessary actions (if any).\r\n                        // For ex: Coming to properties page from Wiki, delete latest version, and going back,\r\n                        // should fetch & update WIKI page with latest available version.\r\n                        originatingView.trigger('properties:view:destroyed');\r\n                      }\r\n                    },\r\n                    100);\r\n                $originatingView.parent().removeClass('csui-node-properties-wrapper');\r\n                metadata.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          self.listenTo(metadata, 'metadata:close', _.bind(_showOriginatingView, self));\r\n          self.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            $originatingView.show('blind',\r\n                {\r\n                  direction: 'left',\r\n                  complete: function () {\r\n                    originatingView.triggerMethod('dom:refresh');\r\n\r\n                    //reset required switch to default.\r\n                    !!status.collection && (status.collection.requireSwitched = false);\r\n                  }\r\n                },\r\n                100);\r\n            metadata.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show Metadata View in a modal dialog\r\n\r\n          self.dialog = new DialogView({\r\n            className: 'cs-properties',\r\n            largeSize: true,\r\n            view: metadata\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(metadata, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n          });\r\n\r\n          self.dialog.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            self.dialog.destroy();\r\n          });\r\n\r\n          self.dialog.listenTo(self.dialog, 'before:hide', function () {\r\n            deferred.resolve();\r\n          });\r\n\r\n        }\r\n\r\n      }, function (error) {\r\n        deferred.reject(new CommandError(error));\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _isPermissionsView: function (view) {\r\n      return view && view.permissionsView &&\r\n             document.body.contains(view.permissionsView.el);\r\n    },\r\n\r\n    _isPermissionsExplorer: function(view) {\r\n      return view.el && view.el.parentNode.classList.contains('cs-permissions-wrapper');\r\n    },\r\n\r\n    execute: function (status, options) {\r\n\r\n      var context = status.context || (options && options.context);\r\n\r\n      // When the permissions are displayed in the metadata navigation, it uses this\r\n      // command to display the properties again. So we can't use the routing again when the\r\n      // permissions are displayed.\r\n      // We also will not use the routing when the permissions are displayed in the nodestable.\r\n      // We can't open the properties when the Root router is active because we can't do the\r\n      // back button twice.\r\n      if (status.originatingView && context && context.viewStateModel &&\r\n            context.viewStateModel.get('history') &&\r\n            context.viewStateModel.get('enabled') &&\r\n            /*!status.originatingView.thumbnailView &&*/\r\n            !_.isUndefined(status.originatingView.enableMetadataPerspective) &&\r\n            status.originatingView.enableMetadataPerspective &&\r\n            !this._isPermissionsView(status.originatingView) &&\r\n            !this._isPermissionsExplorer(status.originatingView)) {\r\n        return this._executeWithSaveState(status, options);\r\n      }\r\n\r\n      return this._executeWithoutSaveState(status, options);\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      var nodes = new NodeCollection();\r\n      if (!status.nodes) {\r\n        return nodes;\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        if (!status.collection.findWhere({id: status.nodes.models[0].get('id')})) {\r\n          nodes.add(status.nodes.models[0]);\r\n          nodes.add(status.collection.models);\r\n          return nodes;\r\n        } else {\r\n          return status.collection;\r\n        }\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n\r\n  return PropertiesCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/rename',[\r\n  'csui/models/command'\r\n], function (CommandModel) {\r\n  'use strict';\r\n\r\n  var RenameCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Rename',\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    // returns promise of node.sync\r\n    rename: function (node, name) {\r\n      return node\r\n          .save({name: name}, {\r\n            wait: true,\r\n            patch: true\r\n          });\r\n    },\r\n\r\n    // This command is not to be executed.\r\n  });\r\n\r\n  return RenameCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/rename.favorite',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var RenameFavoriteCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"FavoriteRename\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['favorite_rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/favorite/favorite.view'\r\n      ], function (inlineFormFavoriteView) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n          node.inlineFormView = inlineFormFavoriteView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RenameFavoriteCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return RenameFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/reserve',[\r\n  \"require\", \"module\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\", \"csui/models/command\"\r\n], function (require, module, _, $,  publicLang, lang, CommandHelper, NodeCommand, CommandModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 2\r\n  });\r\n\r\n  var ReserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: \"ReserveDoc\",\r\n      command_key: ['reserve', 'ReserveDoc'],\r\n      name: publicLang.CommandNameReserve,\r\n      verb: lang.CommandVerbReserve,\r\n      pageLeavingWarning: lang.ReservePageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.ReserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemFailMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.ReserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    // Remove the reserve action for previous versions \r\n    enabled: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      if (nodes && nodes.length) {\r\n        var isOlderVersion = nodes.some(function (node) {\r\n          return node.has('versions') && node.get('versions').current_version === false;\r\n        });\r\n        if (isOlderVersion) {\r\n          return false;\r\n        }\r\n      }\r\n      return CommandModel.prototype.enabled.apply(this, arguments);\r\n    },\r\n                                         \r\n    _performAction: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      node.isReservedClicked = true;\r\n      require([\r\n        'csui/utils/contexts/factories/user'\r\n      ], function (UserModelFactory) {\r\n        var user = options.context.getModel(UserModelFactory);\r\n        user.ensureFetched()\r\n            .then(function () {\r\n              return CommandHelper.updateNode(node, {\r\n                reserved_user_id: user.get('id')\r\n              });\r\n            })\r\n            .then(deferred.resolve, deferred.reject);\r\n        }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ReserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/run.livereport',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var RunLiveReportCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'RunLiveReport'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 299;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'RunReport',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return RunLiveReportCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/sign.out',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper, Url, lang) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, routing;\r\n\r\n  var config = _.extend({\r\n    signInPageUrl: 'signin.html'\r\n  }, module.config());\r\n\r\n  var SignOutCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SignOut',\r\n      name: lang.SignOutCommandName\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          self = this;\r\n      require([\r\n        'csui/utils/contexts/factories/connector', 'csui/utils/routing'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        routing = arguments[1];\r\n        self._signOut(context)\r\n            .done(deferred.resolve)\r\n            .fail(deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _signOut: function (context) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript();\r\n      // Development HTML pages do not use the OTDS login page\r\n      if (routing.routesWithSlashes()) {\r\n        // Invalidate the authenticated session, get the secure request token\r\n        // for the classic logout page and perform the logout by navigating there\r\n        return connector.makeAjaxCall({\r\n                  url: Url.combine(cgiUrl, 'api/v1/auth/logouttoken')\r\n                })\r\n                .then(function (response) {\r\n                  connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n                  location.href = cgiUrl + '?func=csui.dologout&secureRequestToken=' +\r\n                                  encodeURIComponent(response.token);\r\n                });\r\n      }\r\n\r\n      // Invalidate the authenticated session and navigate to the login\r\n      // page; this is used on the development pages\r\n      connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n      var signInPageUrl = config.signInPageUrl,\r\n          query = location.search;\r\n      query += query ? '&' : '?';\r\n      query += 'nextUrl=' + encodeURIComponent(location.pathname);\r\n      location.href = signInPageUrl + query + location.hash;\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  });\r\n\r\n  return SignOutCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/switch.to.classic',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, lang, OpenClassicPageCommand, ClassicNodes) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, NodeModelFactory;\r\n\r\n  var config = _.extend({\r\n    enabled: true,\r\n    // Allow defining a value specific for this command\r\n    openInNewTab: null\r\n  }, module.config());\r\n  // If no specific value was set, use the value for all Classic UI pages\r\n  if (config.openInNewTab == null) {\r\n    config.openInNewTab = OpenClassicPageCommand.openInNewTab;\r\n  }\r\n\r\n  var SwitchToClassicCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SwitchToClassic',\r\n      name: lang.SwitchToClassicCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!config.enabled) {\r\n        return false;\r\n      }\r\n      var context = status.context || options && options.context,\r\n          applicationScope = context.getModel('applicationScope');\r\n      applicationScope = applicationScope && applicationScope.get('id');\r\n      return applicationScope === '' || applicationScope === 'node';\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          target = config.openInNewTab && window.open('', '_blank') || window,\r\n          self = this;\r\n      target.focus();\r\n      require(['csui/utils/contexts/factories/connector',\r\n               'csui/utils/contexts/factories/node'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        target.location.href = self._getUrl(context, status);\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript(),\r\n          urlQueryParameters = this._getUrlQueryParameters(context, status),\r\n          urlQuery = Url.combineQueryString(urlQueryParameters);\r\n      return Url.appendQuery(cgiUrl, urlQuery);\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var node = CommandHelper.getJustOneNode(status) ||\r\n                 context.getModel(NodeModelFactory),\r\n          classicNode = ClassicNodes.find(function (item) {\r\n            return item.matchRules(node, item.attributes);\r\n          }),\r\n          urlQuery    = classicNode && classicNode.get(\"urlQuery\"),\r\n          parameters;\r\n      if (node !== undefined && node.get('id') > 0) {\r\n        parameters = {\r\n          func: 'll',\r\n          objId: node.get('id')\r\n        };\r\n        if (urlQuery) {\r\n          if (typeof urlQuery === 'string') {\r\n            parameters = ClassicNodes._replaceParameters(classicNode.get(\"urlQuery\"),\r\n                node.attributes);\r\n          } else if (typeof urlQuery === 'function') {\r\n            parameters = urlQuery(node);\r\n          }\r\n        } else {\r\n          if (node.get('container')) {\r\n            parameters.objAction = 'browse';\r\n            parameters.viewType = 1;\r\n          } else {\r\n            parameters.objAction = 'properties';\r\n          }\r\n        }\r\n      } else {\r\n        // Compute parameters for the \"landing page\" in Classic View.\r\n        parameters = { classicview: '' };\r\n      }\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return SwitchToClassicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/unreserve',[\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/node',\r\n  \"csui/models/command\"\r\n], function (publicLang, lang, CommandHelper, NodeCommand, CommandModel) {\r\n  'use strict';\r\n\r\n  var UnreserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'UnreserveDoc',\r\n      command_key: ['unreserve', 'UnreserveDoc'],\r\n      name: publicLang.CommandNameUnreserve,\r\n      verb: lang.CommandVerbUnreserve,\r\n      pageLeavingWarning: lang.UnreservePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemFailMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n     // Remove the unreserve action for previous versions\r\n    enabled: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      if (nodes && nodes.length) {\r\n        var isOlderVersion = nodes.some(function (node) {\r\n          return node.has('versions') && node.get('versions').current_version === false;\r\n        });\r\n        if (isOlderVersion) {\r\n          return false;\r\n        }\r\n      }\r\n      return CommandModel.prototype.enabled.apply(this, arguments);\r\n    },\r\n\r\n    _performAction: function (node, options) {\r\n      node.isUnreservedClicked = true;\r\n      return CommandHelper.updateNode(node, {\r\n        reserved_user_id: null\r\n      });\r\n    }\r\n  });\r\n\r\n  return UnreserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/user.profile',[\r\n  'require', 'csui/lib/jquery', 'csui/models/command', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, CommandModel, base, lang) {\r\n  'use strict';\r\n\r\n  var UserProfileCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'UserProfile',\r\n      name: lang.UserProfileCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var toolItem = status.toolItem || options && options.toolItem;\r\n      if (toolItem) {\r\n        var context = status.context || options && options.context,\r\n            user = context.getModel('user'),\r\n            name = base.formatMemberName(user);\r\n        toolItem.set('name', name);\r\n      }\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context;\r\n      require([\r\n        'csui/utils/contexts/factories/user',\r\n        'esoc/controls/userwidget/userwidget.view'\r\n      ], function (UserModelFactory, UserWidgetView) {\r\n        var user = context.getModel(UserModelFactory),\r\n            userId = user.get('id'),\r\n            userWidgetView = new UserWidgetView({\r\n              model: user,\r\n              connector: user.connector,\r\n              userid: userId,\r\n              context: context,\r\n              baseElement: undefined,\r\n              showUserProfileLink: true,\r\n              showMiniProfile: false,\r\n              enableSimpleSettingsModel: true,\r\n              enableUploadProfilePicture: true,\r\n              loggedUserId: userId,\r\n              showUserSettings: true\r\n            });\r\n        userWidgetView.showUserProfileDialog();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return UserProfileCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/delete',[\r\n  'require', 'module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/delete',\r\n], function (require, module, _, $, versionLang, CommandHelper, DeleteCommand) {\r\n  'use strict';\r\n\r\n  var VersionDeleteCommand = DeleteCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionDelete',\r\n      command_key: ['versions_delete'],\r\n      name: versionLang.CommandNameVersionDelete,\r\n      verb: versionLang.CommandVerbVersionDelete,\r\n      pageLeavingWarning: versionLang.DeleteVersionPageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemSuccessMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemFailMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsFailMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!VersionDeleteCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      var selectedVersions = CommandHelper.getAtLeastOneNode(status);\r\n      return selectedVersions.length > 0 &&\r\n             status.container && status.container.versions && status.container.versions.allModels &&\r\n             selectedVersions.length < status.container.versions.allModels.length;\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var versions = CommandHelper.getAtLeastOneNode(status);\r\n      status.originatingView.blockActions = false;\r\n      return {\r\n        title: versionLang.DeleteCommandConfirmDialogTitle,\r\n        message: versions.length === 1 ?\r\n                 _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogSingleMessage,\r\n                     versions.at(0).get('version_number_name'),\r\n                     status.container.get('name')) :\r\n                 _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogMultipleMessage,\r\n                     versions.length)\r\n      };\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n          oneFileTitle: versionLang.DeletingOneVersion,\r\n          oneFileSuccess: versionLang.DeleteVersionOneItemSuccessMessage,\r\n          multiFileSuccess: versionLang.DeleteVersionManyItemsSuccessMessage,\r\n          oneFilePending: versionLang.DeletingOneVersion,\r\n          multiFilePending: versionLang.DeleteVersions,\r\n          oneFileFailure: versionLang.DeleteVersionOneItemFailMessage,\r\n          multiFileFailure: versionLang.DeleteVersionManyItemsFailMessage2,\r\n          someFileSuccess: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n          someFilePending: versionLang.DeletingSomeVersions,\r\n          someFileFailure: versionLang.DeleteVersionSomeItemsFailMessage2,\r\n          enableCancel: false\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  return VersionDeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/download',['csui/utils/commands/download', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (DownloadCommand, Url, lang) {\r\n  'use strict';\r\n\r\n  var VersionDownloadCommand = DownloadCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionDownload',\r\n      command_key: ['versions_download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n\r\n  });\r\n\r\n  return VersionDownloadCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/open',['csui/utils/commands/open','csui/utils/url'], function (OpenCommand, Url) {\r\n  'use strict';\r\n\r\n  // Support for both node and version models is provided\r\n  // by the open command plugins themselves\r\n  var VersionOpenCommand = OpenCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionOpen',\r\n      command_key: ['versions_open'],\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n  });\r\n\r\n  return VersionOpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/properties',['csui/utils/commands/properties', 'csui/models/version'\r\n], function (PropertiesCommand, VersionModel) {\r\n  'use strict';\r\n\r\n  var VersionPropertiesCommand = PropertiesCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionProperties',\r\n      command_key: 'versions_properties',\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands/versions'\r\n    },\r\n    \r\n    _getAtLeastOneNode: function (status) {\r\n      // for metadata version, use the collection passed in\r\n      if (status.collection && status.nodes.length === 1) {\r\n        return status.collection;\r\n      }\r\n      return status.nodes;\r\n    }\r\n\r\n  });\r\n\r\n  return VersionPropertiesCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/promote.version',[\r\n  'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command', 'csui/models/version',\r\n  'csui/utils/base', 'csui/utils/url'\r\n], function (_, $, versionLang, CommandHelper, Command, VersionModel, base, Url) {\r\n  'use strict';\r\n\r\n  var PromoteVersionCommand = Command.extend({\r\n    defaults: {\r\n      signature: 'PromoteVersion',\r\n      command_key: ['versions_promote'],\r\n      name: versionLang.CommandNamePromoteVersion,\r\n      verb: versionLang.CommandVerbPromoteVersion,\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status).models;\r\n      return (nodes && nodes.length === 1) &&\r\n             (status.container && status.container.get('advanced_versioning'));\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      this._confirmAction(status, options)\r\n          .done(function () {\r\n            deferred.resolve();\r\n          })\r\n          .fail(function () {\r\n            deferred.reject();\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _confirmAction: function (status, options) {\r\n      status.originatingView.blockActions();\r\n      var deferred   = $.Deferred(),\r\n          node       = status.container,\r\n          newVersion = CommandHelper.getJustOneNode(status).clone(),\r\n          connector  = status.container && status.container.connector;\r\n      require(['csui/controls/globalmessage/globalmessage'], function (GlobalMessage) {\r\n        var data = {};\r\n        newVersion.save(undefined, {\r\n          data: data,\r\n          type: 'POST',\r\n          wait: true,\r\n          url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + newVersion.get(\"id\") +\r\n               '/versions/' + newVersion.get(\"version_number\") + '/promote')\r\n        }).done(function () {\r\n          newVersion.fetch().done(function () {\r\n            if (node.versions || (!!node.attributes && !!node.attributes.versions)) {\r\n              newVersion.isLocallyCreated = true;\r\n              // TODO: Remove this, as soon as the version REST API returns actions\r\n              fakeActions(node, newVersion);\r\n              !!node.versions && node.versions.add(newVersion, {at: 0});\r\n              if (Array.isArray(node.get('versions'))) {\r\n                !!node.attributes && !!node.attributes.versions &&\r\n                node.attributes.versions.push(newVersion.attributes);\r\n              }\r\n            }\r\n            deferred.resolve();\r\n            GlobalMessage.showMessage('success', versionLang.MessageVersionPromoted);\r\n          });\r\n        }).fail(function (error) {\r\n          deferred.reject();\r\n          if (error) {\r\n            var errorObj = new base.Error(error);\r\n            GlobalMessage.showMessage('error', errorObj.message);\r\n          }\r\n        }).always(function () {\r\n          status.originatingView.unblockActions();\r\n        });\r\n\r\n      });\r\n      // TODO: Remove this, as soon as the version REST API returns actions\r\n      // (Another workaround could be loading all versions anew)\r\n      function fakeActions(node, version) {\r\n        var actions = [];\r\n        if (node.actions.findRecursively('download') || node.actions.findRecursively('Download')) {\r\n          actions.push({signature: 'versions_download'}, {signature: 'versions_open'});\r\n        }\r\n        if (node.actions.findRecursively('delete') || node.actions.findRecursively('Delete')) {\r\n          actions.push({signature: 'versions_delete'});\r\n        }\r\n        if (node.actions.findRecursively('properties') ||\r\n            node.actions.findRecursively('Properties')) {\r\n          actions.push({signature: 'versions_properties'});\r\n        }\r\n        version.actions.reset(actions);\r\n      }\r\n\r\n      return deferred.promise();\r\n    },\r\n  });\r\n\r\n  return PromoteVersionCommand;\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions',['csui/lib/underscore', 'csui/models/commands',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/properties',\r\n  'csui/utils/commands/versions/promote.version',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands/versions'\r\n], function (_, CommandCollection,\r\n    VersionDeleteCommand,\r\n    VersionDownloadCommand,\r\n    VersionOpenCommand,\r\n    VersionPropertiesCommand,\r\n    PromoteVersionCommand,\r\n    extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection([\r\n    new VersionDeleteCommand(),\r\n    new VersionDownloadCommand(),\r\n    new VersionOpenCommand(),\r\n    new VersionPropertiesCommand(),\r\n    new PromoteVersionCommand()\r\n  ]);\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n            .flatten(true)\r\n            .map(function (Command) {\r\n              return new Command();\r\n            })\r\n            .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/filter',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/models/command'\r\n], function (module, _, $, log, base, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var FilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Filter'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var config = module.config();\r\n      if (config.enabled === false) {\r\n        return false;\r\n      }\r\n      // Fix me: obtain these details from REST API, results.data.columns\r\n      var isContainer = status.container && !!status.container.get('container');\r\n      return !!isContainer && this._isSupported(status.container);\r\n    },\r\n\r\n    _isSupported: function (container) {\r\n      // TODO: Make this extensible. not supported for Compound Document and Collection.\r\n      var notSupportedObjects = [136, 298],\r\n          support             = $.inArray(container.get('type'), notSupportedObjects) === -1;\r\n      return support;\r\n    }\r\n\r\n    // This command is not to be executed.\r\n  });\r\n\r\n  return FilterCommand;\r\n});\r\n\n","csui.define('csui/utils/accessibility',['module'],\r\n  function (module) {\r\n  \"use strict\";\r\n\r\n  var _accessibleMode = module.config().enabled || false;\r\n  var _accessibleTable = module.config().accessibleTable || false;\r\n\r\n  // holds state and functionality for the accessible mode of SmartUI.\r\n  // components such as the table.view react to these settings and render / behave differently,\r\n  // so the result will fare better in accessibility audits.\r\n  var Accessibility = {\r\n\r\n    // activates ALL settings affecting accessibility\r\n    isAccessibleMode: function () {\r\n      return _accessibleMode;\r\n    },\r\n\r\n    // only affects the table (folder browser) and related places\r\n    isAccessibleTable: function() {\r\n      return _accessibleMode || _accessibleTable;\r\n    }\r\n  };\r\n\r\n  return Accessibility;\r\n\r\n});\n","csui.define('csui/utils/commands/description.toggle',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  \"csui/utils/command.error\", \"csui/utils/accessibility\"\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError, Accessibility) {\r\n  'use strict';\r\n\r\n  var accessibleTable = Accessibility.isAccessibleTable();\r\n\r\n  var DescriptionToggleCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"ToggleDescription\",\r\n      command_key: ['description', 'description'],\r\n      scope: \"single\",\r\n      name: lang.CommandDescriptionToggle\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (!accessibleTable && status.collection && !status.thumbnailViewState) {\r\n        if (status.originatingView && status.originatingView.options.showDescriptions) {\r\n          status.toolItem.attributes.name = lang.CommandHideDescription;\r\n        }\r\n        var nodeWithDescription = status.collection.find(function (node) {\r\n          var descr = node.get('description');\r\n          return !!descr;\r\n        });\r\n        return nodeWithDescription !== undefined;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var originatingView = status.originatingView;\r\n      var langStr;\r\n\r\n      var toolbarListItem = originatingView.$el.find('li[data-csui-command=\"toggledescription\"]');\r\n      var toolbarListItemAnchor = toolbarListItem.find('a');\r\n\r\n      if (originatingView.options.showDescriptions) {\r\n        originatingView.options.showDescriptions = false;\r\n        langStr = lang.CommandShowDescription;\r\n        toolbarListItemAnchor.attr('title', langStr).attr('aria-label', langStr);\r\n      } else {\r\n        originatingView.options.showDescriptions = true;\r\n        langStr = lang.CommandHideDescription;\r\n        toolbarListItemAnchor.attr('title', langStr).attr('aria-label', langStr);\r\n      }\r\n\r\n      originatingView.trigger('csui.description.toggled',\r\n          {showDescriptions: originatingView.options.showDescriptions});\r\n    }\r\n  });\r\n\r\n  return DescriptionToggleCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/thumbnail.toggle',[\"module\", \"require\", 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, backbone, Marionette, _, CommandModel, lang) {\r\n  'use strict';\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    enableGridView: false\r\n  });\r\n  var TaskQueue, Thumbnail,\r\n      ThumbnailCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n          signature: \"Thumbnail\",\r\n          command_key: ['thumbnail', 'thumbnail'],\r\n          scope: \"single\",\r\n          name: 'Thumbnail'\r\n        },\r\n\r\n        //only one node allowed at a time\r\n        enabled: function (status, options) {\r\n          if (status.collection && config.enableGridView) {\r\n            if (status.thumbnailViewState) {\r\n              status.toolItem.attributes.icon = \"icon icon-switch_list\";\r\n              status.toolItem.attributes.svgId = \"themes--carbonfiber--image--generated_icons--action_switch_list32\";\r\n              status.toolItem.attributes.name = lang.ListViewTitle;\r\n              status.toolItem.attributes.title = lang.ListViewTitle;\r\n            }\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var originatingView = status.originatingView || (options && options.originatingView),\r\n              langStr,\r\n              menuSelector    = '.csui-configuration-view .binf-dropdown-menu li[data-csui-command=\"thumbnail\"] a';\r\n          status.suppressFailMessage = true;\r\n          status.suppressSuccessMessage = true;\r\n          if (originatingView.thumbnailViewState) {\r\n            langStr = lang.ThumbnailTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-list').removeClass(\r\n                \"binf-glyphicon-th-list\").addClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-large')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          } else {\r\n            langStr = lang.ListViewTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-large').addClass(\r\n                \"binf-glyphicon-th-list\").removeClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-list')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          }\r\n          originatingView.$el.find(menuSelector).attr('title', langStr)\r\n              .contents().first().replaceWith(langStr);  // after the text, there can be right arrow\r\n          return $.Deferred().resolve(status.collection).promise();\r\n        }\r\n      });\r\n\r\n  return ThumbnailCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/save.filter',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/url',\r\n  'csui/models/command', 'csui/models/node/node.model'\r\n], function (module, require, _, $, lang, Url, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConnectorFactory, NextNodeModelFactory, nodeLinks;\r\n\r\n  var SaveFilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"SaveFilter\",\r\n      command_key: ['savefilter', 'SaveFilter'],\r\n      name: lang.CommandNameSaveFilter,\r\n      verb: lang.CommandVerbSaveFilter\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        NextNodeModelFactory = arguments[2];\r\n        nodeLinks = arguments[3];\r\n\r\n        self._selectSaveFilterOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes,\r\n                  facets        = status.facets,\r\n                  targetFolder  = selectedOptions.nodes[0],\r\n                  filterName    = selectedOptions.filterName;\r\n              var url = status.connector.getConnectionUrl().getApiBase('v2');\r\n              var selectedFacets = [];\r\n              $.each(facets.filters, function (idx, facet) {\r\n                var facettypes = [], facetArrayType = [];\r\n                if (facet.values instanceof Array) {\r\n                  $.each(facet.values, function (index, facettype) {\r\n                    facettypes.push(facettype.id);\r\n                  });\r\n                  facetArrayType.push(facet.id);\r\n                  facetArrayType.push(facettypes);\r\n                  selectedFacets.push(facetArrayType);\r\n                }\r\n              });\r\n              var ajaxFormData = {\r\n                'type': 899,\r\n                'location_id': selectedNodes.models[0].get(\"id\"),\r\n                'name': filterName,\r\n                'parent_id': targetFolder.get(\"id\"),\r\n                'selected_facets': selectedFacets\r\n              };\r\n              var saveFilterOptions = {\r\n                url: Url.combine(url, '/nodes'),\r\n                type: 'POST',\r\n                data: ajaxFormData,\r\n                contentType: 'application/x-www-form-urlencoded'\r\n              };\r\n\r\n              status.connector.makeAjaxCall(saveFilterOptions)\r\n                  .done(function (resp) {\r\n                    deferred.resolve(resp.results);\r\n                    var virtualFolderId   = resp.results.data.properties.id,\r\n                        virtualFolderNode = new NodeModel({id: virtualFolderId},\r\n                            {connector: context.getObject(ConnectorFactory)}),\r\n                        name              = resp.results.data.properties.name,\r\n                        msg               = _.str.sformat(lang.SaveFilterCommandSuccessfully, name),\r\n                        options           = {\r\n                          context: context,\r\n                          nextNodeModelFactory: NextNodeModelFactory,\r\n                          link_url: nodeLinks.getUrl(virtualFolderNode),\r\n                          targetFolder: virtualFolderNode\r\n                        },\r\n                        dets; // leave details as undefined;\r\n                    GlobalMessage.showMessage('success_with_link', msg, dets, options);\r\n                  })\r\n                  .fail(function (error) {\r\n                    deferred.reject(error);\r\n                    if (error && error.responseText) {\r\n                      var errorObj = JSON.parse(error.responseText);\r\n                      GlobalMessage.showMessage('error', errorObj.error);\r\n                    }\r\n                  });\r\n\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectSaveFilterOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var numNodes = status.nodes.length;\r\n            var pickerOptions = _.extend({\r\n              command: 'savefilter',\r\n              selectableTypes: [-1],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.DialogTitleSaveFilter,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: false,\r\n              saveFilter: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function (error) {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return SaveFilterCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/maximize.widget.view',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var ExpandNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"MaximizeWidgetView\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n      return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === false);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"maximize:widget\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return ExpandNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/restore.widget.size',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var NormalizeNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"RestoreWidgetViewSize\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n\r\n      var isMaximizeMode = this.checkMaximizeMode(status);\r\n\r\n      if (isMaximizeMode) {\r\n        return false; //When showWidgetInMaxMode then disable the RestoreWidgetView\r\n      } else {\r\n        var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n        return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === true);\r\n      }\r\n\r\n    },\r\n\r\n    checkMaximizeMode: function (status) {\r\n      return status && status.context && status.context.perspective &&\r\n             status.context.perspective.get(\"showWidgetInMaxMode\");\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"restore:widget:size\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return NormalizeNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/apply.permission',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ApplyPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ApplyPermission'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (true) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', \"Applied permissions to sub-items\");\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', \"Failed to apply permissions to sub-items\");\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ApplyPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/permission.util',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/lib/backbone\", 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, Backbone, $, lang) {\r\n  'use strict';\r\n\r\n  function generateSuccessMessage(response, GlobalMessage) {\r\n    var message;\r\n    if (response.results.success > 0 && response.results.failure === 0) {\r\n      message = _.str.sformat(\r\n          response.results.success === 1 ? lang.AppliedPermissionsOneSuccess :\r\n          lang.AppliedPermissionsOnlySuccess,\r\n          response.results.success);\r\n    } else if (response.results.success > 0 && response.results.failure > 0) {\r\n      message = _.str.sformat(lang.AppliedPermissionsSuccessAndFailure,\r\n          response.results.success, response.results.failure);\r\n    } else if (response.results.success === 0 && response.results.failure > 0) {\r\n      message = _.str.sformat(\r\n          response.results.failure === 1 ? lang.AppliedPermissionsOneFailure :\r\n          lang.AppliedPermissionsOnlyFailure,\r\n          response.results.failure);\r\n    }\r\n    var errObject             = Backbone.Model.extend({\r\n          defaults: {\r\n            name: \"\",\r\n            state: 'pending',\r\n            commandName: 'ViewPermission'\r\n          }\r\n        }),\r\n        errObjects            = [],\r\n        failedFilesCollection = Backbone.Collection.extend({\r\n          model: errObject\r\n        }),\r\n        errCollection         = new failedFilesCollection();\r\n\r\n    for (var i = 0; response.results.failure > 0 && i < response.results.data.length; i++) {\r\n      errObjects[i] = new errObject({\r\n        name: response.results.data[i].name,\r\n        mime_type: '',\r\n        state: 'rejected'\r\n      });\r\n      errCollection.add(errObjects[i]);\r\n    }\r\n    var successCount = (response.results.success > 0 &&\r\n                        response.results.failure > 0) ?\r\n                       response.results.success : '',\r\n        langTitle    = _.str.sformat(lang.ApplyingManyItemsSuccessMessage, successCount),\r\n        successMsg   = successCount > 0 ? langTitle : ' ';\r\n\r\n    response.results.failure > 0 ?\r\n    GlobalMessage.showPermissionApplyingProgress(errCollection, {\r\n      oneFileFailure: successMsg + lang.ApplyingOneItemFailMessage,\r\n      someFileFailure: successMsg + _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n          errObjects.length),\r\n      multiFileFailure: successMsg + _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n          errObjects.length)\r\n    }) : '';\r\n\r\n    (response.results.success > 0 && response.results.failure <= 0) ?\r\n    GlobalMessage.showMessage('success', message ? message : lang.AppliedPermissions) : '';\r\n  }\r\n\r\n  return {\r\n    generateSuccessMessage: generateSuccessMessage\r\n  };\r\n});\n","csui.define('csui/utils/commands/permissions/edit.permission',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/lib/backbone\", 'csui/lib/jquery',\r\n  'csui/utils/base',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/permissions/permission.util'\r\n], function (module, require, _, Backbone, $, base, CommandModel,\r\n    CommandHelper, CommandError, lang, PermissionUtil) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var EditPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EditPermission',\r\n      command_key: ['editpermissions', 'Edit Permissions']\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel        = status.model,\r\n          type                   = permissionModel && permissionModel.get('right_id_expand') &&\r\n                                                      permissionModel.get('right_id_expand').type,\r\n          collection             = permissionModel && permissionModel.collection,\r\n          right_id               = permissionModel && permissionModel.get('right_id'),\r\n          permissionType         = permissionModel && permissionModel.get('type'),\r\n          filterId               = status.filterId,\r\n          nodeModel              = status.nodeModel || (status.originatingView &&\r\n                                                        status.originatingView.model),\r\n          userHasEditPermissions = nodeModel && nodeModel.actions &&\r\n                                    !!nodeModel.actions.get({signature: 'editpermissions'}),\r\n          memberTypeSupport      = [0,1],\r\n          isDisable              = (memberTypeSupport.indexOf(type) < 0) && permissionType === \"custom\";\r\n      if (!isDisable) {\r\n        return !filterId && permissionType && (right_id || permissionType === \"public\") &&\r\n             collection &&\r\n             collection.options && collection.options.node && !!collection.options.node.get('id') &&\r\n             userHasEditPermissions;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.model,\r\n          collection      = permissionModel.collection,\r\n          targetView      = status.targetView;\r\n\r\n      self.targetView = targetView;\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      var failureMsg = this._getMessageWithUserDisplayName(lang.EditPermissionCommandFailMessage,\r\n          permissionModel);\r\n      var userHasEditPermissions = collection && collection.options && collection.options.node &&\r\n                                   collection.options.node.actions.get(\r\n                                       {signature: 'editpermissions'});\r\n\r\n      if (collection && !!userHasEditPermissions) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n\r\n        require(\r\n            ['csui/widgets/permissions/impl/edit/edit.permission.helper',\r\n              'csui/utils/contexts/factories/user', 'csui/controls/globalmessage/globalmessage',\r\n              'csui/utils/permissions/permissions.precheck'\r\n            ],\r\n            function (EditPermissionHelper, UserModelFactory, GlobalMessage, PermissionPreCheck) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              self.editPermissionHelper = new EditPermissionHelper({\r\n                permissionModel: permissionModel,\r\n                popoverPlacement: \"left\",\r\n                popoverAtBodyElement: status.originatingView ?\r\n                                      !status.originatingView.options.isExpandedView : true,\r\n                popoverTargetElement: status.targetView.permissions.$el,\r\n                readonly: false,\r\n                originatingView: status.originatingView,\r\n                applyTo: status.applyTo\r\n              });\r\n              self.editPermissionHelper._showSelectPermissionLevelPopover();\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"permissions:selected\", function (userSelection) {\r\n                    var saveAttr = {\r\n                      \"permissions\": userSelection.permissions,\r\n                      \"apply_to\": userSelection.apply_to,\r\n                      \"include_sub_types\": userSelection.apply_to > 0 ?\r\n                                           PermissionPreCheck.includeSubTypes() : []\r\n                    };\r\n                    if (userSelection.right_id) {\r\n                      saveAttr.right_id = userSelection.right_id;\r\n                    }\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function (response) {\r\n\r\n                      permissionModel.set(saveAttr, {silent: true});\r\n                      status.originatingView.trigger('permission:changed', status);\r\n                      //status.originatingView.render();\r\n                      self.editPermissionHelper.destroy();\r\n                      self.editPermissionHelper.unblockActions();\r\n                      /*if (permissionModel.mustRefreshAfterPut !== false) {\r\n                        return permissionModel.fetch();\r\n                      }*/\r\n                      deferred.resolve();\r\n                      if (status.originatingView.model.get('permissions_model') !== 'simple') {\r\n                        PermissionUtil.generateSuccessMessage(response, GlobalMessage);\r\n                      } \r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      GlobalMessage.showMessage('error', commandError);\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"closed:permission:level:popover\", function () {\r\n                    deferred.reject(permissionModel);\r\n                  });\r\n            });\r\n      } else {\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg = _.str.sformat(unformattedMsg, displayName);\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return EditPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/change.owner.permission',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', \"csui/lib/marionette\",\r\n  'csui/models/command', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, _, $, Marionette, CommandModel, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ChangeOwnerPermissionCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'ChangeOwnerPermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel    = status.model,\r\n          type               = permissionModel && permissionModel.get('right_id_expand') &&\r\n                                               permissionModel.get('right_id_expand').type,\r\n          permissionType     = permissionModel && permissionModel.get('type'),\r\n          nodeModel          = status.nodeModel || (status.originatingView &&\r\n                                                 status.originatingView.model),\r\n          enabled            = (permissionType &&\r\n                               (permissionType === \"owner\" ||\r\n                               permissionType === \"group\")) &&\r\n                               (nodeModel && nodeModel.actions &&\r\n                               !!nodeModel.actions.get({signature: 'editpermissions'})),\r\n          title              = (enabled && permissionType === \"owner\") ?\r\n                               lang.ChangeOwnerPermissionCommand :\r\n                               lang.ChangeOwnerGroupPermissionCommand,\r\n          memberTypeSupport  = [0,1],\r\n          isDisable          = (memberTypeSupport.indexOf(type) < 0) && permissionType === \"custom\";\r\n      if (permissionType === \"group\" && status.toolItem.attributes &&\r\n          status.toolItem.attributes.icon) {\r\n        status.toolItem.attributes.icon = \"icon icon-group-change\";\r\n      }\r\n      //set title\r\n      status.toolItem && status.toolItem.set('name', title);\r\n\r\n      return isDisable ? false : enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred          = $.Deferred(),\r\n          permissionModel   = status.model,\r\n          permissionType    = permissionModel.get(\"type\"),\r\n          collection        = permissionModel.collection,\r\n          userExpandDetails = permissionModel.get(\"right_id_expand\"),\r\n          currentRow        = status.targetView.$el,\r\n          self              = this;\r\n      self.targetView = status.originatingView.permissionsContentView;\r\n      var userHasEditPermissions = collection && collection.options && collection.options.node &&\r\n                                   collection.options.node.actions.get(\r\n                                       {signature: 'editpermissions'});\r\n\r\n      if (collection && userHasEditPermissions) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        require(['csui/controls/table/inlineforms/permissions/user.picker/user.picker.view',\r\n              'csui/utils/contexts/factories/member', 'csui/models/permission/nodepermission.model',\r\n              'csui/utils/contexts/factories/user', 'csui/utils/permissions/permissions.precheck'],\r\n            function (UserPickerView, MemberModelFactory, NodePermissionModel, UserModelFactory,\r\n                PermissionPreCheck) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              var memberFilter = status.context.getModel(MemberModelFactory);\r\n              var userPickerView = new UserPickerView({\r\n                context: status.options ? status.options.context : status.context,\r\n                userPickerModel: memberFilter,\r\n                currentRow: currentRow,\r\n                connector: status.connector,\r\n                memberFilter: {type: (permissionType === 'owner' ? [0] : [1])}\r\n              });\r\n              currentRow.addClass(\"csui-changeowner-permission\");\r\n              currentRow.find(\".member-info\").addClass(\"binf-hidden\");\r\n              var userpickerRegion = new Marionette.Region({\r\n                el: currentRow.find(\".csui-inline-owner-change\")\r\n              });\r\n              userpickerRegion.show(userPickerView);\r\n              userPickerView.listenTo(userPickerView,\r\n                  \"change:completed\", function (permissions) {\r\n                    userpickerRegion.currentView.destroy();\r\n                    deferred.resolve();\r\n                  });\r\n              userPickerView.listenTo(userPickerView, \"member:selected:save\",\r\n                  function (args) {\r\n                    var permissions = NodePermissionModel.getReadPermissions(),\r\n                        saveAttr    = {\r\n                          \"permissions\": permissionModel.get(\"permissions\"),\r\n                          \"right_id\": args.get(\"id\"),\r\n                          \"include_sub_types\": PermissionPreCheck.includeSubTypes()\r\n                        };\r\n                    permissionModel.set({'right_id_expand': args}, {silent: true});\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function () {\r\n                      permissionModel.set(saveAttr, {silent: true});\r\n                      userpickerRegion.currentView.destroy();\r\n                      currentRow.removeClass(\"csui-changeowner-permission\");\r\n                      currentRow.find(\".member-info\").removeClass(\r\n                          \"binf-hidden\");\r\n\r\n                      deferred.resolve();\r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      permissionModel.set({'right_id_expand': userExpandDetails}, {silent: true});\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n            });\r\n      } else {\r\n        var msg = _.str.sformat(lang.EditPermissionCommandFailMessage, lang.Owner);\r\n        return deferred.reject(\r\n            new CommandError(msg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n  return ChangeOwnerPermissionCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/delete.permission',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/confirmable',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, _, Backbone, base, CommandModel, CommandHelper,\r\n    CommandError, ConfirmableCommand, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var GlobalMessage;\r\n\r\n  var DeletePermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'DeletePermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var permissionModel      = status.model,\r\n          confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogSingleMessage;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogPublicAccessMessage;\r\n      }\r\n      var msg = this._getMessageWithUserDisplayName(\r\n          confirmDialogMessage, permissionModel);\r\n\r\n      var title = this._getMessageWithUserDisplayName(\r\n          lang.DeletePermissionCommandConfirmDialogTitle, permissionModel);\r\n\r\n      return {\r\n        title: title,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel   = status.model,\r\n          type              = permissionModel && permissionModel.get('right_id_expand') &&\r\n                                               permissionModel.get('right_id_expand').type,\r\n          collection        = permissionModel && permissionModel.collection,\r\n          right_id          = permissionModel && permissionModel.get('right_id'),\r\n          permissionType    = permissionModel && permissionModel.get('type'),\r\n          filterId          = status.filterId,\r\n          nodeModel         = status.nodeModel || (collection && collection.options &&\r\n                                                  collection.options.node)\r\n                                               || (status.originatingView && \r\n                                                  status.originatingView.model),\r\n          enabled           = !filterId && permissionType &&\r\n                              (right_id || permissionType === \"public\") &&\r\n                              nodeModel.get('id') &&\r\n                              nodeModel.actions &&\r\n                              !!nodeModel.actions.get(\r\n                                  {signature: 'editpermissions'}),\r\n          memberTypeSupport = [0,1],\r\n          isDisable         = (memberTypeSupport.indexOf(type) < 0) && permissionType === \"custom\";\r\n      if (enabled) {\r\n        this.setCommandTitle(status.toolItem, permissionModel);\r\n      }\r\n\r\n      return isDisable ? false : enabled;\r\n    },\r\n\r\n    setCommandTitle: function (toolItem, permissionModel) {\r\n      var type = permissionModel.get(\"type\"),\r\n          title;\r\n      if (type === \"owner\") {\r\n        title = lang.DeletePermissionCommandRemoveOwner;\r\n      } else if (type === \"group\") {\r\n        title = lang.DeletePermissionCommandRemoveGroup;\r\n      } else if (type === \"public\") {\r\n        title = lang.DeletePermissionCommandRemovePublicAccess;\r\n      } else {\r\n        title = lang.DeletePermissionCommandRemoveOther;\r\n      }\r\n      toolItem.set(\"name\", title);\r\n    }\r\n  });\r\n\r\n  _.extend(DeletePermissionCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      options || (options = {});\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/utils/permissions/permissions.precheck'\r\n      ], function (localGlobalMessage, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, PermissionPreCheck) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (status.originatingView && status.originatingView.model &&\r\n            status.originatingView.model.get(\"container\")) {\r\n          options.removePermission = true;\r\n          self._executeDeletePermission(status, options, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, PermissionPreCheck)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          self._deletePermission(status, options).then(deferred.resolve, deferred.reject);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _deletePermission: function (status, options) {\r\n      options || (options = {});\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _executeDeletePermission: function (status, options, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, PermissionPreCheck) {\r\n      options || (options = {});\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({\r\n        'removePermission': true,\r\n        'permissionModel': status.model\r\n      });\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: status.originatingView.model,\r\n        permissionModel: status.model,\r\n        removePermission: true,\r\n        applyTo: status.applyTo,\r\n        includeSubTypes: PermissionPreCheck.includeSubTypes(),\r\n        originatingView: status.originatingView\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: function (args) {\r\n              this._performActions(args).then(deferred.resolve, deferred.reject);\r\n            }.bind(this)\r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                            status.model,\r\n          permissionType  = permissionModel.get('type'),\r\n          collection      = permissionModel.collection,\r\n          failureMsg      = this._getMessageWithUserDisplayName(\r\n              lang.DeletePermissionCommandFailMessage, permissionModel),\r\n          deleteAttr;\r\n\r\n      if (collection && collection.options && collection.options.node &&\r\n          collection.options.node.actions.get({signature: 'editpermissions'})) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        var container           = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"container\"),\r\n            permissionModelType = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"permissions_model\");\r\n        if (status.dialog) {\r\n          permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                     status.dialog.options.view.subFolderSelected ? 2 :\r\n                                     (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n          permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n                                              status.dialog &&\r\n                                              status.dialog.options.view.options.includeSubTypes :\r\n              [];\r\n        }\r\n        if (self.originatingView && self.originatingView.blockActions) {\r\n          self.destroyDialog(status);\r\n          self.originatingView.blockActions();\r\n        }\r\n        var jqxhr = permissionModel.destroy({\r\n          wait: true\r\n        }).done(function (response) {\r\n          //update the results\r\n          permissionModel.set('results', response.results);\r\n          self.originatingView && self.originatingView.trigger('permission:changed', self);\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n          var successMsg = self._getMessageWithUserDisplayName(\r\n              permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n              lang.DeletePermissionCommandSuccessMessageWithCount :\r\n              lang.DeletePermissionCommandSuccessMessage, permissionModel);\r\n          GlobalMessage.showMessage('success', successMsg);\r\n          if (permissionType === \"owner\" || permissionType === \"group\") {\r\n            //Check & Process for no owner condition\r\n            collection.processForEmptyOwner && collection.processForEmptyOwner();\r\n          }\r\n          //self.destroyDialog(status);\r\n          deferred.resolve(permissionModel);\r\n\r\n        }).fail(function (error) {\r\n          var commandError = error ? new CommandError(error, permissionModel) :\r\n                             error;\r\n          self.handleFailure(commandError, failureMsg);\r\n          deferred.reject(permissionModel, commandError);\r\n          if (!error) {\r\n            jqxhr.abort();\r\n          }\r\n        }).always(function () {\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n        });\r\n        return deferred.promise();\r\n      }\r\n      else {\r\n        self.destroyDialog(status);\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n    },\r\n\r\n    handleFailure: function (commandError, oneFileFailure) {\r\n      var errObject = Backbone.Model.extend({\r\n            defaults: {\r\n              name: \"\",\r\n              state: 'pending',\r\n              commandName: 'ViewPermission'\r\n            }\r\n          }),\r\n          errObjects;\r\n\r\n      var failedPermissionsCollection = Backbone.Collection.extend({\r\n        model: errObject\r\n      });\r\n      var errCollection = new failedPermissionsCollection();\r\n      errObjects = new errObject({\r\n        name: commandError,\r\n        mime_type: '',\r\n        state: 'rejected'\r\n      });\r\n      errCollection.add(errObjects);\r\n      GlobalMessage.showPermissionApplyingProgress(errCollection, {oneFileFailure: oneFileFailure});\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n\r\n  });\r\n\r\n  return DeletePermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/add.user.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n  var config = module.config();\r\n\r\n  var AddUserOrGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"adduserorgroup\",\r\n      name: lang.CommandNameAddUserorGroup\r\n    },\r\n\r\n    enabled: function (status) {\r\n\r\n      if (config && config.GrantAccessGroupOnly) {\r\n        status.toolItem && status.toolItem.set({'name': lang.addGroups});\r\n      }\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/utils/permissions/permissions.precheck',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel, PermissionPreCheck) {\r\n        GlobalMessage = arguments[2];\r\n        ModalAlert = arguments[3];\r\n\r\n        self._selectAddUserOrGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  permissionModelData = {\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_types: selectedOptions.apply_to > 0 ?\r\n                                       PermissionPreCheck.includeSubTypes() : []\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(permissionModelData, {\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set({\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: 'custom'\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.add(nodePermissionModel);\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddUserOrGroupOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var unSelectableMembers = status.originalCollection &&\r\n                                      status.originalCollection.models &&\r\n                                      status.originalCollection.models.length > 0 ?\r\n                                      status.originalCollection.models :\r\n                                      status.permissionCollection.models;\r\n            unSelectableMembers = _.filter(unSelectableMembers, function (member) {\r\n              return (member.get(\"type\") === \"custom\");\r\n            });\r\n            var grantAccessGrpOnly = config && config.GrantAccessGroupOnly;\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'adduserorgroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: (grantAccessGrpOnly) ? lang.allGroups : lang.allUsersAndGroups,\r\n              dialogTitle: (grantAccessGrpOnly) ? lang.allGroups : lang.addUsersAndGroups,\r\n              startLocation: (grantAccessGrpOnly) ? 'all.groups' : 'all.members',\r\n              adduserorgroup: true,\r\n              nodeModel: status.nodeModel,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              startLocations: (grantAccessGrpOnly) ? ['all.groups', 'member.groups'] :\r\n                  ['all.members', 'member.groups'],\r\n              unselectableMembers: unSelectableMembers,\r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddUserOrGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/add.owner.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n  var config = module.config();\r\n\r\n  var AddOwnerOrOwnerGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"addownerorgroup\",\r\n      name: lang.CommandNameAddOwnerOrOwnerGroup\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection     = status.originalCollection ? status.originalCollection :\r\n                           status.permissionCollection,\r\n          owner          = collection.findWhere({type: 'owner'}),\r\n          noOwnerOrGroup = (owner && owner.get('permissions') === null),\r\n          noGroup        = !collection.findWhere({type: 'group'}),\r\n          enabled        = collection && (status.nodeModel && status.nodeModel.actions\r\n                           && !!status.nodeModel.actions.get({signature: 'editpermissions'})) &&\r\n                           (noOwnerOrGroup ||\r\n                            noGroup || !owner),\r\n          adminPrivilege = status.authUser &&\r\n                           status.authUser.get('privilege_system_admin_rights');\r\n\r\n      if (!adminPrivilege && config &&\r\n          ((config.AdminRestoreOwner && config.AdminRestoreOwnerGroup) ||\r\n           (!noOwnerOrGroup && noGroup && config.AdminRestoreOwnerGroup) ||\r\n           (!noOwnerOrGroup && !noGroup && config.AdminRestoreOwner))) {\r\n        enabled = adminPrivilege;\r\n      }\r\n\r\n      if (enabled && !!status.toolItem) {\r\n        if (noOwnerOrGroup) {\r\n          if (adminPrivilege) {\r\n            status.toolItem.set('name', lang.AddOwnerOrGroup);\r\n          } else {\r\n            if (config && config.AdminRestoreOwner) {\r\n              if (config && !config.AdminRestoreOwnerGroup) {\r\n                status.toolItem.set('name', lang.AddOwnerGroup);\r\n              }\r\n            } else {\r\n              if (config && config.AdminRestoreOwnerGroup) {\r\n                status.toolItem.set('name', lang.AddOwner);\r\n              } else {\r\n                status.toolItem.set('name', lang.AddOwnerOrGroup);\r\n              }\r\n            }\r\n          }\r\n        } else if (noGroup) {\r\n          status.toolItem.set('name', lang.AddOwnerGroup);\r\n        } else {\r\n          status.toolItem.set('name', lang.AddOwner);\r\n        }\r\n      }\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/utils/permissions/permissions.precheck',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel, PermissionPreCheck) {\r\n        GlobalMessage = arguments[2];\r\n        ModalAlert = arguments[3];\r\n\r\n        self._selectAddOwnerOrOwnerGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  type                = selectedMember.get('type') === 0 ? 'owner' : 'group',\r\n                  permissionModelData = {\r\n                    type: type,\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_type: selectedOptions.apply_to > 0 ?\r\n                                      PermissionPreCheck.includeSubTypes() : []\r\n                  },\r\n                  saveAttr            = {\r\n                    right_id: selectedMember.get('id'),\r\n                    apply_to: selectedOptions.apply_to,\r\n                    permissions: selectedPermissions\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeModel ? status.nodeModel.get(\"id\") :\r\n                                           status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(saveAttr, {\r\n                patch: true,\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set(\r\n                    {\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: type,\r\n                      addOwnerGroup: true\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.addOwnerOrGroup(nodePermissionModel);\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddOwnerOrOwnerGroupOptions: function (status, options) {\r\n      var self              = this,\r\n          deferred          = $.Deferred(),\r\n          owner             = status.originalCollection ?\r\n                              status.originalCollection.findWhere({type: 'owner'}) :\r\n                              status.permissionCollection.findWhere({type: 'owner'}),\r\n          displayName       = lang.allUsersAndGroups,\r\n          selectableTypes, title, startLocation, startLocations,\r\n          authUser = status.authUser || status.originatingView.options.authUser ||\r\n                              (status.context && status.context._user);\r\n      if (owner && owner.get('permissions') === null) {\r\n        selectableTypes = [0, 1];\r\n        title = lang.AddOwnerOrGroupDialogTitle;\r\n        startLocation = 'all.members';\r\n        startLocations = ['all.members', 'member.groups'];\r\n        if (config && config.AdminRestoreOwner && !config.AdminRestoreOwnerGroup &&\r\n            !(authUser.get('privilege_system_admin_rights'))) {\r\n          startLocation = 'all.groups';\r\n          displayName = lang.allGroups;\r\n          selectableTypes = [1];\r\n          startLocations = ['all.groups', 'member.groups'];\r\n        } else if (config && !config.AdminRestoreOwner && config.AdminRestoreOwnerGroup &&\r\n                   !(authUser.get('privilege_system_admin_rights'))) {\r\n          startLocation = 'all.members';\r\n          displayName = lang.allUsersAndGroups;\r\n          selectableTypes = [0];\r\n          startLocations = ['all.members', 'member.groups'];\r\n        }\r\n\r\n      }\r\n      else {\r\n        selectableTypes = owner ? [1] : [0];\r\n        title = owner ? lang.AddOwnerGroupDialogTitle : lang.AddOwnerDialogTitle;\r\n        displayName = owner ? lang.allGroups : displayName;\r\n        startLocation = owner ? 'all.groups' : 'all.members';\r\n        startLocations = owner ? ['all.groups', 'member.groups'] : ['all.members', 'member.groups'];\r\n      }\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'addownerorownergroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: displayName,\r\n              dialogTitle: title,\r\n              startLocation: startLocation,\r\n              nodeModel: status.nodeModel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              adduserorgroup: true,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              startLocations: startLocations,\r\n              selectableTypes: selectableTypes,              \r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddOwnerOrOwnerGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/restore.public.access',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/base',\r\n  'csui/utils/log', 'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, lang, base, log, CommandModel,\r\n    CommandError) {\r\n  'use strict';\r\n\r\n  var GlobalMessage;\r\n  var config = module.config();\r\n\r\n  var RestorePublicAccess = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'restorepublicaccess',\r\n      name: lang.CommandNameRestorePublicAccess\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection                   = status.originalCollection ? status.originalCollection :\r\n                                         status.permissionCollection,\r\n          nodeModel                    = status.nodeModel || (collection && collection.options &&\r\n                                                            collection.options.node),\r\n          userHasEditPermissionsAction = nodeModel && \r\n                                         nodeModel.actions.get({signature: 'editpermissions'}),\r\n          authUser = status.authUser || (status.context && status.context._user);\r\n\r\n      if (config && config.AdminRestorePublic) {\r\n        userHasEditPermissionsAction = authUser &&\r\n                                       authUser.get('privilege_system_admin_rights');\r\n      }\r\n      return collection && userHasEditPermissionsAction &&\r\n             (!collection.findWhere({type: 'public'}));\r\n    },\r\n\r\n    execute: function (status) {\r\n      var self       = this,\r\n          deferred   = $.Deferred(),\r\n          collection = status.permissionCollection,\r\n          nodePermissionModel, saveAttr,\r\n          nodeModel  = status.nodeModel || collection.node ||\r\n                       (status.originatingView && status.originatingView.model);\r\n\r\n      require([\r\n        'csui/models/permission/nodepermission.model',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/permissions/permissions.precheck'\r\n      ], function (NodePermissionModel, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, localGlobalMessage, PermissionPreCheck) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (nodeModel && nodeModel.get(\"container\")) {\r\n          self._executeApplyPermission(status, nodeModel, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, NodePermissionModel,\r\n              PermissionPreCheck)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          nodePermissionModel = new NodePermissionModel({type: 'public'}, status);\r\n          saveAttr = {'permissions': NodePermissionModel.getReadPermissions()};\r\n          nodePermissionModel.nodeId = status.nodeId;\r\n          if (status.originatingView && status.originatingView.blockActions) {\r\n            status.originatingView.blockActions();\r\n          }\r\n          nodePermissionModel.save(saveAttr, {\r\n            patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n            // mixin makes it a PUT again (backbone would use PATCH)\r\n            wait: true\r\n          }).done(function () {\r\n            nodePermissionModel.set({publicAccess: true}, {silent: true});\r\n            //collection.addPublicAccess(nodePermissionModel);\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            var successMsg = self._getMessageWithUserDisplayName(\r\n                nodePermissionModel.get('results') &&\r\n                nodePermissionModel.get('results').success > 0 ?\r\n                lang.RestorePublicAccessSuccessMessageWithCount :\r\n                lang.RestorePublicAccessSuccessMessage, nodePermissionModel);\r\n            GlobalMessage.showMessage('success', successMsg);\r\n            deferred.resolve(nodePermissionModel);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                               error;\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            GlobalMessage.showMessage('error', commandError);\r\n            deferred.reject(nodePermissionModel, commandError);\r\n          });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeApplyPermission: function (status, nodeModel, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, NodePermissionModel, PermissionPreCheck) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({'restorePublicAccess': true});\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: nodeModel,\r\n        permissionModel: new NodePermissionModel({type: 'public'}, status),\r\n        permissions: NodePermissionModel.getReadPermissions(),\r\n        includeSubTypes: PermissionPreCheck.includeSubTypes(),\r\n        collection: status.permissionCollection,\r\n        applyTo: status.applyTo,\r\n        removePermission: false,\r\n        originatingView: status.originatingView,\r\n        restorePublicAccess: true\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: function(args) {              \r\n              this._performActions(args).then(deferred.resolve,deferred.reject);\r\n            }.bind(this)\r\n         \r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status) {\r\n      var self                = this,\r\n          deferred            = $.Deferred(),\r\n          permissionModel     = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                                status.model,\r\n          permissions         = status.dialog && status.dialog.options.view.options.permissions,\r\n          originatingView     = status.dialog && status.dialog.options.view.options.originatingView,\r\n          nodeModel           = status.dialog.options.view.model,\r\n          collection          = status.dialog && status.dialog.options.view.options.collection,\r\n          container           = nodeModel && nodeModel.get(\"container\"),\r\n          permissionModelType = nodeModel && nodeModel.get(\"permissions_model\"), saveAttr;\r\n      self.originatingView = originatingView;\r\n      if (status.dialog) {\r\n        permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                   status.dialog.options.view.subFolderSelected ? 2 :\r\n                                   (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n        permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n                                            status.dialog &&\r\n                                            status.dialog.options.view.options.includeSubTypes : [];\r\n      }\r\n      saveAttr = {\r\n        'permissions': permissions,\r\n        'apply_to': permissionModel.apply_to,\r\n        'include_sub_types': permissionModel.include_sub_types\r\n      };\r\n      permissionModel.nodeId = nodeModel.get(\"id\");\r\n      if (self.originatingView && self.originatingView.blockActions) {\r\n        self.originatingView.blockActions();\r\n      }\r\n      permissionModel.save(saveAttr, {\r\n        patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n        // mixin makes it a PUT again (backbone would use PATCH)\r\n        wait: true\r\n      }).done(function () {\r\n        permissionModel.set({publicAccess: true}, {silent: true});\r\n        self.destroyDialog(status);\r\n        collection.addPublicAccess(permissionModel);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        var successMsg = self._getMessageWithUserDisplayName(\r\n            permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n            lang.RestorePublicAccessSuccessMessageWithCount :\r\n            lang.RestorePublicAccessSuccessMessage, permissionModel);\r\n        GlobalMessage.showMessage('success', successMsg);\r\n        deferred.resolve(permissionModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, permissionModel) :\r\n                           error;\r\n        self.destroyDialog(status);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        GlobalMessage.showMessage('error', commandError);\r\n        deferred.reject(permissionModel, commandError);\r\n      }); \r\n      return deferred.promise();     \r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n  });\r\n\r\n  return RestorePublicAccess;\r\n});\r\n\n","csui.define('csui/utils/commands/personalize.page',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper, lang) {\r\n  'use strict';\r\n  var config = _.extend({\r\n    enablePersonalization: true\r\n  }, config, module.config());\r\n\r\n  var PersonalizePageCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'PersonalizePage',\r\n      name: lang.personalizePage\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          perspective = context.perspective;\r\n      return config.enablePersonalization && perspective && perspective.get('type') === 'flow';\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n      enablePersonalization = (options && options.enablePersonalization) ||\r\n                            config.enablePersonalization;\r\n      if (enablePersonalization) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._initPersonalization(status, options, context);\r\n      }\r\n    },\r\n\r\n    _initPersonalization: function (status, options, context) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      require(['csui/perspective.manage/pman.view', 'csui/utils/contexts/factories/node', \r\n      'csui/models/perspective/personalization.model'],\r\n          function (PManView,  NodeModelFactory, PersonalizationModel) {\r\n                var node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n                              currentPerspective = context.perspective.toJSON(),\r\n                personalizationModel = new PersonalizationModel(currentPerspective, {node: node, context: context});\r\n                personalizationModel.fetch().then(function() {\r\n                  var pmanView = new PManView({\r\n                    context: context,\r\n                    perspective: personalizationModel,\r\n                    mode: PManView.MODE_PERSONALIZE\r\n                  });\r\n                  pmanView.show();\r\n                  deferred.resolve();\r\n                });                \r\n          }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n  });\r\n\r\n  return PersonalizePageCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/version.settings',['csui/models/command'\r\n], function (CommandModel) {\r\n  'use strict';\r\n\r\n  var VersionSettingsCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"VersionsControl\",\r\n      command_key: ['versionscontrol'],\r\n      scope: \"single\",\r\n      name: 'VersionsSettings'\r\n    }\r\n    // This command is not to be executed\r\n  });\r\n\r\n  return VersionSettingsCommand;\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.blog',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenBlogCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenBlog'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 356 || type === 357;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var blog = node.get('type') === 356;\r\n      return {\r\n        func: 'll',\r\n        objAction: blog ? 'view' : 'viewincontainer',\r\n        // TODO: Is the logStopConditionID parameter important for the blog entry?\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenBlogCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.faq',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenFaqCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenFAQ'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123475 || type === 123476;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var faq = node.get('type') === 123475,\r\n          urlQuery = $.param({\r\n            func: 'll',\r\n            objAction: 'view',\r\n            objId: faq ? node.get('id') : node.get('volume_id'),\r\n            nexturl: location.href\r\n          });\r\n      return faq ? urlQuery : urlQuery + '#entry_' + node.get('id');\r\n    }\r\n\r\n  });\r\n\r\n  return OpenFaqCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.forum',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenForumCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenForum'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123469 || type === 123470;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var forum = node.get('type') === 123469;\r\n      return {\r\n        func: 'll',\r\n        objAction: forum ? 'view' : 'viewincontainer',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenForumCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.wiki',['csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function ($, Url, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenWikiCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenWiki'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 5573 || type === 5574;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var url = OpenClassicPageCommand.prototype.getUrl.apply(this, arguments),\r\n          wiki = node.get('type') === 5573;\r\n      return wiki ? url : Url.combine(url, 'open', node.get('id'));\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var wiki = node.get('type') === 5573;\r\n      if (wiki) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return OpenWikiCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.mailstore',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenMailStoreCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMailStore'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 3030331;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var mailStore = node.get('type') === 3030331;\r\n      if (mailStore) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return OpenMailStoreCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.document/csui.open.document.delegates',[\r\n  'module', 'csui/lib/underscore',\r\n  'csui/utils/commands/open.specific.node.perspective',\r\n  'csui/utils/commands/open'\r\n], function (module, _, OpenSpecificNodePerspectiveCommand,\r\n    OpenDocumentContentCommand) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    allowViewContent: true,\r\n    allowPerspective: false\r\n  }, module.config());\r\n\r\n  return [\r\n    // Force the perspective to be opened instead of the content if the\r\n    // according flag has been flipped. Otherwise the content opens by default.\r\n    {\r\n      sequence: 500,\r\n      command: OpenSpecificNodePerspectiveCommand,\r\n      decides: function () {\r\n        return config.allowPerspective;\r\n      }\r\n    },\r\n    // Open the document content using one of open content plugins, if it\r\n    // is not disabled. (It is enabled by default.)\r\n    {\r\n      sequence: 1000,\r\n      command: OpenDocumentContentCommand,\r\n      decides: function () {\r\n        return config.allowViewContent;\r\n      }\r\n    },\r\n    // Fall back to opening the node perspective if the node supports Smart UI\r\n    // and is openability is not forbidden.\r\n    {\r\n      sequence: 10000,\r\n      command: OpenSpecificNodePerspectiveCommand\r\n    }\r\n  ];\r\n});\r\n\n","csui.define('csui/utils/commands/goto.location',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'csui/models/node/node.model'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  var GoToLocationCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"goToLocation\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && this._isSupported(node);\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      var supportedObjects = [144], //this may be extend in future for other object types also\r\n          support          = $.inArray(node.get('type'), supportedObjects) !== -1;\r\n      return support;\r\n    },\r\n\r\n    // TODO: Remove this, as soon as the actions for parents \r\n    // or other expanded nodes  are returned by the server\r\n    _makeAccessible: function () {\r\n      return ['open'];\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          nodeModel,\r\n          that     = this;\r\n      if (node && this._isSupported(node)) {\r\n        nodeModel = node.parent;\r\n        if (nodeModel && nodeModel.get('type') === undefined) {\r\n          // When the object is not accessable then we are not getting the parent type so we\r\n          // need to retrieve this value as per the DefaultActionController implementation\r\n          var parentNode = new NodeModel({\r\n            id: nodeModel.get('id')\r\n          }, {\r\n            connector: nodeModel.connector,\r\n            commands: this._makeAccessible()\r\n          });\r\n\r\n          parentNode.fetch().done(function (resp) {\r\n            nodeModel = parentNode;\r\n            status.originatingView && that.executeDefaultAction(nodeModel, status.originatingView);\r\n            deferred.resolve();\r\n          }).fail(function (resp) {\r\n            require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n              var error = new base.Error(resp);\r\n              ModalAlert.showError(error.message);\r\n            });\r\n            deferred.reject();\r\n          });\r\n        } else {\r\n          status.originatingView && this.executeDefaultAction(nodeModel, status.originatingView);\r\n          deferred.resolve();\r\n        }\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    executeDefaultAction: function (node, originatingView) {\r\n      var args = {node: node};\r\n      originatingView.trigger('before:defaultAction', args);\r\n      if (!args.cancel) {\r\n        var self = originatingView;\r\n        originatingView.defaultActionController && originatingView.defaultActionController\r\n            .executeAction(node, {\r\n              context: originatingView.context,\r\n              originatingView: originatingView\r\n            })\r\n            .done(function () {\r\n              self.trigger('executed:defaultAction', args);\r\n            });\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return GoToLocationCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/collect',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/utils/url', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/collection/nls/lang', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commandhelper'\r\n], function (module, require, $, Backbone, base, Url, _, lang, CommandModel,\r\n    MultipleItemsCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView, nodeLinks;\r\n\r\n  var CollectCommandParent = CommandModel.extend({});\r\n  _.extend(CollectCommandParent.prototype, MultipleItemsCommand); //apply required mixin\r\n\r\n  var Collect = CollectCommandParent.extend({\r\n\r\n    defaults: {\r\n      signature: \"Collect\",\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForOne: lang.CollectOneItemSuccessMessage,\r\n        formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n        formatForMany: lang.CollectManyItemsSuccessMessage,\r\n        formatForFive: lang.CollectManyItemsSuccessMessage,\r\n      },\r\n      errorMessages: {\r\n        formatForOne: lang.CollectOneItemFailMessage,\r\n        formatForTwo: lang.CollectManyItemsFailMessage,\r\n        formatForMany: lang.CollectManyItemsFailMessage,\r\n        formatForFive: lang.CollectManyItemsFailMessage,\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var enable = this._isSupported(status.container),\r\n          nodes  = CommandHelper.getAtLeastOneNode(status);\r\n      enable = !!enable && !!nodes && nodes.length;\r\n      return enable;\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      var unsupportedObjects = [298], //this may be extend in future for other object types also\r\n          // in case of favorites and recently widgets container is undefined so still need to enable command\r\n          support            = !!node ? $.inArray(node.get('type'), unsupportedObjects) === -1 :\r\n                               true;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var that     = this,\r\n          deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n        'csui/utils/taskqueue', 'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node', 'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        CollectionConflictView = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        UploadFileCollection = arguments[3];\r\n        PageLeavingBlocker = arguments[4];\r\n        NextNodeModelFactory = arguments[5];\r\n        nodeLinks = arguments[6];\r\n\r\n        that._addToCollection(status, options).done(function (container) {\r\n          var selectedNodes    = status.nodes.models,\r\n              nodes            = _.map(selectedNodes, function (node) {\r\n                return {\r\n                  name: node.get('name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  node: node\r\n                };\r\n              }),\r\n              targetFolder     = container.nodes,\r\n              uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n              connector        = (status.container && status.container.connector) ||\r\n                                 (status.originatingView && status.originatingView.connector) || \r\n                                 (status.collection && status.collection.connector) ||\r\n                                 (selectedNodes[0] && selectedNodes[0].connector);\r\n          that._announceOperationStart(status);\r\n          uploadCollection.each(function (fileUpload) {\r\n            var node = fileUpload.get('node');\r\n            fileUpload.node = node;\r\n            fileUpload.unset('node');\r\n            fileUpload.set('mime_type', node.get('mime_type'));\r\n          });\r\n\r\n          that._addSelectedNodesToCollection(uploadCollection, connector, targetFolder[0],\r\n              status.collection)\r\n              .then(function (promises) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n                var result = that._checkPromisess(promises);\r\n                if (result.failedNodes.length) {\r\n                  that._showDialog(result.failedNodes).then(\r\n                      function (resolveOption, dialog) {\r\n                        dialog.kill();\r\n                        //if any success items are there then show global message\r\n                        if (result.successNodes.length) {\r\n                          var msgOptions = {\r\n                            context: status.context,\r\n                            nextNodeModelFactory: NextNodeModelFactory,\r\n                            link_url: nodeLinks.getUrl(targetFolder[0]),\r\n                            targetFolder: targetFolder[0]\r\n                          };\r\n                          that.showSuccessWithLink(result.successNodes.models, msgOptions);\r\n                        }\r\n                      });\r\n\r\n                } else if (result.successNodes.length) {\r\n                  // display result message\r\n                  var msgOptions = {\r\n                    context: status.context,\r\n                    nextNodeModelFactory: NextNodeModelFactory,\r\n                    link_url: nodeLinks.getUrl(targetFolder[0]),\r\n                    targetFolder: targetFolder[0]\r\n                  };\r\n                  that.showSuccessWithLink(promises, msgOptions);\r\n                }\r\n              });\r\n          that._announceOperationEnd(status);\r\n          var targetNodeInCurrentCollection;\r\n          if (status.collection && status.originatingView &&\r\n              status.originatingView.findNodeFromCollection) {\r\n            targetNodeInCurrentCollection = status.originatingView.findNodeFromCollection(\r\n                status.collection, targetFolder[0]);\r\n          } else if (status.collection) {\r\n            targetNodeInCurrentCollection = status.collection.get(targetFolder[0].get('id')) ||\r\n                                            status.collection.findWhere(\r\n                                                {id: targetFolder[0].get('id')});\r\n          }\r\n          targetNodeInCurrentCollection &&\r\n          targetNodeInCurrentCollection.fetch();\r\n        });\r\n\r\n        deferred.resolve();\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addToCollection: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var pickerOptions = _.extend({\r\n              selectableTypes: [298],\r\n              addableTypes: [298],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.selectCollectionDialogTitle,\r\n              selectButtonLabel: lang.selectCollectButtonLabel,\r\n              globalSearch: true,\r\n              selectMultiple: false,\r\n              context: options ? options.context : status.context,\r\n              startLocation: 'recent.containers',\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n        targetCollection) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          count    = 0,\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var node     = model.node,\r\n                    node_id  = node.get('id'),\r\n                    targetId = targetFolder.get('id');\r\n                self._collectNode(connector, targetId, node_id)\r\n                    .done(function () {\r\n\r\n                      model.set('count', 1);\r\n                      model.deferred.resolve(model);\r\n\r\n                      deferred.resolve(model);\r\n                    })\r\n                    .fail(function (cause) {\r\n                      deferred.resolve(model);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            count++;\r\n            return deferred.promise(promises);  // return promises\r\n          });\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.CollectingOneItem,\r\n        oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n        multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n        oneFilePending: lang.CollectingOneItem,\r\n        multiFilePending: lang.CollectingItems,\r\n        oneFileFailure: lang.CollectOneItemFailMessage,\r\n        multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n        someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n        someFilePending: lang.CollectingItems,\r\n        someFileFailure: lang.CollectManyItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _collectNode: function (connector, targetFolderID, node_id) {\r\n      var deferred = $.Deferred();\r\n      var nodeAttr = {\r\n        \"collection_id\": targetFolderID\r\n      };\r\n\r\n      var collectOptions = {\r\n        url: Url.combine(connector.getConnectionUrl().getApiBase('v2'), '/nodes/' + node_id),\r\n        type: 'PUT',\r\n        data: nodeAttr,\r\n        contentType: 'application/x-www-form-urlencoded'\r\n      };\r\n\r\n      connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n        deferred.resolve(resp);\r\n\r\n      }).fail(function (resp) {\r\n        deferred.reject(resp);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _checkPromisess: function (promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var successPromises = new Backbone.Collection(),\r\n          failedPromises  = new Backbone.Collection();\r\n\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          if (!prom.cancelled) {\r\n            if (prom.get(\"count\") === undefined) {\r\n              //which is not resolved or rejected\r\n            } else if (prom.get(\"count\")) {\r\n              successPromises.push(prom);\r\n            }\r\n            else {\r\n              failedPromises.push(prom);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        successNodes: successPromises,\r\n        failedNodes: failedPromises\r\n      };\r\n    },\r\n\r\n    _showDialog: function (conflictFiles) {\r\n      var deferred = $.Deferred(),\r\n          buttons  = [{\r\n            id: 'close',\r\n            label: lang.conflictsDialogCloseLabel,\r\n            toolTip: lang.conflictsDialogCloseLabel,\r\n            click: function (args) {\r\n              deferred.resolve('close', args.dialog);\r\n            }\r\n          }];\r\n      this._showConflictDialog(conflictFiles, buttons);\r\n      return deferred;\r\n    },\r\n\r\n    _showConflictDialog: function (collection, buttons) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n        var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n            dialog         = new DialogView({\r\n              title: failureMessage,\r\n              midSize: true,\r\n              iconLeft: 'csui-icon-notification-information',\r\n              className: \"csui-collection-conflicts-dialog\",\r\n              view: self._getListView(collection),\r\n              buttons: buttons\r\n            });\r\n        dialog.show();\r\n        return dialog;\r\n      });\r\n\r\n    },\r\n\r\n    _getListView: function (conflictFiles) {\r\n      var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n      return retVal;\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return Collect;\r\n\r\n});\r\n\n","csui.define('bundles/csui-commands',[\r\n  // Commands\r\n  'csui/integration/folderbrowser/commands/go.to.node.history',\r\n  'csui/integration/folderbrowser/commands/open.full.page.container',\r\n  'csui/utils/commands',\r\n  'csui/utils/commands/add.categories',\r\n  'csui/utils/commands/add',\r\n  'csui/utils/commands/add.item.metadata',\r\n  'csui/utils/commands/add.version',\r\n  'csui/utils/commands/browse',\r\n  'csui/utils/commands/collection/collect.items',\r\n  'csui/utils/commands/collection/remove.collected.items',\r\n  'csui/utils/commands/confirmable',\r\n  'csui/utils/commands/copy',\r\n  'csui/utils/commands/copy.link',\r\n  'csui/utils/commands/create.perspective',\r\n  'csui/utils/commands/delete',\r\n  'csui/utils/commands/download',\r\n  'csui/utils/commands/open.document/open.document',\r\n  'csui/utils/commands/zipanddownload',\r\n  'csui/utils/commands/edit',\r\n  // TODO: Move these 3 commands and also their toolbar\r\n  // configurations (flyouts) to les.fastedit.\r\n  'csui/utils/commands/editactivex',\r\n  'csui/utils/commands/editofficeonline',\r\n  'csui/utils/commands/edit.perspective',\r\n  'csui/utils/commands/editwebdav',\r\n  'csui/utils/commands/email.link',\r\n  'csui/utils/commands/execute.saved.query',\r\n  'csui/utils/commands/favorite.add',\r\n  'csui/utils/commands/favorite.remove',\r\n  'csui/utils/commands/inlineedit',\r\n  'csui/utils/commands/move',\r\n  'csui/utils/commands/multiple.items',\r\n  'csui/utils/commands/navigate',\r\n  'csui/utils/commands/node',\r\n  'csui/utils/commands/open',\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commands/open.discussion',\r\n  'csui/utils/commands/open.milestone',\r\n  'csui/utils/commands/open.channel',\r\n  'csui/utils/commands/open.news',\r\n  'csui/utils/commands/open.poll',\r\n  'csui/utils/commands/open.prospector',\r\n  'csui/utils/commands/open.specific.classic.page',\r\n  'csui/utils/commands/open.specific.node.perspective',\r\n  'csui/utils/commands/open.task',\r\n  'csui/utils/commands/open.taskgroup',\r\n  'csui/utils/commands/open.tasklist',\r\n  'csui/utils/commands/open.topic',\r\n  'csui/utils/commands/permissions',\r\n  'csui/utils/commands/properties',\r\n  'csui/utils/commands/rename',\r\n  'csui/utils/commands/rename.favorite',\r\n  'csui/utils/commands/reserve',\r\n  'csui/utils/commands/run.livereport',\r\n  'csui/utils/commands/sign.out',\r\n  'csui/utils/commands/switch.to.classic',\r\n  'csui/utils/commands/unreserve',\r\n  'csui/utils/commands/user.profile',\r\n  'csui/utils/commands/versions',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/promote.version',\r\n  'csui/utils/commands/versions/properties',\r\n  'csui/utils/commands/filter',\r\n  'csui/utils/commands/description.toggle',\r\n  'csui/utils/commands/thumbnail.toggle',\r\n  'csui/utils/commands/save.filter',\r\n  'csui/utils/commands/maximize.widget.view',\r\n  'csui/utils/commands/restore.widget.size',\r\n  'csui/utils/commands/permissions/apply.permission',\r\n  'csui/utils/commands/permissions/edit.permission',\r\n  'csui/utils/commands/permissions/change.owner.permission',\r\n  'csui/utils/commands/permissions/delete.permission',\r\n  'csui/utils/commands/permissions/add.user.group',\r\n  'csui/utils/commands/permissions/add.owner.group',\r\n  'csui/utils/commands/permissions/restore.public.access',\r\n  'csui/utils/commands/permissions/permission.util',\r\n  'csui/utils/commands/personalize.page',\r\n  'csui/utils/commands/version.settings',\r\n\r\n  // TODO: Remove this. Localizable string for csui commands  are\r\n  // private in csui and must not be referred to from other components.\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/nls/root/localized.strings',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/collection/nls/root/lang',\r\n\r\n  // TODO: Remove this, as long as the module owners take over\r\n  // the commands and default action rules\r\n  'csui/temporary/cop/commands/open.blog',\r\n  'csui/temporary/cop/commands/open.faq',\r\n  'csui/temporary/cop/commands/open.forum',\r\n  'csui/temporary/cop/commands/open.wiki',\r\n  'csui/temporary/cop/commands/open.mailstore',\r\n\r\n  // Other modules, that commands directly depend on.\r\n  'csui/dialogs/file.open/file.open.dialog',\r\n  'csui/models/command',\r\n  'csui/models/commands',\r\n  'csui/utils/accessibility',\r\n  'csui/utils/command.error',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.document/csui.open.document.delegates',\r\n  'csui/utils/commands/open.document/delegates/open.document.delegates',\r\n  'csui/utils/commands/open.plugins/open.plugins',\r\n  'csui/utils/commands/goto.location',\r\n  'csui/utils/commands/collection/collect',\r\n  'csui/utils/node.links/node.links',\r\n  'csui/utils/routing'\r\n], {});\r\n\n"]}