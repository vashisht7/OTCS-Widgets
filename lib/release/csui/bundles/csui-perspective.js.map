{"version":3,"sources":["../../src/perspective.manage/impl/nls/lang.js","../../src/perspective.manage/impl/nls/root/lang.js","../../src/perspective.manage/impl/options.form.wrapper!hbs","../../src/perspective.manage/impl/options.form!css","../../src/perspective.manage/impl/options.form.view.js","../../src/perspective.manage/impl/widget.item!hbs","../../src/perspective.manage/impl/widget.drag.template!hbs","../../src/perspective.manage/impl/widget.list.view.js","../perspective.manage/impl/perspectivelayouts!csui-ext","../../src/perspective.manage/impl/perspectivelayouts.js","../../src/perspective.manage/impl/pman.panel!hbs","../../src/perspective.manage/impl/list.item!hbs","../../src/perspective.manage/impl/list!hbs","../../src/perspective.manage/impl/pman.panel!css","../../src/perspective.manage/impl/pman.panel.view.js","../../src/perspective.manage/impl/pman!hbs","../../src/perspective.manage/impl/pman!css","../../src/perspective.manage/behaviours/impl/nls/lang.js","../../src/perspective.manage/behaviours/impl/nls/root/lang.js","../../src/perspective.manage/behaviours/impl/widget.masking!hbs","../../src/perspective.manage/behaviours/impl/widget.masking!css","../../src/perspective.manage/behaviours/pman.widget.config.behaviour.js","../../src/perspective.manage/pman.view.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/lang.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/root/lang.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder!hbs","../../src/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder!css","../../src/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/lang.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/root/lang.js","../../src/perspective.manage/widgets/perspective.widget/impl/perspective.widget!hbs","../../src/perspective.manage/widgets/perspective.widget/impl/perspective.widget!css","../../src/perspective.manage/widgets/perspective.widget/perspective.widget.view.js","../../src/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json!json","../../src/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json!json","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/root/perspective.placeholder.manifest.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest!i18n","../../src/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/root/perspective.widget.manifest.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest!i18n","csui-perspective.js"],"names":["csui","define","root","en-us","en","layoutTabTitle","widgetTabTitle","expandTab","collapseTab","noTitle","goBackTooltip","templateMessage","changePageLayoutConfirmatonText","proceedButton","changeLayoutCancelButton","FlowLayoutTitle","LcrLayoutTitle","perspectiveSaveSuccess","personalizationSaveSuccess","saveConfirmMsg","saveConfirmTitle","addWidget","save","close","cancel","reset","resetConfirmMsg","configNotSupported","resetSuccessful","module","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","helper","this","escapeExpression","title","helperMissing","call","name","hash","description","registerPartial","_","$","Backbone","Marionette","Alpaca","LayoutViewEventsPropagationMixin","PerfectScrollingBehavior","FormView","lang","PerspectiveUtil","WidgetOptionsFormWrapperView","LayoutView","extend","className","regions","bodyRegion","behaviors","PerfectScrolling","behaviorClass","scrollYMarginOffset","templateHelpers","options","manifest","ui","unSupportedConfig","constructor","prototype","apply","arguments","_createForm","formModel","widgetOptionsFormView","WidgetOptionsFormView","context","model","mode","listenToOnce","trigger","bind","listenTo","field","_hasSchema","schema","properties","isEmpty","refresh","callback","onRender","hide","_prepareFormModel","hasValidSchema","_normalizeOptions","attributes","fields","show","onPopoverShow","popover","find","addClass","getValues","_getOptionsData","validate","reqVal","hasRequiredFields","reqFields","required","each","fieldName","_isPreviewWidget","widgetConfig","type","JSON","parse","stringify","formOptions","_addWidgetSizePropertyIfSupported","Model","perspectiveView","getSupportedWidgetSizes","supportedKinds","widgetView","length","kindSchema","widgetSizeTitle","widgetSizeDescription","enum","map","sk","kind","kindOption","optionLabels","label","removeDefaultNone","selectedKind","size","selected","widgetSizeProperty","sizeSchema","sizeOptions","push","_resolveOptionsType","getSchemaType","isArray","defaultSchemaFieldMapping","schemaProperies","optionFields","hasValidTypes","fieldId","fieldOpts","fieldData","optType","getFieldClass","defaults","item","items","isUndefined","default","form","_modifyModel","alpaca","hideInitValidationError","1","blockParams","depths","stack1","lambda","draggable","fn","program","inverse","noop","icon","2","widgets","useDepths","header","body","base","Lang","WidgetCollection","WidgetItemTemplate","WidgetDragTemplate","config","dragImageOffsetTop","dragImageOffsetLeft","WidgetItemView","ItemView","tagName","widgetCollection","Collection","dndContainer","models","accordionHeader","accordionContent","accordionHeaderIcon","widget","events","click @ui.accordionHeader","dragstart @ui.widget","dragend @ui.widget","toggle","isClosed","hasClass","toggleClass","parentView","$el","removeClass","onTransitionEnd","_makeWidgetSortable","hasDragDropNative","document","createElement","dragDrop","_hasNativeDragImageSupport","on","_handleDragImageForIE","self","widgetEls","parent","get","sortable","connectWith","containment","event","widgetModel","index","widgetDragTemplate","widgetDragTemplateView","newWidget","render","width","height","css","opacity","appendTo","closest","tolerance","cursorAt","top","left","start","placeholder","dragStart","stop","dragEnd","e","originalEvent","$img","clone","currentTarget","text","Math","max","pageY","pageX","position","pointerEvents","setTimeout","remove","dataTransfer","setData","toJSON","onDragStart","setDragImage","window","DataTransfer","Clipboard","onDragEnd","allWidgets","fetch","done","collection","_groupWidgetsByModule","initialize","bindAll","renderItem","itemView","el","append","moduleCollection","filter","has","deprecated","set","groupBy","serverModule","id","val","key","first","replace","add","_sanitiseWidgetLibrary","onInitWidgets","empty","extraPerspectiveLayouts","perspectivelayouts","union","iconClass","goBackAria","require","BlockerView","WidgetListView","perspectiveLayouts","ListItemTemplate","ListTemplate","PManPanelView","click @ui.layoutTab","tabPannel","listPannel","layoutTab","widgetTab","contentParent","suppressScrollX","onPanelOpen","accordionView","triggerMethod","accordionRegion","Region","blockActions","unblockActions","imbue","listView","destroy","onTabClicked","args","itemClassName","pmanView","listregion","ListView","ListItemView","click .csui-layout-item:not(.binf-active)","debounce","perspective","CompositeView","any","behavior","ViewCollection","idAttribute","back","click @ui.back","childEvents","change:layout","set:active","childViewContainer","childView","childViewOptions","onClickBack","preventDefault","stopPropagation","setActive","onChangeLayout","ModalAlertView","confirmWarning","buttons","showYes","labelYes","showNo","labelNo","personalizeMode","deleteConfirmMsg","deleteConfirmTitle","replaceConfirmMsg","replaceConfirmTitle","removeWidget","configNeeded","hideWidget","showWidget","widgetTitle","3","isEditMode","i18n","log","WidgetModel","maskingTemplate","DEFAULTS","removeConfirmMsg","removeConfirmTitle","configNeededMessage","confirmOnRemove","allowReplace","notifyUpdatesImmediatly","perspectiveMode","WidgetMaskingView","classNames","isHidden","isHiddenWidget","widgetState","unique","join","isEditPage","delete","masking","hideWidgetBtn","showWidgetBtn","configureEvents","click @ui.masking","click @ui.delete","evts","drop","dragover","dragenter","dragleave","click @ui.hideWidgetBtn","click @ui.showWidgetBtn","personalizable","dropCounter","_doRefreshMask","$popoverEl","binf_popover","_isConfigurable","placeholderWidget","MODE_EDIT_PERSPECTIVE","_loadManifest","selfConfigurable","_adoptToSelfConfigurableWidget","_createOptionsForm","isDestroyed","openCallout","___pman_isdropped","___pman_opencallout","isWidgetReplaced","_updateWidgetOptions","optionsFormView","_showOptionsCallout","onDestroy","isEmptyPlaceholder","MODE_PERSONALIZE","isPersonalWidget","_notifyConfigChanges","isValid","_doDeleteWidget","onDrop","attr","_showCallout","is","target","forceShow","isIE11","activeElement","blur","_closePopover","_calculatePopoverPlacement","_showPopover","afterRenderCallback","_onChangeField","adjust","_determineCalloutPlacement","placement","mirror","$popoverContainer","availableSpace","popoverOptions","html","content","viewport","selector","perspectiveSelector","padding","animation","off","_handleCalloutHide","next","itemFirst","ele","_registerPopoverEvents","popoverLabelElemId","uniqueId","popoverHeader","_hideCallout","cid","view","_documentClickHandler","_windowResizeHandler","_unregisterPopoverEvents","_validateWidgetConfig","_enableorDisableSaveButton","isFunction","validateConfiguration","action","saveBtn","hasError","prop","reloadForLiveData","softUpdate","oldOptions","isOptionsSame","isEqual","widgetType","widgetToReplace","isNodeAttached","value","_evalRequiredFormWidth","formWidth","scrollWidth","offsetWidth","_calculateSpaceAroundWidget","documentWidth","leftOffset","offset","rightOffset","right","rightFlip","leftFlip","i","perfectSpace","highSpace","isRtl","settings","rtl","allSpaces","spacings","current","perspectiveWidget","undefined","Deferred","resolve","deferred","then","error","reject","promise","onDeleteClick","alertDialog","confirmQuestion","yes","_doReplaceWidget","isEligibleForLiveWidget","onDragOver","onDragEnter","siblings","onDragLeave","_extractWidgetToDrop","dragData","getData","userConfirmed","_updateStyles","result","_onHideWidget","setWidgetHidden","_onShowWidget","Behavior","getPManPlaceholderWidget","_ensureWidgetElement","isObject","$widgetEl","Error","_checkAndApplyMask","children","_resolveWidgetConfiguration","message","maskingView","getPManWidgetConfig","isUpdating","NonEmptyingRegion","ApplicationScopeModelFactory","NodeModelFactory","UserModelFactory","PersonalizationModel","pmanContainer","pmanPanel","cancelEdit","addIcon","trashArea","resetBtn","click @ui.cancelEdit","click @ui.addIcon","click @ui.saveBtn","click @ui.resetBtn","applyMasking","container","applicationScope","getModel","_prepareForEdit","_registerEventHandler","newLayoutType","setPerspective","silent","_triggerEditMode","togglePannel","_savePerspective","_onChangePerspective","_doExitPerspective","_doCleanup","originalPerspective","_clonePrespective","isNew","_getDefaultPerspectiveConfig","original","perspectiveConfig","getPerspective","getContainer","contains","class","center","perspectiveChanges","update","_onSaveSuccess","_onSaveError","_showMessage","contextPerspectiveMode","sourceModel","_getSourceModel","updatePerspective","getPerspectiveId","personalizations","personalization","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","GlobalMessage","showMessage","onClickSave","popoverTarget","onClickReset","_doReset","originalConfig","params","onClickClose","_closeToolsPanel","_openToolsPanel","pmanPanelView","_initializeWidgets","pmanPanelRegion","droppable","hoverClass","accept","_beforeTransition","perspectiveContainer","_documentClick","dndWidgetsHere","onShow","noConfig","clickToConfig","widgetMessage","wConfig","wTitle","$schema","styleLoad"],"mappings":"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","file":"csui-perspective.js","sourcesContent":["csui.define('csui/perspective.manage/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/impl/nls/root/lang',{\r\n  layoutTabTitle: 'Change page layout',\r\n  widgetTabTitle: 'Add widget',\r\n  expandTab: 'Expand tab',\r\n  collapseTab: 'Collapse tab',\r\n  noTitle: 'Title not available',\r\n  goBackTooltip: 'Go back',\r\n  templateMessage: 'Drag and Drop tile in position',\r\n  changePageLayoutConfirmatonText: 'All your previously added and configured widgets will be lost!',\r\n  proceedButton: 'Proceed',\r\n  changeLayoutCancelButton: 'Cancel',\r\n  FlowLayoutTitle: 'Flow layout',\r\n  LcrLayoutTitle: 'Left center right layout',\r\n  perspectiveSaveSuccess: 'Perspective has been updated successfully.',\r\n  personalizationSaveSuccess: 'Changes saved successfully.',\r\n  saveConfirmMsg: 'Please be aware this action will update all perspective overrides using this layout configuration. If you do not want this to happen, you should create a new perspective.',\r\n  saveConfirmTitle: 'Save perspective',\r\n  addWidget: 'Add widget',\r\n  save: 'Save',\r\n  close: 'Close',\r\n  cancel: 'Cancel',\r\n  reset: 'Reset',\r\n  resetConfirmMsg: 'Page will be reset to default page configured by the administrator.',\r\n  configNotSupported:\"This widget cannot be configured with edit page.\",\r\n  resetSuccessful: 'Reset to original page was successful.'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/options.form.wrapper',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-pman-form-header\\\">\\r\\n    <div class=\\\"csui-pman-form-title\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"title\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n    <div class=\\\"csui-pman-form-description\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"description\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n    <div class=\\\"csui-pman-config-unsupported\\\">\\r\\n        <div class=\\\"csui-state\\\">\\r\\n            <span class=\\\"csui-state-icon csui-icon csui-icon-notification-error-white\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"csui-error-message\\\">\\r\\n            <span>\"\n    + this.escapeExpression(((helper = (helper = helpers.configNotSupported || (depth0 != null ? depth0.configNotSupported : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"configNotSupported\",\"hash\":{}}) : helper)))\n    + \"</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"csui-pman-form-content cs-formview-wrapper\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_options.form.wrapper', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/options.form',[],function(){});\n","csui.define('csui/perspective.manage/impl/options.form.view',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/lib/alpaca/js/alpaca',\r\n  'csui/controls/mixins/layoutview.events.propagation/layoutview.events.propagation.mixin',\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/controls/form/form.view',\r\n  'i18n!csui/perspective.manage/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/impl/options.form.wrapper',\r\n  'csui/utils/perspective/perspective.util',\r\n  'css!csui/perspective.manage/impl/options.form',\r\n], function (_, $, Backbone, Marionette, Alpaca, LayoutViewEventsPropagationMixin,\r\n    PerfectScrollingBehavior,\r\n    FormView, lang, template, PerspectiveUtil) {\r\n\r\n  var WidgetOptionsFormWrapperView = Marionette.LayoutView.extend({\r\n\r\n    template: template,\r\n\r\n    className: 'csui-pman-form-wrapper',\r\n\r\n    regions: {\r\n      bodyRegion: '.csui-pman-form-content'\r\n    },\r\n\r\n    behaviors: {\r\n      PerfectScrolling: {\r\n        behaviorClass: PerfectScrollingBehavior,\r\n        scrollYMarginOffset: 1\r\n      }\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        title: this.options.manifest.title,\r\n        description: this.options.manifest.description,\r\n        configNotSupported: lang.configNotSupported\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      unSupportedConfig: '.csui-pman-config-unsupported',\r\n      description: '.csui-pman-form-description'\r\n    },\r\n\r\n    constructor: function WidgetOptionsFormHeaderView(options) {\r\n      this.options = options || {};\r\n      this.manifest = this.options.manifest;\r\n      Marionette.LayoutView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    _createForm: function (formModel) {\r\n      this.widgetOptionsFormView = new WidgetOptionsFormView({\r\n        context: this.options.context,\r\n        model: formModel,\r\n        mode: 'create'\r\n      });\r\n\r\n      this.listenToOnce(this.widgetOptionsFormView, 'render:form', function () {\r\n        this.trigger('render:form');\r\n      }.bind(this))\r\n\r\n      this.listenTo(this.widgetOptionsFormView, 'change:field', function (field) {\r\n        this.trigger('change:field', field);\r\n      }.bind(this))\r\n    },\r\n\r\n    _hasSchema: function () {\r\n      if (!this.manifest || !this.manifest.schema || !this.manifest.schema.properties ||\r\n          _.isEmpty(this.manifest.schema.properties)) {\r\n        // No configuration required for the widget\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    refresh: function (callback) {\r\n      if (!!this.widgetOptionsFormView) {\r\n        this.widgetOptionsFormView.refresh(callback);\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      this.ui.unSupportedConfig.hide();\r\n      var hasSchema = this._hasSchema();\r\n      if (!hasSchema) {\r\n        // No schema defined for widget\r\n        this.trigger('render:form');\r\n        return;\r\n      }\r\n      var formModel = this._prepareFormModel();\r\n      this.hasValidSchema = WidgetOptionsFormWrapperView._normalizeOptions(\r\n          formModel.attributes.schema.properties, formModel.attributes.options.fields,\r\n          formModel.attributes.data);\r\n      if (this.hasValidSchema) {\r\n        this._createForm(formModel);\r\n        this.bodyRegion.show(this.widgetOptionsFormView);\r\n      } else {\r\n        // Widget configuration schema has unsupported alpaca fields\r\n        this.ui.description.hide();\r\n        this.ui.unSupportedConfig.show();\r\n        this.trigger('render:form');\r\n      }\r\n    },\r\n    //To change the border color to red for non supported widgets.\r\n    onPopoverShow: function (popover) {\r\n      if (this._hasSchema() && !this.hasValidSchema) {\r\n        popover.find('.binf-popover-content').addClass(\"invalid-options\");\r\n        popover.find('.binf-arrow').addClass(\"invalid-options\");\r\n      }\r\n    },\r\n\r\n    getValues: function () {\r\n      if (!this._hasSchema()) {\r\n        return undefined;\r\n      }\r\n      if (this.hasValidSchema) {\r\n        return this.widgetOptionsFormView.getValues();\r\n      } else {\r\n        return this._getOptionsData();\r\n      }\r\n    },\r\n\r\n    validate: function () {\r\n      if (!this._hasSchema()) {\r\n        return true;\r\n      }\r\n      // Widget configuration schema has unsupported alpaca fields\r\n      if (!this.hasValidSchema) {\r\n        var reqVal = true;\r\n        //Has required fields\r\n        //TODO to handle required fields of recursive schema\r\n        if (PerspectiveUtil.hasRequiredFields(this.manifest)) {\r\n          var data = this._getOptionsData();\r\n          var reqFields = this.manifest.schema.required;\r\n          _.each(reqFields, function (fieldName) {\r\n            if (!data[fieldName]) {\r\n              reqVal = false;\r\n            }\r\n          });\r\n        }\r\n        return reqVal;\r\n      }\r\n      // Widget configuration schema has supported alpaca fields\r\n      return this.widgetOptionsFormView.validate();\r\n    },\r\n\r\n    _isPreviewWidget: function () {\r\n      return this.options.widgetConfig.type ===\r\n             'csui/perspective.manage/widgets/perspective.widget';\r\n    },\r\n\r\n    _prepareFormModel: function () {\r\n      var data = this._getOptionsData();\r\n      // Clone schema and options from manifest as they would change by form.view\r\n      var schema      = JSON.parse(JSON.stringify(this.manifest.schema)),\r\n          formOptions = JSON.parse(JSON.stringify(this.manifest.options || {}));\r\n      if (!formOptions) {\r\n        formOptions = {};\r\n      }\r\n      if (!formOptions.fields) {\r\n        formOptions.fields = {};\r\n      }\r\n      this._addWidgetSizePropertyIfSupported(schema, formOptions, data);\r\n\r\n      var model = new Backbone.Model({\r\n        schema: schema,\r\n        options: formOptions,\r\n        data: data\r\n      });\r\n      return model;\r\n    },\r\n\r\n    //Common method to get widget config data\r\n    _getOptionsData: function () {\r\n      var data = this.options.widgetConfig.options || {};\r\n      if (this._isPreviewWidget()) {\r\n        // For widgets added using DnD, widget will be added as preview for original widget\r\n        // Resolve original widget options from preview widget's options\r\n        data = data.options || {};\r\n      }\r\n      return data;\r\n    },\r\n\r\n    /**\r\n     * Add a new properties to form to change \"Size\" if widgets.\r\n     * Size that can be configured depends on perspective's supported sizes as well as supported sizes of widget\r\n     *\r\n     */\r\n    _addWidgetSizePropertyIfSupported: function (schema, options, data) {\r\n      if (!this.options.perspectiveView.getSupportedWidgetSizes) {\r\n        // Perspective view doesn't support configuring widget sizes\r\n        return;\r\n      }\r\n      var supportedKinds = this.options.perspectiveView.getSupportedWidgetSizes(this.manifest,\r\n          this.options.widgetView);\r\n      if (!supportedKinds || supportedKinds.length === 0) {\r\n        // No supported sizes found for widget\r\n        return;\r\n      }\r\n      var kindSchema = {\r\n        title: lang.widgetSizeTitle,\r\n        description: lang.widgetSizeDescription,\r\n        type: 'string',\r\n        enum: _.map(supportedKinds, function (sk) {\r\n          return sk.kind;\r\n        })\r\n      };\r\n      var kindOption = {\r\n        type: 'select',\r\n        optionLabels: _.map(supportedKinds, function (sk) {\r\n          return sk.label;\r\n        }),\r\n        removeDefaultNone: true\r\n      };\r\n      var selectedKind = _.find(supportedKinds, function (size) {return size.selected;});\r\n      if (!!selectedKind) {\r\n        data[WidgetOptionsFormWrapperView.widgetSizeProperty] = selectedKind.kind;\r\n      }\r\n      var sizeSchema = {};\r\n      sizeSchema[WidgetOptionsFormWrapperView.widgetSizeProperty] = kindSchema;\r\n      schema.properties = _.extend(sizeSchema, schema.properties);\r\n\r\n      var sizeOptions = {};\r\n      sizeOptions[WidgetOptionsFormWrapperView.widgetSizeProperty] = kindOption;\r\n      options.fields = _.extend(sizeOptions, options.fields);\r\n\r\n      schema.required = schema.required || [];\r\n      schema.required.push(WidgetOptionsFormWrapperView.widgetSizeProperty);\r\n    },\r\n\r\n  }, {\r\n    widgetSizeProperty: '__widgetSize',\r\n\r\n    /**\r\n     * NOTE: Duplicate of Alpaca.createFieldInstance since this code is not exposed as function\r\n     */\r\n    _resolveOptionsType: function (schema, data) {\r\n      var type = schema.type;\r\n      if (!type) {\r\n        type = Alpaca.getSchemaType(data);\r\n      }\r\n      if (!type) {\r\n        if (data && Alpaca.isArray(data)) {\r\n          type = \"array\";\r\n        }\r\n        else {\r\n          type = \"object\"; // fallback\r\n        }\r\n      }\r\n      if (schema && schema[\"enum\"]) {\r\n        if (schema[\"enum\"].length > 3) {\r\n          return \"select\";\r\n        } else {\r\n          return \"radio\";\r\n        }\r\n      } else {\r\n        return Alpaca.defaultSchemaFieldMapping[type];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Recursively fill options for all respective schemas\r\n     */\r\n    _normalizeOptions: function (schemaProperies, optionFields, data) {\r\n      var hasValidTypes = true;\r\n      _.each(schemaProperies, function (field, fieldId) {\r\n        var fieldOpts = optionFields[fieldId];\r\n        var fieldData = data[fieldId];\r\n        if (!fieldOpts) {\r\n          optionFields[fieldId] = fieldOpts = {}\r\n        }\r\n\r\n        var optType = fieldOpts.type;\r\n        if (!optType && !!field.type) {\r\n          // Options not defined.. So resolve option type from Alp JSON schema type\r\n          optType = WidgetOptionsFormWrapperView._resolveOptionsType(field, fieldData);\r\n        }\r\n\r\n        if (!Alpaca.getFieldClass(optType)) {\r\n          hasValidTypes = false;\r\n        }\r\n\r\n        switch (field.type) {\r\n        case 'array':\r\n          if (!fieldOpts.fields) {\r\n            _.defaults(fieldOpts, {\r\n              fields: {\r\n                item: {}\r\n              }\r\n            });\r\n          }\r\n          if (!!fieldOpts.items) {\r\n            fieldOpts.fields.item = fieldOpts.items;\r\n          }\r\n          if (field.items.type === 'object') {\r\n            if (!!fieldOpts.fields.item.type && !Alpaca.getFieldClass(fieldOpts.fields.item.type)) {\r\n              hasValidTypes = false;\r\n            }\r\n            fieldOpts.fields.item.fields || (fieldOpts.fields.item.fields = {});\r\n            if (!fieldData || fieldData.length === 0) {\r\n              data[fieldId] = fieldData = [{}];\r\n            }\r\n            var hasValidArrayType = WidgetOptionsFormWrapperView._normalizeOptions(\r\n                field.items.properties, fieldOpts.fields.item.fields,\r\n                fieldData[0]);\r\n            if (!hasValidArrayType) {\r\n              hasValidTypes = false;\r\n            }\r\n          }\r\n          if (!fieldData) {\r\n            data[fieldId] = [null];\r\n          }\r\n          break;\r\n        case 'object':\r\n          if (!fieldData) {\r\n            data[fieldId] = fieldData = {};\r\n          }\r\n          if (!fieldOpts.fields) {\r\n            fieldOpts.fields = {};\r\n          }\r\n          var hasValidObjectType = WidgetOptionsFormWrapperView._normalizeOptions(field.properties,\r\n              fieldOpts.fields, fieldData);\r\n          if (!hasValidObjectType) {\r\n            hasValidTypes = false;\r\n          }\r\n          break;\r\n        default:\r\n          if (_.isUndefined(fieldData)) {\r\n            // Consider default value specified in schema if set\r\n            data[fieldId] = field.default || null;\r\n          }\r\n          break;\r\n        }\r\n      });\r\n      return hasValidTypes;\r\n    }\r\n  });\r\n\r\n  var WidgetOptionsFormView = FormView.extend({\r\n    className: function () {\r\n      var className = FormView.prototype.className.call(this);\r\n      return className + ' perspective-widget-form';\r\n    },\r\n    constructor: function WidgetOptionsFormView(options) {\r\n      FormView.apply(this, arguments);\r\n    },\r\n\r\n    refresh: function (callback) {\r\n      this.form && this.form.refresh(callback);\r\n    },\r\n\r\n    _modifyModel: function () {\r\n      FormView.prototype._modifyModel.apply(this, arguments);\r\n      // Dont hide initial validation since there is an issue in alpaca with  alpaca.refresh()\r\n      this.alpaca.options.hideInitValidationError = false;\r\n    }\r\n  });\r\n\r\n  _.extend(WidgetOptionsFormView.prototype, LayoutViewEventsPropagationMixin);\r\n\r\n  return WidgetOptionsFormWrapperView;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/widget.item',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(depth0,helpers,partials,data,blockParams,depths) {\n    var stack1;\n\n  return \"        <div>\\r\\n          <div class=\\\"csui-widget-item icon-draggable-handle\\\"\\r\\n               title=\\\"\"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.title : stack1), depth0))\n    + \"\\\" \"\n    + ((stack1 = helpers['if'].call(depth0,(depths[1] != null ? depths[1].draggable : depths[1]),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(2, data, 0, blockParams, depths),\"inverse\":this.noop})) != null ? stack1 : \"\")\n    + \">\\r\\n            <span>\"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.title : stack1), depth0))\n    + \"</span>\\r\\n            <div class=\\\"csui-layout-icon \"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.icon : stack1), depth0))\n    + \"\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\";\n},\"2\":function(depth0,helpers,partials,data) {\n    return \" draggable=\\\"true\\\"\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data,blockParams,depths) {\n    var stack1;\n\n  return \"<div class=\\\"csui-accordion-header\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"\\\">\\r\\n  <div class=\\\"csui-accordion-header-title\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"</div>\\r\\n  <div class=\\\"csui-button-icon cs-icon icon-expandArrowDown\\\"></div>\\r\\n  <div class=\\\"csui-button-icon cs-icon icon-expandArrowUp\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-accordion-content\\\">\\r\\n  <div class=\\\"cs-content csui-list-pannel\\\">\\r\\n    <div class=\\\"cs-list-group\\\">\\r\\n\"\n    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.widgets : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0, blockParams, depths),\"inverse\":this.noop})) != null ? stack1 : \"\")\n    + \"    </div>\\r\\n  </div>\\r\\n</div>\";\n},\"useDepths\":true});\nHandlebars.registerPartial('csui_perspective.manage_impl_widget.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/widget.drag.template',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-widget-template\\\">\\r\\n  <div class=\\\"csui-template-header\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.header : depth0), depth0))\n    + \"</div>\\r\\n  <div class=\\\"csui-template-body\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.body : depth0), depth0))\n    + \"</div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_widget.drag.template', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/perspective.manage/impl/widget.list.view',['module',\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/perspective.manage/impl/options.form.view',\r\n  'i18n!csui/perspective.manage/impl/nls/lang',\r\n  'csui/models/widget/widget.collection',\r\n  'hbs!csui/perspective.manage/impl/widget.item',\r\n  'hbs!csui/perspective.manage/impl/widget.drag.template'\r\n], function (module, _, $, Backbone, Marionette, base, PerfectScrollingBehavior,\r\n    WidgetOptionsFormView, Lang,\r\n    WidgetCollection,\r\n    WidgetItemTemplate, WidgetDragTemplate) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    dragImageOffsetTop: 50,\r\n    dragImageOffsetLeft: 50,\r\n  });\r\n\r\n  var WidgetItemView = Marionette.ItemView.extend({\r\n\r\n    constructor: function WidgetItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    className: 'csui-module-group',\r\n\r\n    template: WidgetItemTemplate,\r\n\r\n    templateHelpers: function () {\r\n      var widgetCollection = new Backbone.Collection(this.model.attributes.widgets);\r\n      var dndContainer = $('.perspective-editing .csui-dnd-container');\r\n      var draggable = dndContainer.length === 0;\r\n      return {\r\n        widgets: widgetCollection.models,\r\n        draggable: draggable\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      accordionHeader: '.csui-accordion-header',\r\n      accordionContent: '.csui-accordion-content',\r\n      accordionHeaderIcon: '.csui-accordion-header .cs-icon',\r\n      widget: '.csui-widget-item'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.accordionHeader': \"toggle\",\r\n      'dragstart @ui.widget': 'onDragStart',\r\n      'dragend @ui.widget': 'onDragEnd'\r\n    },\r\n\r\n    toggle: function () {\r\n      var isClosed = this.ui.accordionHeader.hasClass('csui-accordion-expand');\r\n      this.ui.accordionHeader.toggleClass(\"csui-accordion-expand\");\r\n      this.options.parentView.$el.find(\".csui-module-group\").removeClass('csui-accordion-visible')\r\n          .find('.csui-accordion-header').removeClass('csui-accordion-expand');\r\n      if (!isClosed) {\r\n        this.$el.addClass(\"csui-accordion-visible\");\r\n        this.ui.accordionHeader.addClass(\"csui-accordion-expand\");\r\n      }\r\n\r\n      base.onTransitionEnd(this.ui.accordionContent, function () {\r\n        this.trigger('widgets:expanded');\r\n      }, this);\r\n    },\r\n\r\n    onRender: function () {\r\n      var dndContainer = $('.perspective-editing .csui-dnd-container');\r\n      if (dndContainer.length) {\r\n        // Current perspective using sortable plugin for DnD. Get ready for it.\r\n        this._makeWidgetSortable();\r\n      } else {\r\n        // Current perspective relaying on HTML5 DnD. Get ready with IE workarounds\r\n        var hasDragDropNative = (typeof document.createElement(\"span\").dragDrop === \"function\");\r\n        if (!this._hasNativeDragImageSupport() && hasDragDropNative) {\r\n          this.ui.widget.on(\"mousedown\", this._handleDragImageForIE.bind(this));\r\n        }\r\n      }\r\n    },\r\n\r\n    _makeWidgetSortable: function () {\r\n      var self = this;\r\n      var widgetEls = this.$el.find('.csui-widget-item').parent();\r\n      widgetEls.data('pman.widget', this.model.get('widgets'));\r\n      widgetEls.sortable({\r\n        connectWith: [\".perspective-editing .csui-dnd-container\",\r\n          \".perspective-editing .pman-trash-area\"],\r\n        containment: \".perspective-editing \",\r\n        helper: function (event, ui) {\r\n          // Drag Image\r\n          var widgetModel = ui.parent().index();\r\n          self.widgetDragTemplate = new widgetDragTemplateView({\r\n            title: self.model.get(\"widgets\")[widgetModel].get('title'),\r\n            newWidget: self.model.get(\"widgets\")[widgetModel]\r\n          });\r\n          self.widgetDragTemplate.render();\r\n          //Set width and height to prevent jquery ui overriding Drag item width and height\r\n          self.widgetDragTemplate.$el.width('220px');\r\n          self.widgetDragTemplate.$el.height('220px');\r\n          self.widgetDragTemplate.$el.css({opacity: 0.75});\r\n          self.widgetDragTemplate.$el.appendTo(\r\n              self.options.parentView.$el.closest('.pman-pannel-wrapper'));\r\n          return self.widgetDragTemplate.$el;\r\n        },     \r\n        tolerance: 'pointer',\r\n        cursorAt: {top: config.dragImageOffsetTop, left: config.dragImageOffsetLeft},\r\n        start: function (event, ui) {\r\n          ui.item.css('display', 'block');\r\n          ui.placeholder.css('display', 'block');\r\n          self.dragStart();\r\n        },\r\n        stop: function () {\r\n          self.dragEnd();\r\n        }\r\n      });\r\n    },\r\n\r\n    _handleDragImageForIE: function (e) {\r\n      var originalEvent = e.originalEvent,\r\n          $img          = $('.csui-template-wrapper').clone(),\r\n          widget        = this.model.get(\"widgets\")[$(e.currentTarget).parent().index()];\r\n      $img.find(\".csui-template-header\").text(widget.get(\"title\"));\r\n      $img.css({\r\n        \"top\": Math.max(0, originalEvent.pageY - config.dragImageOffsetTop) + \"px\",\r\n        \"left\": Math.max(0, originalEvent.pageX - config.dragImageOffsetLeft) + \"px\",\r\n        \"position\": \"absolute\",\r\n        \"pointerEvents\": \"none\"\r\n      }).appendTo(document.body);\r\n\r\n      setTimeout(function () {\r\n        $img.remove();\r\n      });\r\n      $img.on('dragstart', _.bind(function (event) {\r\n        var widget       = this.model.get(\"widgets\")[$(e.currentTarget).parent().index()],\r\n            dataTransfer = event.originalEvent.dataTransfer;\r\n        dataTransfer.setData(\"text\", JSON.stringify(widget.toJSON()));\r\n        this.dragStart();\r\n      }, this));\r\n      $img.on('dragend', _.bind(function (event) {\r\n        this.dragEnd();\r\n      }, this));\r\n      $img[0].dragDrop();\r\n    },\r\n\r\n    onDragStart: function (event) {\r\n      var widget       = this.model.get(\"widgets\")[$(event.currentTarget).parent().index()],\r\n          dataTransfer = event.originalEvent.dataTransfer;\r\n      var template = $('.csui-template-wrapper');\r\n      template.find(\".csui-template-header\").text(widget.get(\"title\"));\r\n      if (this._hasNativeDragImageSupport()) {\r\n        dataTransfer.setData(\"text\", JSON.stringify(widget.toJSON()));\r\n        // IE11 doesn't support 'setDragImage'. See `_handleDragImageForIE` function for Drag Image handling in IE.\r\n        dataTransfer.setDragImage(template[0], config.dragImageOffsetLeft,\r\n            config.dragImageOffsetTop);\r\n      }\r\n      this.dragStart();\r\n    },\r\n\r\n    _hasNativeDragImageSupport: function () {\r\n      var dataTransfer = window.DataTransfer || window.Clipboard;\r\n      return (\"setDragImage\" in dataTransfer.prototype);\r\n    },\r\n\r\n    onDragEnd: function (event) {\r\n      this.dragEnd();\r\n    },\r\n\r\n    dragStart: function () {\r\n      this.$el.closest(\".csui-pman-panel\").addClass(\"csui-pman-drag-start\");\r\n      $(document.body).addClass('csui-pman-dnd-active');\r\n    },\r\n\r\n    dragEnd: function () {\r\n      this.$el.closest(\".csui-pman-panel\").removeClass(\"csui-pman-drag-start\");\r\n      $(document.body).removeClass('csui-pman-dnd-active');\r\n    }\r\n\r\n  });\r\n\r\n  var widgetDragTemplateView = Marionette.ItemView.extend({\r\n    constructor: function WidgetItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    className: 'csui-template-wrapper',\r\n\r\n    template: WidgetDragTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        header: this.options && this.options.title,\r\n        body: Lang.templateMessage\r\n\r\n      }\r\n    },\r\n    onRender: function () {\r\n      this.$el.data('pman.widget', this.options.newWidget);\r\n    }\r\n  });\r\n\r\n  var WidgetListView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    template: WidgetItemTemplate,\r\n\r\n    constructor: function WidgetListView(options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n\r\n      Marionette.ItemView.call(this, options);\r\n\r\n      var self = this;\r\n      this.allWidgets = new WidgetCollection();\r\n      this.allWidgets.fetch().done(function () {\r\n        self.collection = self._groupWidgetsByModule();\r\n        // self._sanitiseWidgetLibrary();\r\n        self.render();\r\n        self.trigger(\"items:fetched\");\r\n      });\r\n    },\r\n\r\n    initialize: function () {\r\n      _.bindAll(this, \"renderItem\");\r\n    },\r\n\r\n    className: 'cs-module-list',\r\n\r\n    render: function () {\r\n      this.collection && this.collection.each(this.renderItem);\r\n    },\r\n\r\n    renderItem: function (model) {\r\n      var parentView = this;\r\n      var itemView = new WidgetItemView({model: model, parentView: parentView});\r\n      itemView.render();\r\n      this.listenTo(itemView, 'widgets:expanded', _.bind(this.trigger, this, 'dom:refresh', this));\r\n      $(this.el).append(itemView.el);\r\n    },\r\n\r\n    _groupWidgetsByModule: function () {\r\n      // creates a data model where widgets are grouped according to their module\r\n      var moduleCollection = new Backbone.Collection();\r\n      var widgets = this.allWidgets.filter(function (widget) {\r\n        var manifest = widget.get('manifest');\r\n        if (!manifest || !_.has(manifest, 'title') || !_.has(manifest, 'description') ||\r\n            manifest.deprecated) {\r\n          return false;\r\n        }\r\n        var schema        = JSON.parse(JSON.stringify(manifest.schema || {})),\r\n            options       = JSON.parse(JSON.stringify(manifest.options || {})),\r\n            isValidSchema = WidgetOptionsFormView._normalizeOptions(\r\n                schema.properties, options.fields || {}, {});\r\n        if (!isValidSchema) {\r\n          // Found unknown properties.. hence widget unsupported.\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      _.each(widgets, function (widget) {\r\n        var manifest = widget.get('manifest')\r\n        widget.set(\"title\", (manifest && manifest.title) || Lang.noTitle);\r\n      });\r\n\r\n      _.each(_.groupBy(widgets, function (widget) {\r\n        return widget.serverModule.id;\r\n      }), function (val, key) {\r\n        var title = _.first(val).serverModule.get('title');\r\n        title = title ? title.replace(/OpenText /, '') : Lang.noTitle; // remove superfluous OpenText prefix\r\n        moduleCollection.add({\r\n          id: key,\r\n          title: title,\r\n          widgets: val\r\n        })\r\n      });\r\n      return moduleCollection;\r\n    },\r\n\r\n    _sanitiseWidgetLibrary: function () {\r\n      // checks to see if any widget groups or widgets have been whitelisted or blacklisted\r\n      // alpha-sorts the groups and the widgets within them.\r\n    },\r\n\r\n    onInitWidgets: function () {\r\n      this.$el.empty(); // FIXME Make this ItemView as CollectionView \r\n      this.render();\r\n    },\r\n\r\n  });\r\n\r\n  return WidgetListView;\r\n\r\n});\r\n\n","\n","csui.define('csui/perspective.manage/impl/perspectivelayouts',[\r\n    'csui/lib/underscore',\r\n    'i18n!csui/perspective.manage/impl/nls/lang',\r\n    // Load extra layout items to be added\r\n    'csui-ext!perspective.manage/impl/perspectivelayouts'\r\n], function(_, Lang, extraPerspectiveLayouts) {\r\n\r\n    var perspectivelayouts = [\r\n        {\r\n            title: Lang.LcrLayoutTitle, \r\n            type: \"left-center-right\",\r\n            icon: \"csui-layout-lcr\"\r\n        },\r\n        {\r\n            title: Lang.FlowLayoutTitle, \r\n            type: \"flow\",\r\n            icon: \"csui-layout-flow\"\r\n        }\r\n    ];\r\n\r\n    if(extraPerspectiveLayouts) {\r\n        perspectivelayouts = _.union(perspectivelayouts, extraPerspectiveLayouts);\r\n    }\r\n\r\n    return perspectivelayouts;\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/pman.panel',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-tab-pannel\\\">\\r\\n  <div class=\\\"csui-layout-tab\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.layoutTabTitle : depth0), depth0))\n    + \"\\\">\\r\\n    \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.layoutTabTitle : depth0), depth0))\n    + \"\\r\\n  </div>\\r\\n  <div class=\\\"csui-AddWidget-tab\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.widgetTabTitle : depth0), depth0))\n    + \"\\\">\\r\\n    \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.widgetTabTitle : depth0), depth0))\n    + \"\\r\\n  </div>\\r\\n  <div class=\\\"csui-widget-tab\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-list-pannel\\\"></div>\\r\\n<div class=\\\"csui-template-overlay\\\"></div>\\r\\n<div class=\\\"csui-template-wrapper\\\">\\r\\n  <div class=\\\"csui-widget-template\\\">\\r\\n    <div class=\\\"csui-template-header\\\"></div>\\r\\n    <div class=\\\"csui-template-body\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.templateMessage : depth0), depth0))\n    + \"</div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_pman.panel', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/list.item',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.className : depth0), depth0))\n    + \"\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"\\\"\\r\\n     draggable=\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.draggable : depth0), depth0))\n    + \">\\r\\n  <span>\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"</span>\\r\\n  <div class=\\\"csui-layout-icon \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.iconClass : depth0), depth0))\n    + \"\\\"></div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_list.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/list',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"cs-header binf-panel-heading cs-header-with-go-back\\\" tabindex=\\\"0\\\" role=\\\"link\\\"\\r\\n     aria-label=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.goBackAria || (depth0 != null ? depth0.goBackAria : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"goBackAria\",\"hash\":{}}) : helper)))\n    + \"\\\">\\r\\n  <span class=\\\"icon circular arrow_back cs-go-back\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.goBackTooltip || (depth0 != null ? depth0.goBackTooltip : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"goBackTooltip\",\"hash\":{}}) : helper)))\n    + \"\\\"></span>\\r\\n</div>\\r\\n<div class=\\\"cs-content\\\">\\r\\n  <div class=\\\"cs-list-group\\\"></div>\\r\\n</div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_list', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/pman.panel',[],function(){});\n","csui.define('csui/perspective.manage/impl/pman.panel.view',['require', 'module', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/lib/underscore', 'csui/lib/marionette',\r\n  \"csui/controls/progressblocker/blocker\",\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/perspective.manage/impl/widget.list.view',\r\n  'csui/perspective.manage/impl/perspectivelayouts',\r\n  'i18n!csui/perspective.manage/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/impl/pman.panel',\r\n  'hbs!csui/perspective.manage/impl/list.item',\r\n  'hbs!csui/perspective.manage/impl/list',\r\n  'hbs!csui/perspective.manage/impl/widget.drag.template',\r\n  'css!csui/perspective.manage/impl/pman.panel'\r\n\r\n], function (require, module, $, Backbone, _, Marionette, BlockerView, PerfectScrollingBehavior,\r\n    WidgetListView, perspectiveLayouts, Lang, template, ListItemTemplate, ListTemplate,\r\n    WidgetDragTemplate) {\r\n  'use strict';\r\n\r\n  var PManPanelView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    template: template,\r\n\r\n    events: {\r\n      'click @ui.layoutTab': \"onTabClicked\"\r\n    },\r\n\r\n    ui: {\r\n      tabPannel: \".csui-tab-pannel\",\r\n      listPannel: \".csui-list-pannel\",\r\n      layoutTab: \".csui-layout-tab\",\r\n      widgetTab: \".csui-widget-tab\",\r\n      template: \".csui-widget-template\"\r\n    },\r\n\r\n    className: 'csui-pman-panel',\r\n\r\n    behaviors: {\r\n      PerfectScrolling: {\r\n        behaviorClass: PerfectScrollingBehavior,\r\n        contentParent: '.csui-tab-pannel',\r\n        suppressScrollX: true,\r\n        scrollYMarginOffset: 8\r\n      }\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        layoutTabTitle: Lang.layoutTabTitle,\r\n        widgetTabTitle: Lang.widgetTabTitle,\r\n        templateMessage: Lang.templateMessage\r\n      }\r\n    },\r\n\r\n    onPanelOpen: function () {\r\n      this.accordionView.triggerMethod(\"init:widgets\");\r\n      this.trigger('ensure:scrollbar');\r\n    },\r\n\r\n    onRender: function () {\r\n      this.ui.widgetTab.hide();\r\n      this.ui.layoutTab.hide();\r\n      this.accordionRegion = new Marionette.Region({\r\n        el: this.ui.widgetTab\r\n      });\r\n      this.accordionView = new WidgetListView();\r\n      this.accordionRegion.show(this.accordionView);\r\n      this.blockActions();\r\n      this.listenTo(this.accordionView, \"items:fetched\", function () {\r\n        this.unblockActions();\r\n        this.ui.layoutTab.show();\r\n        this.ui.widgetTab.show();\r\n      });\r\n      this.listenTo(this.accordionView, \"dom:refresh\", function () {\r\n        // Dom refresh to ensure perfect scrollbar\r\n        this.trigger('dom:refresh');\r\n      });\r\n    },\r\n\r\n    constructor: function PManPanelView(options) {\r\n      this.options = options || {};\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n      BlockerView.imbue(this);\r\n      this.listenTo(this, 'reset:items', function () {\r\n        this.listView && this.listView.destroy();\r\n      });\r\n    },\r\n\r\n    onTabClicked: function (options) {\r\n      var args = options.data ? options : {\r\n        data: {\r\n          items: perspectiveLayouts\r\n        }\r\n      };\r\n      args.draggable = !!args.data.draggable;\r\n      args.itemClassName = \"csui-layout-item\";\r\n      args.pmanView = this.options.pmanView;\r\n\r\n      this.ui.tabPannel.addClass(\"binf-hidden\");\r\n      this.listregion = new Marionette.Region({\r\n        el: this.ui.listPannel\r\n      });\r\n      this.listView = new ListView(args);\r\n      this.listregion.show(this.listView);\r\n\r\n      // Register events on listview to handle back\r\n      this.listenTo(this.listView, \"before:destroy\", function () {\r\n        this.ui.tabPannel.removeClass(\"binf-hidden\");\r\n      }).listenTo(this.listView, \"click:back\", function () {\r\n        this.listView.destroy();\r\n      });\r\n    },\r\n  });\r\n\r\n  var ListItemView = Marionette.ItemView.extend({\r\n    constructor: function ListItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    template: ListItemTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        draggable: !!this.options.draggable,\r\n        className: this.options.itemClassName,\r\n        iconClass: this.model.get('icon')\r\n      }\r\n    },\r\n\r\n    events: {\r\n      'click .csui-layout-item:not(.binf-active)': _.debounce(function () {\r\n        this.trigger('change:layout');\r\n      }, 200, true)\r\n    },\r\n\r\n    onRender: function () {\r\n      if (this.model.get('type') === this.options.pmanView.perspective.get('perspective').type) {\r\n        this.trigger('set:active');\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  var ListView = Marionette.CompositeView.extend({\r\n\r\n    constructor: function ListView(options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n\r\n      // Provide the perfect scrollbar to every list view by default\r\n      // (Behaviors cannot be inherited; add the PerfectScrolling\r\n      //  to the local clone of the descendant's behaviors.)\r\n      if (!(this.behaviors && _.any(this.behaviors, function (behavior, key) {\r\n        return behavior.behaviorClass === PerfectScrollingBehavior;\r\n      }))) {\r\n        this.behaviors = _.extend({\r\n          PerfectScrolling: {\r\n            behaviorClass: PerfectScrollingBehavior,\r\n            contentParent: '.csui-pman-list',\r\n            suppressScrollX: true,\r\n            // like bottom padding of container, otherwise scrollbar is shown always\r\n            scrollYMarginOffset: 15\r\n          }\r\n        }, this.behaviors);\r\n      }\r\n\r\n      Marionette.CompositeView.call(this, options);\r\n\r\n      // TODO: Deprecate this, or fix it, so that a collection can be created\r\n      // without breaking the client\r\n      // Passing a collection without knowing its model schema and identifier\r\n      // is not possible in Backbone, where the collections should be indexed\r\n      if (this.options.data && this.options.data.items) {\r\n        if (!this.collection) {\r\n          var ViewCollection = Backbone.Collection.extend({\r\n            model: Backbone.Model.extend({\r\n              idAttribute: null\r\n            })\r\n          });\r\n          this.collection = new ViewCollection();\r\n        }\r\n        this.collection.add(this.options.data.items);\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      back: '.cs-go-back'\r\n    },\r\n    className: 'csui-pman-list',\r\n\r\n    events: {\r\n      'click @ui.back': 'onClickBack'\r\n    },\r\n\r\n    childEvents: {\r\n      'change:layout': 'onChangeLayout',\r\n      'set:active': 'setActive'\r\n    },\r\n\r\n    template: ListTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        goBackTooltip: Lang.goBackTooltip\r\n      };\r\n    },\r\n\r\n    childViewContainer: '.cs-list-group',\r\n\r\n    childView: ListItemView,\r\n\r\n    childViewOptions: function () {\r\n      return this.options;\r\n    },\r\n\r\n    onClickBack: function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.trigger('click:back');\r\n    },\r\n\r\n    setActive: function (childView) {\r\n      this.$el.find('.csui-layout-item').removeClass('binf-active');\r\n      childView.$el.find('.csui-layout-item').addClass('binf-active');\r\n    },\r\n\r\n    onChangeLayout: function (childView) {\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlertView) {\r\n        ModalAlertView.confirmWarning(Lang.changePageLayoutConfirmatonText, Lang.layoutTabTitle,\r\n            {\r\n              buttons: {\r\n                showYes: true,\r\n                labelYes: Lang.proceedButton,\r\n                showNo: true,\r\n                labelNo: Lang.changeLayoutCancelButton\r\n              }\r\n            })\r\n            .done(function (labelYes) {\r\n              if (labelYes) {\r\n                self.setActive(childView);\r\n                self.options.pmanView.trigger(\"change:layout\", childView.model.get('type'));\r\n              }\r\n            });\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return PManPanelView;\r\n});\r\n\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/pman',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n    return \"        <li>\\r\\n          <button class=\\\"binf-btn icon-reset\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.reset : depth0), depth0))\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.reset : depth0), depth0))\n    + \"</button>\\r\\n        </li>\\r\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<div class=\\\"pman-backdrop\\\"></div>\\r\\n<div class=\\\"pman-header\\\">\\r\\n  <div class=\\\"pman-header-backdrop\\\"></div>\\r\\n  <div class=\\\"pman-tools-container\\\">\\r\\n    <div class=\\\"pman-left-tools\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"pman-toolitem\\\">\\r\\n          <button class=\\\"icon icon-toolbarAdd\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.addWidget : depth0), depth0))\n    + \"\\\"></button>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"pman-pannel-wrapper\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"pman-right-tools\\\">\\r\\n      <ul>\\r\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.personalizeMode : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop})) != null ? stack1 : \"\")\n    + \"        <li>\\r\\n          <button class=\\\"binf-btn icon-save\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.save : depth0), depth0))\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.save : depth0), depth0))\n    + \"</button>\\r\\n        </li>\\r\\n        <li>\\r\\n          <button class=\\\"binf-btn cancel-edit\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.cancel : depth0), depth0))\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.cancel : depth0), depth0))\n    + \"</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"pman-trash-area\\\">\\r\\n    <div class=\\\"pman-trash-banner\\\"></div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_pman', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/pman',[],function(){});\n","csui.define('csui/perspective.manage/behaviours/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/behaviours/impl/nls/root/lang',{\r\n  deleteConfirmMsg: 'Widget will be removed from the page.',\r\n  deleteConfirmTitle: 'Remove Widget',\r\n  replaceConfirmMsg: 'Do you want to replace this widget?',\r\n  replaceConfirmTitle: 'Replace Widget',\r\n  widgetSizeTitle: 'Widget size',\r\n  widgetSizeDescription: 'Determines how much space the widget occupies. Note that widgets are re-sized automatically to display optimally on smaller screens.',\r\n  removeWidget: 'Remove widget',\r\n  replace: 'Replace',\r\n  remove: 'Remove',\r\n  cancel: 'Cancel',\r\n  configNeeded: 'Configuration needed.',\r\n  hideWidget: 'Hide',\r\n  showWidget: 'Display'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/behaviours/impl/widget.masking',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"    <div class=\\\"csui-pman-widget-error\\\">\\r\\n      <div class=\\\"csui-pman-widget-error-heading\\\"> \"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n      <div class=\\\"csui-pman-widget-error-body\\\">\\r\\n        <div class=\\\"csui-pman-widget-error-icon\\\"></div>\\r\\n        <div class=\\\"csui-pman-widget-error-message\\\"> \"\n    + this.escapeExpression(((helper = (helper = helpers.configNeeded || (depth0 != null ? depth0.configNeeded : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"configNeeded\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"csui-pman-widget-close clear-icon\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.removeWidget || (depth0 != null ? depth0.removeWidget : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"removeWidget\",\"hash\":{}}) : helper)))\n    + \"\\\"></div>\\r\\n\";\n},\"3\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"    <div class=\\\"csui-pman-widget-personalize-mask\\\">\\r\\n      <button class=\\\"binf-btn csui-pman-personalize-btn csui-pman-hide-widget\\\"\\r\\n              title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.hideWidget || (depth0 != null ? depth0.hideWidget : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"hideWidget\",\"hash\":{}}) : helper)))\n    + \"\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.hideWidget || (depth0 != null ? depth0.hideWidget : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"hideWidget\",\"hash\":{}}) : helper)))\n    + \"</button>\\r\\n      <button class=\\\"binf-btn csui-pman-personalize-btn csui-pman-show-widget\\\"\\r\\n              title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.showWidget || (depth0 != null ? depth0.showWidget : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"showWidget\",\"hash\":{}}) : helper)))\n    + \"\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.showWidget || (depth0 != null ? depth0.showWidget : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"showWidget\",\"hash\":{}}) : helper)))\n    + \"</button>\\r\\n    </div>\\r\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<div class=\\\"csui-pman-widget-masking\\\">\\r\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isEditMode : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.program(3, data, 0)})) != null ? stack1 : \"\")\n    + \"</div>\\r\\n<div class=\\\"csui-pman-popover-right csui-pman-popover-holder\\\"></div>\\r\\n<div class=\\\"csui-pman-popover-left csui-pman-popover-holder\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_behaviours_impl_widget.masking', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/behaviours/impl/widget.masking',[],function(){});\n","/**\r\n * Responsibilities:\r\n *  - Masking the unit level widget of perpsective. In case of grid.view, it will be cell\r\n *  - Listen and handle DnD of widgets and act accordingly - replace widgets\r\n *  - Fire \"replace:widget\" on dropping of any widget\r\n *  - Deleting a widget from perspective\r\n *  - Configuration of widget using callouts\r\n *\r\n * Usage:\r\n *  - Should be applied to widgets of perspective to be able to configure them\r\n *\r\n * Required Inputs:\r\n *  - perspectiveView\r\n *  - widgetView\r\n *\r\n * Events:\r\n *  - replace:widget\r\n *    - Fires on perspectiveView\r\n *    - When dropping any widget from tools on perpsective widget\r\n *  - delete:widget\r\n *    - Fires on perspectiveView\r\n *    - When deleting a perspective widget\r\n *  - update:widget:size\r\n *    - Firex Fires on perspectiveView\r\n *    - When change in size of widget\r\n *  - update:widget:config\r\n *    - Firex Fires on perspectiveView\r\n *    - When widget configuration options updated\r\n */\r\ncsui.define('csui/perspective.manage/behaviours/pman.widget.config.behaviour',['require', 'i18n', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/utils/base', 'csui/lib/backbone', 'csui/utils/log',\r\n  'csui/models/widget/widget.model',\r\n  'csui/perspective.manage/impl/options.form.view',\r\n  'i18n!csui/perspective.manage/behaviours/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/behaviours/impl/widget.masking',\r\n  'csui/utils/perspective/perspective.util',\r\n  'css!csui/perspective.manage/behaviours/impl/widget.masking',\r\n], function (require, i18n, _, $, Marionette, base, Backbone, log, WidgetModel,\r\n    WidgetOptionsFormView, lang, maskingTemplate, PerspectiveUtil) {\r\n  'use strict';\r\n\r\n  var DEFAULTS = {\r\n    removeConfirmMsg: lang.deleteConfirmMsg,\r\n    removeConfirmTitle: lang.deleteConfirmTitle,\r\n    configNeededMessage: lang.configNeeded,\r\n    confirmOnRemove: true,\r\n    allowReplace: true,\r\n    notifyUpdatesImmediatly: false,\r\n    perspectiveMode: 'edit'\r\n  };\r\n\r\n  /**\r\n   * View to mask the perspective widget and handles the widget configuration\r\n   */\r\n  var WidgetMaskingView = Marionette.ItemView.extend({\r\n    template: maskingTemplate,\r\n    className: function () {\r\n      var classNames  = [WidgetMaskingView.className],\r\n          isHidden    = PerspectiveUtil.isHiddenWidget(this.options.widgetConfig),\r\n          widgetState = isHidden ? 'hidden' : 'shown';\r\n      classNames.push('csui-pman-widget-mode-' + this.options.perspectiveMode);\r\n      classNames.push('csui-pman-widget-state-' + widgetState);\r\n      return _.unique(classNames).join(' ');\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        removeWidget: this.options.removeConfirmTitle,\r\n        widgetTitle: this.manifest && this.manifest.title,\r\n        configNeeded: this.options.configNeededMessage,\r\n        isEditMode: this.isEditPage(),\r\n        hideWidget: lang.hideWidget,\r\n        showWidget: lang.showWidget\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      delete: '.csui-pman-widget-close',\r\n      masking: '.csui-pman-widget-masking',\r\n      widgetTitle: '.csui-pman-widget-error-heading',\r\n      hideWidgetBtn: '.csui-pman-hide-widget',\r\n      showWidgetBtn: '.csui-pman-show-widget',\r\n    },\r\n\r\n    configureEvents: {\r\n      'click @ui.masking': '_showCallout',\r\n      'click @ui.delete': 'onDeleteClick',\r\n    },\r\n\r\n    events: function () {\r\n      var evts = {};\r\n      switch (this.options.perspectiveMode) {\r\n      case 'edit':\r\n        evts = _.extend(evts, this.configureEvents);\r\n        if (!!this.options.allowReplace) {\r\n          evts = _.extend(evts, {\r\n            'drop': 'onDrop',\r\n            'dragover': 'onDragOver',\r\n            'dragenter': 'onDragEnter',\r\n            'dragleave': 'onDragLeave'\r\n          });\r\n        }\r\n        break;\r\n      case 'personalize':\r\n        evts = _.extend(evts, {\r\n          'click @ui.hideWidgetBtn': '_onHideWidget',\r\n          'click @ui.showWidgetBtn': '_onShowWidget',\r\n        });\r\n        if (this.options.personalizable) {\r\n          evts = _.extend(evts, this.configureEvents);\r\n        }\r\n        break;\r\n      }\r\n      return evts;\r\n    },\r\n\r\n    constructor: function WidgetMaskingView(options) {\r\n      options = _.defaults(options, DEFAULTS);\r\n      Marionette.ItemView.apply(this, arguments);\r\n      this.dropCounter = 0;\r\n      this.manifest = options.manifest;\r\n      this.perspectiveView = options.perspectiveView;\r\n      this.widgetView = options.widgetView;\r\n      this.widgetConfig = options.widgetConfig;\r\n      this.perspectiveMode = options.perspectiveMode;\r\n      this.listenTo(this.widgetView, 'refresh:mask', this._doRefreshMask);\r\n      this.listenTo(this.widgetView, 'reposition:flyout', function () {\r\n        if (!!this.$popoverEl && this.$popoverEl.data('binf.popover')) {\r\n          this.$popoverEl.binf_popover('show');\r\n        }\r\n      });\r\n    },\r\n\r\n    _isConfigurable: function () {\r\n      return !!this.widgetConfig && !_.isEmpty(this.widgetConfig) &&\r\n             this.widgetConfig.type !== WidgetMaskingView.placeholderWidget &&\r\n             this.widgetConfig.type !== 'csui/widgets/error';\r\n    },\r\n\r\n    isEditPage: function () {\r\n      return this.perspectiveMode === PerspectiveUtil.MODE_EDIT_PERSPECTIVE;\r\n    },\r\n\r\n    onRender: function () {\r\n      if (!this._isConfigurable()) {\r\n        // Widget configuration not found. Hence cannot show callout\r\n        return;\r\n      }\r\n      var self = this;\r\n      this._loadManifest().done(function (manifest) {\r\n        self.ui.widgetTitle.text(manifest.title);\r\n        if (self.manifest.selfConfigurable) {\r\n          self._adoptToSelfConfigurableWidget();\r\n        } else if (self.isEditPage() || self.options.personalizable) {\r\n          self._createOptionsForm(function () {\r\n            if (this.isDestroyed) {\r\n              // Masking destroyed even before form render. No action required.\r\n              return;\r\n            }\r\n            var openCallout = !!self.widgetConfig.options &&\r\n                              (self.widgetConfig.options.___pman_isdropped ||\r\n                               self.widgetConfig.options.___pman_opencallout);\r\n            var isWidgetReplaced = self._updateWidgetOptions(false, true);\r\n            // Refresh form to remove validation error messages created by default validation (above statement)\r\n            self.optionsFormView.refresh(function () {\r\n              self.$el.addClass('cs-pman-callout-ready');\r\n              self.$el.addClass('cs-pman-config-ready');\r\n              if (openCallout && !isWidgetReplaced) {\r\n                self._showOptionsCallout(manifest, true);\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          self.$el.addClass('cs-pman-config-ready');\r\n        }\r\n      });\r\n    },\r\n\r\n    onDestroy: function () {\r\n      this.optionsFormView && this.optionsFormView.destroy();\r\n    },\r\n\r\n    _adoptToSelfConfigurableWidget: function () {\r\n      if (!PerspectiveUtil.isEmptyPlaceholder(this.widgetConfig, this.perspectiveMode)\r\n          && this.perspectiveMode === PerspectiveUtil.MODE_PERSONALIZE &&\r\n          !PerspectiveUtil.isPersonalWidget(this.widgetConfig)) {\r\n        // Though this widget self configurable, only personal widget can be configured in \"Personalize Page\".\r\n        return;\r\n      }\r\n      this.$el.addClass('csui-has-editing-capability');\r\n      delete this.widgetConfig.options.___pman_isdropped;\r\n      this.listenTo(this.widgetView, 'update:widget:options', function (options) {\r\n        delete this.widgetConfig.options.___pman_isdropped;\r\n        this._notifyConfigChanges(options, options.isValid, false);\r\n      });\r\n      this.listenTo(this.widgetView, 'remove:widget', this._doDeleteWidget);\r\n      this.listenTo(this.widgetView, 'replace:widget', this.onDrop);\r\n    },\r\n\r\n    // Instead of re-rendering the whole mask, which would close flyout, just update DOM manually with titles, text changes etc.,\r\n    _doRefreshMask: function (options) {\r\n      this.options = _.extend({}, this.options, DEFAULTS, options);\r\n      this.ui.delete.attr(\"title\", this.options.removeConfirmTitle);\r\n    },\r\n\r\n    _showCallout: function (event) {\r\n      if (this.isDestroyed) {\r\n        return;\r\n      }\r\n      if (!this._isConfigurable()) {\r\n        // Widget configuration not found. Hence cannot show callout\r\n        return;\r\n      }\r\n      // To prevent default click action and open fly out\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      if (!!this.ui.delete.is(event.target)) {\r\n        // avoid showing popover on click of remove widget icon\r\n        return;\r\n      }\r\n      // open widget configuration callout\r\n      this._loadManifest().done(function (manifest) {\r\n        this._showOptionsCallout(manifest);\r\n      }.bind(this));\r\n    },\r\n\r\n    _showOptionsCallout: function (manifest, forceShow) {\r\n      if (this.isDestroyed) {\r\n        return;\r\n      }\r\n      //To resolve LPAD-73913 defect.\r\n      if (base.isIE11() && !!document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n      if (!!this.$popoverEl && this.$popoverEl.data('binf.popover')) {\r\n        // Currently showing popover. Close it.\r\n        this.$popoverEl.binf_popover('destroy');\r\n        return;\r\n      }\r\n      if (this.$el.closest(\".cs-perspective\").find(\".binf-popover\").length) {\r\n        this._closePopover();\r\n        if (!forceShow) {\r\n          // Callee asked to show flyout, hence, continue showing it. Dont return.\r\n          return;\r\n        }\r\n      }\r\n      this._calculatePopoverPlacement();\r\n\r\n      if (!!this.optionsFormView) {\r\n        // Toggle. Open popover with existing form.view\r\n        this._showPopover();\r\n      } else {\r\n        this._createOptionsForm();\r\n      }\r\n    },\r\n\r\n    _closePopover: function () {\r\n      this.$el.closest(\".cs-perspective\").find('.' + WidgetMaskingView.className +\r\n                                               ' .csui-pman-popover-holder').binf_popover(\r\n          'destroy');\r\n    },\r\n\r\n    _createOptionsForm: function (afterRenderCallback) {\r\n      this.optionsFormView = new WidgetOptionsFormView(_.defaults({\r\n        context: this.perspectiveView.options.context,\r\n        manifest: this.manifest\r\n      }, this.options));\r\n      if (!!afterRenderCallback) {\r\n        this.optionsFormView.listenToOnce(this.optionsFormView, 'render:form', afterRenderCallback);\r\n      }\r\n      this.optionsFormView.render();\r\n      this.optionsFormView.listenTo(this.optionsFormView, 'change:field',\r\n          this._onChangeField.bind(this));\r\n    },\r\n\r\n    _calculatePopoverPlacement: function () {\r\n      var adjust = this._determineCalloutPlacement();\r\n      this.$popoverEl = this.$el.find('.csui-pman-popover-' + adjust.placement);\r\n      if (adjust.mirror) {\r\n        adjust.placement = adjust.placement == 'right' ? 'left' : 'right';\r\n      }\r\n      this.placement = adjust.placement;\r\n      this.$popoverContainer = $(\r\n          '<div class=\"binf-popover pman-widget-popover pman-ms-popover\" role=\"tooltip\"><div class=\"binf-arrow\"></div><h3 class=\"binf-popover-title\"></h3><div class=\"binf-popover-content\"></div></div>');\r\n      this.$popoverContainer.css(\"max-width\", adjust.availableSpace + \"px\");\r\n    },\r\n\r\n    /**\r\n     * Determite callout position and show widget configuration callout\r\n     */\r\n    _showPopover: function () {\r\n      var popoverOptions = {\r\n        html: true,\r\n        content: this.optionsFormView.el,\r\n        trigger: 'manual',\r\n        viewport: { // Limit popover placement to perspective panel only\r\n          selector: this.options.perspectiveSelector,\r\n          padding: 15\r\n        },\r\n        placement: this.placement,\r\n        template: this.$popoverContainer,\r\n        animation: false\r\n      };\r\n      this.$popoverEl.binf_popover(popoverOptions);\r\n      this.$popoverEl.off('hidden.binf.popover')\r\n          .on('hidden.binf.popover', this._handleCalloutHide.bind(this));\r\n      this.$popoverEl.binf_popover('show');\r\n      //To change the border color to red for non supported widgets.\r\n      this.optionsFormView.onPopoverShow(this.$popoverContainer);\r\n      this.optionsFormView.$el.find('.cs-formview-wrapper').trigger('refresh:setcontainer');\r\n      var popover   = this.$popoverEl.next(\".binf-popover\"),\r\n          itemFirst = popover.find(\".alpaca-container-item-first\");\r\n      if (itemFirst.length) {\r\n        itemFirst = itemFirst.first();\r\n        var ele = itemFirst.find(\r\n            'input:visible, textarea:visible, button.binf-dropdown-toggle:visible');\r\n        if (ele.length) {\r\n          ele.trigger('focus');\r\n        }\r\n      }\r\n      this._registerPopoverEvents();\r\n      this.optionsFormView.trigger('ensure:scrollbar');\r\n      // TODO Use title of on formview as labelledBy instead of hidden popover title.\r\n      // Currently empty H tag failed html validation, hence fill it will title.\r\n      var popoverLabelElemId = _.uniqueId('popoverLabelId'),\r\n          popoverHeader      = popover.find('>.binf-popover-title');\r\n      if (popoverHeader) {\r\n        popoverHeader.attr('id', popoverLabelElemId);\r\n        popoverHeader.html(this.manifest.title);\r\n        popover.attr('aria-labelledby', popoverLabelElemId);\r\n      }\r\n    },\r\n\r\n    _hideCallout: function () {\r\n      this.$popoverEl && this.$popoverEl.binf_popover('destroy');\r\n    },\r\n\r\n    _registerPopoverEvents: function () {\r\n      $('.perspective-editing .cs-perspective-panel').off('click.' + this.cid).on(\r\n          'click.' + this.cid, {\r\n            view: this\r\n          },\r\n          this._documentClickHandler);\r\n      $('.pman-container').off('click.' + this.cid).on('click.' + this.cid, {\r\n        view: this\r\n      }, this._documentClickHandler);\r\n      $(window).off('click.' + this.cid).on('resize.' + this.cid, {\r\n        view: this\r\n      }, this._windowResizeHandler);\r\n    },\r\n\r\n    _windowResizeHandler: function (event) {\r\n      var self = event.data.view;\r\n      // closing opened popover on window resize\r\n      self._hideCallout();\r\n    },\r\n\r\n    _unregisterPopoverEvents: function () {\r\n      $('.perspective-editing .cs-perspective-panel').off('click.' + this.cid,\r\n          this._documentClickHandler);\r\n      $('.pman-container').off('click.' + this.cid, this._documentClickHandler);\r\n      $(window).off('resize.' + this.cid, this._windowResizeHandler);\r\n    },\r\n\r\n    /**\r\n     * Handle callout data update to widget on hidding of popover\r\n     */\r\n    _handleCalloutHide: function () {\r\n      this._validateWidgetConfig();\r\n      this._unregisterPopoverEvents();\r\n      delete this.widgetConfig.options.___pman_opencallout;\r\n      this._updateWidgetOptions(true);\r\n      this._enableorDisableSaveButton();\r\n    },\r\n\r\n    _validateWidgetConfig: function () {\r\n      var options = this.optionsFormView.getValues(),\r\n          isValid = this.optionsFormView.validate();\r\n      if (_.isFunction(this.widgetView.validateConfiguration)) {\r\n        isValid = isValid && this.widgetView.validateConfiguration(options);\r\n      }\r\n      var action = !isValid ? 'addClass' : 'removeClass';\r\n      this.$el[action]('binf-perspective-has-error');\r\n    },\r\n\r\n    _enableorDisableSaveButton: function () {\r\n      var saveBtn  = $('.perspective-editing .pman-header .icon-save'),\r\n          hasError = $('.perspective-editing').find(\".binf-perspective-has-error\").length > 0;\r\n      saveBtn.prop('disabled', hasError);\r\n    },\r\n\r\n    /**\r\n     * Triggered on changing of any widget's options on form.\r\n     * Recreates the widgets with latest options (only if valid) to make sure widget is showing live data.\r\n     *\r\n     * Parameters:\r\n     *  - reloadForLiveData: widget required to be re-created to get the changes reflected\r\n     *  - softUpdate: Trigger change even without reloading the widget\r\n     *\r\n     */\r\n    _updateWidgetOptions: function (reloadForLiveData, softUpdate) {\r\n      var isValid = this.optionsFormView.validate(),\r\n          options = this.optionsFormView.getValues();\r\n      softUpdate = _.isUndefined(softUpdate) ? !reloadForLiveData : softUpdate\r\n      var isWidgetReplaced = this._notifyConfigChanges(options, isValid, reloadForLiveData,\r\n          softUpdate);\r\n      this._enableorDisableSaveButton();\r\n      return isWidgetReplaced;\r\n    },\r\n\r\n    _notifyConfigChanges: function (options, isValid, reloadForLiveData, softUpdate) {\r\n      options = options || {};\r\n      var oldOptions = this.widgetConfig.options || {};\r\n      var isOptionsSame = _.isEqual(oldOptions, options);\r\n      this.perspectiveView.trigger(\"update:widget:options\", {\r\n        widgetView: this.widgetView,\r\n        isValid: isValid,\r\n        options: options,\r\n        softUpdate: softUpdate\r\n      });\r\n\r\n      if (isOptionsSame) {\r\n        // Avoid widget recreation when options not changed.\r\n        return;\r\n      }\r\n\r\n      if (!!isValid) {\r\n        // Check if widget should be recreated on options change (for live data). \r\n        if (!this.manifest.callback && (reloadForLiveData || oldOptions.___pman_isdropped)) {\r\n          // Recreate with widget (for live data) for the first time after drop to provde widget the options with default values (from manifest)\r\n          // OR Recreate widget with updated options.\r\n          var widgetType = this.widgetConfig.type;\r\n          if (this._isPreviewWidget()) {\r\n            // Has valid options to initialize origianl widgets now\r\n            var originalWidget = this.widgetConfig.options.widget;\r\n            widgetType = originalWidget.id;\r\n          }\r\n          if (!!oldOptions.___pman_isdropped) {\r\n            options = _.extend({___pman_opencallout: oldOptions.___pman_isdropped}, options);\r\n          }\r\n          var widgetToReplace = {\r\n            type: widgetType,\r\n            kind: this.widgetConfig.kind,\r\n            options: options\r\n          };\r\n          this.perspectiveView.trigger('replace:widget', this.widgetView, widgetToReplace);\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listen document click to close callouts\r\n     */\r\n    _documentClickHandler: function (event) {\r\n      var self = event.data.view;\r\n      if (!!$(event.target).closest('.binf-popover').length) {\r\n        // Click on popover\r\n        return;\r\n      }\r\n      if (!Marionette.isNodeAttached(event.target)) {\r\n        // after click on element in popover, the element not exist in dom\r\n        self.widgetView.trigger('reposition:flyout');\r\n        return;\r\n      }\r\n      if (self.$el.is(event.target) ||\r\n          (!!self.$el.has(event.target).length && !self.ui.delete.is(event.target)) ||\r\n          self.widgetView.$el.is(event.target) || self.widgetView.$el.has(event.target).length) {\r\n        // Click on current widget\r\n        return;\r\n      }\r\n      self._unregisterPopoverEvents();\r\n      self._hideCallout();\r\n    },\r\n\r\n    _onChangeField: function (field) {\r\n      if (field.name === WidgetOptionsFormView.widgetSizeProperty) {\r\n        // Notify perspective panel about size change to do respective DOM / style updates\r\n        this.perspectiveView.trigger(\"update:widget:size\", this.options.widgetView, field.value);\r\n        // Close popover for now.\r\n        this.$popoverEl.binf_popover('destroy');\r\n        // TODO Re-position popover as widget size may change\r\n        // this._calculatePopoverPlacement();\r\n        // this._showPopover();\r\n      } else if (this.options.notifyUpdatesImmediatly) {\r\n        this._updateWidgetOptions(false, false);\r\n        this.widgetView.trigger('reposition:flyout');\r\n      }\r\n    },\r\n\r\n    _evalRequiredFormWidth: function () {\r\n      // var formContainer = $(\"<div class='pman-widget-popover'/>\");\r\n      // formContainer.appendTo(document.body);\r\n\r\n      this.optionsFormView.$el.addClass('pman-prerender-form');\r\n      this.optionsFormView.$el.addClass('pman-widget-popover');\r\n      this.optionsFormView.$el.appendTo(document.body);\r\n      this.optionsFormView.$el.find('.cs-formview-wrapper').trigger('refresh:setcontainer');\r\n      var formWidth = this.optionsFormView.$el.width();\r\n      if (this.optionsFormView.$el.find('.csui-scrollablecols').length > 0) {\r\n        formWidth += this.optionsFormView.$el.find('.csui-scrollablecols')[0].scrollWidth -\r\n                     this.optionsFormView.$el.find('.csui-scrollablecols')[0].offsetWidth;\r\n      }\r\n      this.optionsFormView.$el.removeClass('pman-widget-popover');\r\n      return formWidth;\r\n    },\r\n\r\n    _calculateSpaceAroundWidget: function () {\r\n      var elWidth       = this.$el.width(),\r\n          elWidth       = (elWidth / 2),\r\n          documentWidth = $(document).width(),\r\n          leftOffset    = this.$el.find('.csui-pman-popover-left').offset().left,\r\n          rightOffset   = documentWidth - this.$el.find('.csui-pman-popover-right').offset().left;\r\n\r\n      var aroundSpaces = {\r\n        right: {\r\n          placement: 'right',\r\n          mirror: false,\r\n          availableSpace: rightOffset\r\n        },\r\n        rightFlip: {\r\n          placement: 'right',\r\n          mirror: true,\r\n          availableSpace: (documentWidth - rightOffset)\r\n        },\r\n        left: {\r\n          placement: 'left',\r\n          mirror: false,\r\n          availableSpace: leftOffset\r\n        },\r\n        leftFlip: {\r\n          placement: 'left',\r\n          mirror: true,\r\n          availableSpace: (documentWidth - leftOffset)\r\n        }\r\n      };\r\n      return aroundSpaces;\r\n    },\r\n\r\n    _determineCalloutPlacement: function () {\r\n      var isRtl     = i18n && i18n.settings.rtl,\r\n          formWidth = this._evalRequiredFormWidth() + 20, // For additional spacing around Form\r\n          allSpaces = this._calculateSpaceAroundWidget(),\r\n          i, perfectSpace, highSpace;\r\n\r\n      var spacings = !isRtl ?\r\n          [allSpaces.right, allSpaces.left, allSpaces.leftFlip, allSpaces.rightFlip] :\r\n          [allSpaces.rightFlip, allSpaces.leftFlip, allSpaces.left, allSpaces.right];\r\n\r\n      for (i = 0; i < spacings.length; i++) {\r\n        var current = spacings[i];\r\n        if (formWidth < current.availableSpace) {\r\n          perfectSpace = current;\r\n          break;\r\n        }\r\n        if (!highSpace || current.availableSpace > highSpace.availableSpace) {\r\n          highSpace = current;\r\n        }\r\n      }\r\n      if (!perfectSpace) {\r\n        // Widget is not perfect fit in any edge. So take high availability\r\n        perfectSpace = highSpace;\r\n      }\r\n      perfectSpace.availableSpace -= 20; // For additional spacing around popover.\r\n\r\n      return perfectSpace;\r\n    },\r\n\r\n    _isPreviewWidget: function () {\r\n      return this.widgetConfig.type === WidgetMaskingView.perspectiveWidget;\r\n    },\r\n\r\n    _loadManifest: function () {\r\n      if (this.manifest !== undefined) {\r\n        return $.Deferred().resolve(this.manifest);\r\n      }\r\n      if (this._isPreviewWidget()) {\r\n        // For widgets added using DnD, get manifest from perspective widget's options \r\n        // since Perspective widget will be added as preview for original widget\r\n        this.manifest = this.widgetConfig.options.widget.get('manifest');\r\n        return this._loadManifest();\r\n      }\r\n      var deferred = $.Deferred();\r\n      var self        = this,\r\n          widgetModel = new WidgetModel({\r\n            id: this.widgetConfig.type\r\n          });\r\n      widgetModel.fetch().then(function () {\r\n        self.manifest = widgetModel.get('manifest');\r\n        deferred.resolve(self.manifest);\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    onDeleteClick: function (event) {\r\n      this._closePopover();\r\n      event.preventDefault();\r\n      if (!this.options.confirmOnRemove) {\r\n        this._doDeleteWidget();\r\n      } else {\r\n        var self = this;\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion(self.options.removeConfirmMsg,\r\n              self.options.removeConfirmTitle,\r\n              {\r\n                buttons: {\r\n                  showYes: true,\r\n                  labelYes: lang.remove,\r\n                  showNo: true,\r\n                  labelNo: lang.cancel\r\n                }\r\n              })\r\n              .done(function (yes) {\r\n                if (yes) {\r\n                  self._doDeleteWidget();\r\n                }\r\n              });\r\n        });\r\n      }\r\n    },\r\n\r\n    _doDeleteWidget: function () {\r\n      this.perspectiveView.trigger(\"delete:widget\", this.widgetView);\r\n      this._enableorDisableSaveButton();\r\n    },\r\n\r\n    _doReplaceWidget: function (widgetToReplace) {\r\n      var manifest  = (widgetToReplace.get('manifest') || {}),\r\n          newWidget = { // Widget is able to intialize with default (empty) options.\r\n            type: widgetToReplace.id,\r\n            kind: manifest.kind\r\n          };\r\n      if (!PerspectiveUtil.isEligibleForLiveWidget(manifest)) {\r\n        // Widget has few required options / has callback. Hence create generic \"perspective widget preview\" widget\r\n        newWidget = {\r\n          type: WidgetMaskingView.perspectiveWidget,\r\n          kind: manifest.kind,\r\n          options: {\r\n            options: {}, // To be used and filled by callout form\r\n            widget: widgetToReplace\r\n          }\r\n        };\r\n      }\r\n      newWidget.options = _.extend({___pman_isdropped: true}, newWidget.options);\r\n      this.perspectiveView.trigger('replace:widget', this.widgetView, newWidget);\r\n    },\r\n\r\n    onDragOver: function (event) {\r\n      event.preventDefault();\r\n    },\r\n\r\n    onDragEnter: function (event) {\r\n      event.preventDefault();\r\n      this.dropCounter++;\r\n      this.$el.siblings(\".csui-perspective-placeholder\").addClass('csui-widget-drop');\r\n    },\r\n\r\n    onDragLeave: function () {\r\n      this.dropCounter--;\r\n      if (this.dropCounter === 0) {\r\n        this.$el.siblings(\".csui-perspective-placeholder\").removeClass('csui-widget-drop');\r\n      }\r\n    },\r\n\r\n    _extractWidgetToDrop: function (event) {\r\n      var dragData = event.originalEvent.dataTransfer.getData(\"text\");\r\n      if (!dragData) {\r\n        return undefined;\r\n      }\r\n      try { // TODO get rid of try catch and handle like non-droppable object\r\n        var widgetToReplace = new WidgetModel(JSON.parse(dragData));\r\n        return widgetToReplace;\r\n      } catch (e) {\r\n        // Unsupported drop\r\n        return false;\r\n      }\r\n    },\r\n\r\n    onDrop: function (event) {\r\n      event.preventDefault();\r\n      this.onDragLeave();\r\n      var widgetToReplace = this._extractWidgetToDrop(event);\r\n      if (!widgetToReplace) {\r\n        return;\r\n      }\r\n      if (this.widgetConfig.type === WidgetMaskingView.placeholderWidget) {\r\n        this._doReplaceWidget(widgetToReplace);\r\n      } else {\r\n        var self = this;\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion(lang.replaceConfirmMsg, lang.replaceConfirmTitle, {\r\n            buttons: {\r\n              showYes: true,\r\n              labelYes: lang.replace,\r\n              showNo: true,\r\n              labelNo: lang.cancel\r\n            }\r\n          })\r\n              .done(function (userConfirmed) {\r\n                if (userConfirmed) {\r\n                  self._doReplaceWidget(widgetToReplace);\r\n                }\r\n              });\r\n        });\r\n      }\r\n    },\r\n\r\n    _updateStyles: function () {\r\n      var className = _.result(this, 'className');\r\n      this.$el.attr('class', className);\r\n    },\r\n\r\n    _onHideWidget: function () {\r\n      this.perspectiveView.trigger('before:hide:widget', this.widgetView);\r\n      PerspectiveUtil.setWidgetHidden(this.widgetConfig, true);\r\n      this._notifyConfigChanges(this.widgetConfig.options, true, false);\r\n      this._updateStyles();\r\n      this.perspectiveView.trigger('hide:widget', this.widgetView);\r\n    },\r\n\r\n    _onShowWidget: function () {\r\n      this.perspectiveView.trigger('before:show:widget', this.widgetView);\r\n      PerspectiveUtil.setWidgetHidden(this.widgetConfig, false);\r\n      this._notifyConfigChanges(this.widgetConfig.options, true, false);\r\n      this._updateStyles();\r\n      this.perspectiveView.trigger('show:widget', this.widgetView);\r\n    },\r\n\r\n  }, {\r\n    className: 'csui-configure-perspective-widget',\r\n    perspectiveWidget: 'csui/perspective.manage/widgets/perspective.widget',\r\n    placeholderWidget: 'csui/perspective.manage/widgets/perspective.placeholder',\r\n    widgetSizeProperty: '__widgetSize'\r\n  });\r\n\r\n  var PerspectiveWidgetConfigurationBehaviour = Marionette.Behavior.extend({\r\n\r\n    defaults: {\r\n      perspectiveSelector: '.perspective-editing .cs-perspective > div'\r\n    },\r\n\r\n    constructor: function PerspectiveWidgetConfigurationBehaviour(options, view) {\r\n      options || (options = {});\r\n      options.perspectiveView = options.perspectiveView || view;\r\n      this.perspectiveView = options.perspectiveView;\r\n      Marionette.Behavior.prototype.constructor.apply(this, arguments);\r\n      this.view = view;\r\n      _.extend(this.perspectiveView, {\r\n        getPManPlaceholderWidget: function () {\r\n          return {\r\n            type: WidgetMaskingView.placeholderWidget,\r\n            options: {}\r\n          };\r\n        }\r\n      })\r\n    },\r\n\r\n    _ensureWidgetElement: function () {\r\n      if (!_.isObject(this.$widgetEl)) {\r\n        // Consider element to add mask can be provided through options\r\n        this.$widgetEl = this.options.el ? $(this.options.el) : this.view.$el;\r\n      }\r\n      if (!this.$widgetEl || this.$widgetEl.length === 0) {\r\n        throw new Marionette.Error('An \"el\" ' + this.$widgetEl.selector + ' must exist in DOM');\r\n      }\r\n      return true;\r\n    },\r\n\r\n    _checkAndApplyMask: function () {\r\n      this._ensureWidgetElement();\r\n      if (this.$widgetEl.children('.' + WidgetMaskingView.className).length > 0) {\r\n        // Mask exist\r\n        return;\r\n      }\r\n\r\n      // Get data configured to widget\r\n      var widgetConfig = this._resolveWidgetConfiguration();\r\n      if (!widgetConfig) {\r\n        throw new Marionette.Error({\r\n          name: 'NoWidgetConfigurationError',\r\n          message: 'A \"widgetConfig\" must be specified'\r\n        });\r\n      }\r\n      if (this.maskingView && this.$widgetEl.has(this.maskingView.$el).length &&\r\n          _.isEqual(widgetConfig, this.options.widgetConfig)) {\r\n        // No change in configuration. No rerender of mask required.\r\n        return;\r\n      }\r\n      this.maskingView && this.maskingView.destroy();\r\n      this.maskingView = new WidgetMaskingView(\r\n          _.extend(this.options, {\r\n            widgetView: this.view,\r\n            widgetConfig: widgetConfig\r\n          }));\r\n      this.maskingView.render();\r\n      this.$widgetEl.append(this.maskingView.el);\r\n      this.$widgetEl.addClass('csui-pman-editable-widget')\r\n      // To be used perspective.view to show placeholder watermark\r\n      this.$widgetEl.data('pman.widget', {\r\n        attributes: {\r\n          manifest: widgetConfig\r\n        }\r\n      });\r\n      if (widgetConfig.type === WidgetMaskingView.placeholderWidget) {\r\n        // Prevent perspective placeholder to participate in sorting.\r\n        this.$widgetEl.removeClass('csui-draggable-item');\r\n      }\r\n    },\r\n\r\n    _resolveWidgetConfiguration: function () {\r\n      if (!!this.view.model && !!this.view.model.get('widget')) {\r\n        // Try model of widget view - Flow, LCR, Grid.. who even using grid control \r\n        return this.view.model.get('widget');\r\n      }\r\n      if (!!this.view.getPManWidgetConfig && _.isFunction(this.view.getPManWidgetConfig)) {\r\n        // Widget configuration can be provided though a function \r\n        return this.view.getPManWidgetConfig();\r\n      }\r\n      if (!!this.options.widgetConfig) {\r\n        // Can be provided through behaviour's options\r\n        return _.result(this.options, 'widgetConfig');\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      if (this.options.notifyUpdatesImmediatly && this.view.isUpdating) {\r\n        return;\r\n      }\r\n      this._checkAndApplyMask();\r\n      this.maskingView && this.maskingView._enableorDisableSaveButton();\r\n    },\r\n\r\n    onDestroy: function () {\r\n      this.maskingView && this.maskingView.destroy();\r\n      this.maskingView = undefined;\r\n    }\r\n\r\n  });\r\n\r\n  return PerspectiveWidgetConfigurationBehaviour;\r\n\r\n})\r\n;\n","csui.define('csui/perspective.manage/pman.view',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/utils/non-emptying.region/non-emptying.region',\r\n  'csui/perspective.manage/impl/pman.panel.view',\r\n  'csui/utils/perspective/perspective.util',\r\n  'csui/utils/contexts/factories/application.scope.factory',\r\n  'csui/utils/contexts/factories/node',\r\n  'csui/utils/contexts/factories/user',\r\n  'csui/models/perspective/personalization.model',\r\n  'i18n!csui/perspective.manage/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/impl/pman',\r\n  'css!csui/perspective.manage/impl/pman',\r\n  'csui/perspective.manage/behaviours/pman.widget.config.behaviour'\r\n], function (_, $, Backbone, Marionette, base, NonEmptyingRegion, PManPanelView, PerspectiveUtil,\r\n    ApplicationScopeModelFactory,\r\n    NodeModelFactory, UserModelFactory, PersonalizationModel, lang, template) {\r\n\r\n  var pmanContainer;\r\n\r\n  var PManView = Marionette.ItemView.extend({\r\n    className: function () {\r\n      var classNames = ['pman', 'pman-container'];\r\n      classNames.push('pman-mode-' + this.options.mode);\r\n      return _.unique(classNames).join(' ');\r\n    },\r\n\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        addWidget: lang.addWidget,\r\n        save: lang.save,\r\n        cancel: lang.cancel,\r\n        reset: lang.reset,\r\n        personalizeMode: this.mode === PerspectiveUtil.MODE_PERSONALIZE &&\r\n                         (this.options.perspective.has('perspective_id') ||\r\n                          this.options.perspective.has('id'))\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      \"pmanPanel\": \".pman-header .pman-pannel-wrapper\",\r\n      'cancelEdit': '.pman-header .cancel-edit',\r\n      'addIcon': '.pman-header .icon-toolbarAdd',\r\n      'saveBtn': '.pman-header .icon-save',\r\n      'trashArea': '.pman-header .pman-trash-area',\r\n      'resetBtn': '.pman-header .icon-reset'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.cancelEdit': \"onClickClose\",\r\n      'click @ui.addIcon': \"togglePannel\",\r\n      'click @ui.saveBtn': \"onClickSave\",\r\n      'click @ui.resetBtn': \"onClickReset\"\r\n    },\r\n\r\n    constructor: function PManView(options) {\r\n      options || (options = {});\r\n      _.defaults(options, {\r\n        applyMasking: this.applyMasking.bind(this),\r\n        container: document.body,\r\n        mode: PerspectiveUtil.MODE_EDIT_PERSPECTIVE\r\n      });\r\n      options.container = $(options.container);\r\n      this.context = options.context;\r\n      this.applicationScope = this.context.getModel(ApplicationScopeModelFactory);\r\n      this.mode = options.mode;\r\n      this._prepareForEdit(options.perspective);\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n      this._registerEventHandler();\r\n    },\r\n\r\n    _registerEventHandler: function () {\r\n      this.listenTo(this, 'change:layout', function (newLayoutType) {\r\n        this.perspective.setPerspective({\r\n          type: newLayoutType,\r\n          options: {perspectiveMode: this.mode}\r\n        }, {silent: true});\r\n        this._triggerEditMode();\r\n        this.togglePannel();\r\n      });\r\n      this.listenTo(this.context, 'save:perspective', this._savePerspective);\r\n      // listen to change perspective and exit from edit mode\r\n      this.listenTo(this.context, 'change:perspective', this._onChangePerspective);\r\n      this.listenTo(this.context, 'retain:perspective', this._doExitPerspective);\r\n      this.listenTo(this.context, 'finish:exit:edit:perspective', this._doCleanup);\r\n    },\r\n\r\n    _prepareForEdit: function (originalPerspective) {\r\n      if (!originalPerspective) {\r\n        throw new Error(\"Missing perspective\");\r\n      }\r\n      this.perspective = this._clonePrespective(originalPerspective);\r\n      if (this.perspective.isNew() && this.mode === PerspectiveUtil.MODE_EDIT_PERSPECTIVE) {\r\n        // No perspectives are configues to current node\r\n        this.perspective.setPerspective(this._getDefaultPerspectiveConfig());\r\n      }\r\n      // var perspectiveOptions = this.perspective.getPerspective().options || {};\r\n      // perspectiveOptions.perspectiveMode = this.mode;\r\n    },\r\n\r\n    _clonePrespective: function (original) {\r\n      var perspectiveConfig = original.getPerspective();\r\n      var config = JSON.parse(JSON.stringify(perspectiveConfig));\r\n      original.setPerspective(config);\r\n      return original;\r\n    },\r\n\r\n    show: function () {\r\n      var container = this.getContainer(),\r\n          region    = new NonEmptyingRegion({\r\n            el: container\r\n          });\r\n      region.show(this);\r\n      return this;\r\n    },\r\n\r\n    getContainer: function () {\r\n      if (!pmanContainer || !$.contains(this.options.container, pmanContainer)) {\r\n        pmanContainer = $('<div>', {'class': 'binf-widgets'}).appendTo(this.options.container)[0]\r\n      }\r\n      return pmanContainer;\r\n    },\r\n\r\n    /**\r\n     * Default perspective when no perspectives configured for a container\r\n     */\r\n    _getDefaultPerspectiveConfig: function () {\r\n      // TODO check if LCR is relevant to all containers.\r\n      return {\r\n        \"type\": \"left-center-right\",\r\n        \"options\": {\r\n          \"center\": {\r\n            \"type\": \"csui/widgets/nodestable\"\r\n          }\r\n        }\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Updates / creates perspective\r\n     */\r\n    _savePerspective: function (perspectiveChanges) {\r\n      if (!!perspectiveChanges && !!perspectiveChanges.error) {\r\n        this.ui.saveBtn.prop('disabled', false);\r\n        return;\r\n      }\r\n      this.perspective.update(perspectiveChanges);\r\n      // Save perspective to server\r\n      this.perspective.save().then(_.bind(this._onSaveSuccess, this),\r\n          _.bind(this._onSaveError, this));\r\n    },\r\n\r\n    _onSaveSuccess: function () {\r\n      var self = this;\r\n      if (self.mode === PerspectiveUtil.MODE_EDIT_PERSPECTIVE) {\r\n        this._showMessage(\"success\", lang.perspectiveSaveSuccess);\r\n      } else {\r\n        this._showMessage(\"success\", lang.personalizationSaveSuccess);\r\n      }\r\n      // Update context's perspective and exit from inline editing\r\n      var contextPerspectiveMode = self.context.perspective.get('perspectiveMode') ||\r\n                                   PerspectiveUtil.MODE_EDIT_PERSPECTIVE,\r\n          sourceModel            = self._getSourceModel();\r\n\r\n      var updatePerspective = self.perspective.getPerspective();\r\n      updatePerspective.id = self.perspective.getPerspectiveId();\r\n\r\n      // Keep the perspective / personalization at sourceModel (received from server) up to date.\r\n      if (self.mode === PerspectiveUtil.MODE_EDIT_PERSPECTIVE) {\r\n        // Update only personalization of sourceModel's perspective\r\n        var originalPerspective = sourceModel.get('perspective');\r\n        sourceModel.set('perspective', _.defaults(updatePerspective, originalPerspective));\r\n      } else {\r\n        // Update only personalization of sourceModel's perspective\r\n        var originalPerspective = sourceModel.get('perspective');\r\n        sourceModel.set('perspective',\r\n            _.defaults({personalizations: self.perspective.toJSON()}, originalPerspective));\r\n      }\r\n\r\n      if (contextPerspectiveMode === self.mode) {\r\n        self.context.perspective.set(updatePerspective);\r\n      } else if (self.mode === PerspectiveUtil.MODE_EDIT_PERSPECTIVE) {\r\n        // Original perspective changed. And the current user has personalization of current page.\r\n        // Merge latest perspective updates to personalization\r\n        var personalization = new PersonalizationModel({}, {perspective: updatePerspective});\r\n        personalization.setPerspective(self.context.perspective.toJSON());\r\n        updatePerspective = personalization.getPerspective();\r\n        self.context.perspective.set(updatePerspective);\r\n\r\n      } else if (self.mode === PerspectiveUtil.MODE_PERSONALIZE) {\r\n        // Update the personalizations to context. Since content is currently showing admin's perspective.\r\n        // Probablt this is the first time user personalizing the page.\r\n        var personalization = new PersonalizationModel({},\r\n            {perspective: sourceModel.get('perspective')});\r\n        personalization.setPerspective(updatePerspective);\r\n        updatePerspective = personalization.getPerspective();\r\n        self.context.perspective.set(updatePerspective);\r\n      }\r\n      self._doExitPerspective();\r\n    },\r\n\r\n    _onSaveError: function (error) {\r\n      this.ui.saveBtn.prop('disabled', false);\r\n      // API error while saving..\r\n      var errorMessage;\r\n      if (error && error.responseJSON && error.responseJSON.error) {\r\n        errorMessage = error.responseJSON.error;\r\n      } else {\r\n        var errorHtml = base.MessageHelper.toHtml();\r\n        base.MessageHelper.reset();\r\n        errorMessage = $(errorHtml).text();\r\n      }\r\n      this._showMessage(\"error\", errorMessage);\r\n    },\r\n\r\n    _showMessage: function (type, message) {\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        GlobalMessage.showMessage(type, message);\r\n      });\r\n    },\r\n\r\n    onClickSave: function () {\r\n      this.ui.saveBtn.prop('disabled', true);\r\n      //Close collout if any open\r\n      var popoverTarget = this.options.container.find(\".binf-popover\");\r\n      if (popoverTarget.length) {\r\n        popoverTarget.binf_popover('hide');\r\n      }\r\n      this.context.triggerMethod('serialize:perspective', this.perspective);\r\n    },\r\n\r\n    onClickReset: function () {\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n        alertDialog.confirmQuestion(lang.resetConfirmMsg,\r\n            lang.reset,\r\n            {\r\n              buttons: {\r\n                showYes: true,\r\n                labelYes: lang.reset,\r\n                showNo: true,\r\n                labelNo: lang.cancel\r\n              }\r\n            })\r\n            .done(function (yes) {\r\n              if (yes) {\r\n                self._doReset();\r\n              }\r\n            });\r\n      });\r\n    },\r\n\r\n    _doReset: function () {\r\n      var sourceModel = this._getSourceModel();\r\n      originalPerspective = JSON.parse(JSON.stringify(sourceModel.get('perspective')));\r\n      originalPerspective.options = originalPerspective.options || {};\r\n      originalPerspective.options.perspectiveMode = this.mode;\r\n      var originalConfig = new Backbone.Model(originalPerspective);\r\n      this.context.triggerMethod('enter:edit:perspective', originalConfig);\r\n      this.listenToOnce(this.context, 'finish:enter:edit:perspective', function () {\r\n        this._showMessage(\"success\", lang.resetSuccessful);\r\n      });\r\n    },\r\n\r\n    _getSourceModel: function (params) {\r\n      var sourceModel;\r\n      if (this.applicationScope.get('id') === 'node') {\r\n        sourceModel = this.context.getModel(NodeModelFactory);\r\n      } else if (!this.applicationScope.get('id')) {\r\n        sourceModel = this.context.getModel(UserModelFactory);\r\n      }\r\n      return sourceModel;\r\n    },\r\n\r\n    onClickClose: function () {\r\n      this._doExitPerspective();\r\n    },\r\n\r\n    togglePannel: function () {\r\n      if (!this.ui.pmanPanel.hasClass('binf-active')) {\r\n        // Reset before showing panel\r\n        this._openToolsPanel();\r\n      } else {\r\n        this._closeToolsPanel();\r\n      }\r\n    },\r\n\r\n    _openToolsPanel: function () {\r\n      this.pmanPanelView.trigger('reset:items');\r\n      this.ui.addIcon.addClass('binf-active');\r\n      this.ui.addIcon.attr(\"title\", lang.close);\r\n      this.ui.pmanPanel.addClass('binf-active');\r\n      this.pmanPanelView.triggerMethod(\"panel:open\");\r\n    },\r\n\r\n    _closeToolsPanel: function () {\r\n      this.ui.pmanPanel.removeClass('binf-active');\r\n      this.ui.addIcon.attr(\"title\", lang.addWidget);\r\n      this.ui.addIcon.removeClass('binf-active');\r\n    },\r\n\r\n    applyMasking: function () {\r\n\r\n    },\r\n\r\n    _initializeWidgets: function () {\r\n      if (this.mode === PerspectiveUtil.MODE_PERSONALIZE) {\r\n        // Personalize doesn't need to load all available widgets for DnD\r\n        return;\r\n      }\r\n      this.pmanPanelRegion = new Marionette.Region({\r\n        el: this.ui.pmanPanel\r\n      });\r\n      this.pmanPanelView = new PManPanelView({\r\n        pmanView: this\r\n      });\r\n      this.pmanPanelRegion.show(this.pmanPanelView);\r\n      _.isFunction(this.ui.trashArea.droppable) && this.ui.trashArea.droppable({\r\n        tolerance: 'pointer',\r\n        hoverClass: \"pman-trash-hover\",\r\n        accept: function () {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    _triggerEditMode: function () {\r\n      var perspectiveConfig = this.perspective.getPerspective();\r\n      perspectiveConfig.options = perspectiveConfig.options || {};\r\n      perspectiveConfig.options.perspectiveMode = this.mode;\r\n      var perspective = new Backbone.Model(perspectiveConfig);\r\n      this.context.triggerMethod('enter:edit:perspective', perspective);\r\n    },\r\n\r\n    _beforeTransition: function () {\r\n      var perspectiveContainer = this.options.container.find('.cs-perspective');\r\n      this.options.container.addClass('perspective-editing-transition');\r\n      base.onTransitionEnd(perspectiveContainer, function () {\r\n        this.options.container.removeClass('perspective-editing-transition');\r\n      }, this);\r\n    },\r\n\r\n    onRender: function () {\r\n      var self = this;\r\n      this._beforeTransition();\r\n      this.options.container.addClass('perspective-editing');\r\n      this.options.applyMasking();\r\n      this._initializeWidgets();\r\n      this._triggerEditMode();\r\n      $(document).on('click.' + this.cid, {view: this}, this._documentClick);\r\n    },\r\n\r\n    _documentClick: function (event) {\r\n      var self = event.data.view;\r\n      if (self.ui.addIcon.is(event.target) || !!self.ui.addIcon.has(event.target).length) {\r\n        // Add Icon\r\n        return;\r\n      }\r\n      if (self.ui.pmanPanel.is(event.target) || !!self.ui.pmanPanel.has(event.target).length) {\r\n        // Pman panel\r\n        return;\r\n      }\r\n      self._closeToolsPanel();\r\n    },\r\n\r\n    _onChangePerspective: function () {\r\n      this._doCleanup();\r\n    },\r\n\r\n    _doCleanup: function () {\r\n      var popoverTarget = this.options.container.find(\".binf-popover\");\r\n      this._beforeTransition();\r\n      if (popoverTarget.length) {\r\n        popoverTarget.binf_popover('destroy');\r\n      }\r\n      this.options.container.removeClass('perspective-editing');\r\n      $(document).off('click.' + this.cid, this._documentClick);\r\n      this.trigger('destroy');\r\n    },\r\n\r\n    /**\r\n     * Edit from perspective inline editing mode.\r\n     */\r\n    _doExitPerspective: function () {\r\n      this.context.triggerMethod('exit:edit:perspective', this.perspective);\r\n    },\r\n\r\n  });\r\n\r\n  return PManView;\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n  \n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/root/lang',{\r\n  dndWidgetsHere: 'Drag and Drop widgets here'\r\n});\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-placeholder-title\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.dndWidgetsHere || (depth0 != null ? depth0.dndWidgetsHere : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"dndWidgetsHere\",\"hash\":{}}) : helper)))\n    + \"\\\">\\r\\n  <div class=\\\"csui-placeholder-icon\\\"></div>\\r\\n  <div>\"\n    + this.escapeExpression(((helper = (helper = helpers.dndWidgetsHere || (depth0 != null ? depth0.dndWidgetsHere : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"dndWidgetsHere\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_widgets_perspective.placeholder_impl_perspective.placeholder', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',[],function(){});\n","/**\r\n * Placeholder view to represent an empty widget in perpsective.\r\n * This will be replaces by perspective.widget (preview) on dropping of widgets on this\r\n */\r\ncsui.define('csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view',['csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'i18n!csui/perspective.manage/widgets/perspective.placeholder/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',\r\n  'css!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder'\r\n], function (_, Backbone, Marionette, lang, template) {\r\n  var PerspectivePlaceholderView = Marionette.ItemView.extend({\r\n    className: 'csui-perspective-placeholder',\r\n    template: template,\r\n    templateHelpers: function () {\r\n      return {\r\n        dndWidgetsHere: lang.dndWidgetsHere\r\n      }\r\n    },\r\n\r\n    constructor: function (options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n    },\r\n\r\n    onShow: function() {\r\n      this.$el.parent().addClass('csui-pman-placeholder-container');\r\n    },\r\n\r\n    onDestroy: function() {\r\n      this.$el.parent().removeClass('csui-pman-placeholder-container');\r\n    }\r\n\r\n  });\r\n  return PerspectivePlaceholderView;\r\n});\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n  \n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/root/lang',{\r\n  noConfig: 'No configuration needed',\r\n  clickToConfig: 'Configuration needed'\r\n});\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"tile-header\\\">\\r\\n  <div class=\\\"tile-title\\\">\\r\\n    <h2 class=\\\"csui-heading\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<div>\\r\\n  <div title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetMessage || (depth0 != null ? depth0.widgetMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetMessage\",\"hash\":{}}) : helper)))\n    + \"\\\" class=\\\"csui-pman-widget-msg\\\">\\r\\n    <div class=\\\"csui-pman-widget-icon\\\"></div>\\r\\n    <div>\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetMessage || (depth0 != null ? depth0.widgetMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetMessage\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_widgets_perspective.widget_impl_perspective.widget', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',[],function(){});\n","/**\r\n * Preview view of any widget\r\n */\r\ncsui.define('csui/perspective.manage/widgets/perspective.widget/perspective.widget.view',['csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'i18n!csui/perspective.manage/widgets/perspective.widget/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',\r\n  'css!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget'\r\n], function (_, Backbone, Marionette, lang, template) {\r\n  var PerspectiveWidgetView = Marionette.ItemView.extend({\r\n    className: 'csui-pman-widget',\r\n    template: template,\r\n    templateHelpers: function () {\r\n      var wConfig  = this.widget && this.widget.get(\"manifest\"),\r\n          wTitle   = this.widget && this.widget.get('title'),\r\n          noConfig = !wConfig || !wConfig.schema || !wConfig.schema.properties ||\r\n                     _.isEmpty(wConfig.schema.properties);\r\n      return {\r\n        widgetTitle: wTitle || lang.noTitle,\r\n        widgetMessage: noConfig ? lang.noConfig : lang.clickToConfig\r\n      }\r\n    },\r\n\r\n    constructor: function (options) {\r\n      options || (options = {});\r\n      options = _.defaults(options, {\r\n        data: {},\r\n      });\r\n      Marionette.ItemView.apply(this, arguments);\r\n      this.widget = options.data.widget;\r\n    }\r\n  });\r\n  return PerspectiveWidgetView;\r\n});\n","\ncsui.define('json!csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{title}}\",\r\n  \"description\": \"{{description}}\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n  \r\n);\n\n","\ncsui.define('json!csui/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{title}}\",\r\n  \"description\": \"{{description}}\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/root/perspective.placeholder.manifest',{\r\n  dndWidgetsHere: 'Drag and Drop widgets here'\r\n});\r\n\n","\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/root/perspective.widget.manifest',{\r\n  noConfig: 'No configuration needed',\r\n  clickToConfig: 'Configuration needed'\r\n});\r\n\n","\n","csui.define('bundles/csui-perspective',[\r\n    'csui/perspective.manage/pman.view',\r\n    'csui/perspective.manage/behaviours/pman.widget.config.behaviour',\r\n    'csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view',\r\n    'csui/perspective.manage/widgets/perspective.widget/perspective.widget.view',\r\n    \r\n    // widgets manifests\r\n    'json!csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json',\r\n    'json!csui/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json',\r\n\r\n    'i18n!csui/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest',\r\n    'i18n!csui/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest',\r\n], {});\r\n  \r\ncsui.require(['require', 'css'], function (require, css) {\r\n    css.styleLoad(require, 'csui/bundles/csui-perspective', true);\r\n});\r\n  \n"]}