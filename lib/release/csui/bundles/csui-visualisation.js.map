{"version":3,"sources":["../../src/lib/d3.js","../../src/controls/charts/visual.count/impl/nls/lang.js","../../src/controls/charts/visual.count/impl/nls/root/lang.js","../../src/controls/charts/visual.count/impl/visual.count!css","../../src/controls/charts/visual.count/impl/visual.count.chart.view.js","../../src/controls/charts/visual.count/impl/chart.types/visual.count.bar.view.js","../../src/controls/charts/visual.count/impl/chart.types/bar/visual.count.verticalbar.view.js","../../src/controls/charts/visual.count/impl/chart.types/bar/visual.count.horizontalbar.view.js","../../src/controls/charts/visual.count/impl/chart.types/pie/visual.count.pie.view.js","../../src/controls/charts/visual.count/impl/chart.types/pie/visual.count.donut.view.js","../../src/controls/charts/visual.count/impl/visual.count.empty!hbs","../../src/controls/charts/visual.count/impl/visual.count.empty.view.js","../../src/controls/charts/visual.count/impl/visual.count!hbs","../../src/controls/charts/visual.count/visual.count.view.js","csui-visualisation.js"],"names":["csui","define","namespace","name","prefix","i","indexOf","slice","namespaces","hasOwnProperty","space","local","creatorInherit","document","this","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","creator","Local","_","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","call","event1","event0","exports","__data__","parseTypenames","typenames","trim","split","map","t","type","onRemove","typename","on","__on","o","j","m","length","removeEventListener","capture","onAdd","value","wrap","filterEvents","d","addEventListener","push","selection_on","n","arguments","each","node","customEvent","that","args","sourceEvent","apply","source","current","point","svg","ownerSVGElement","createSVGPoint","x","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop","mouse","changedTouches","none","selector","querySelector","selection_select","select","groups","_groups","subgroups","Array","subnode","subgroup","Selection","_parents","empty","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","match","matcher$1","sparse","update","selection_enter","_enter","EnterNode","parent","datum","_next","_parent","constant","bindIndex","enter","exit","data","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","keyPrefix","selection_data","size","bind","enterGroup","updateGroup","previous","next","i0","i1","_exit","selection_exit","selection_merge","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","merge","selection_order","nextSibling","parentNode","insertBefore","selection_sort","compare","compareNode","a","b","ascending","sortgroups","sortgroup","sort","order","NaN","selection_call","callback","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","selection_attr","getAttributeNS","getAttribute","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","selection_classed","contains","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","raise","appendChild","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","create","constantNull","selection_insert","before","removeChild","selection_remove","selection_datum","property","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","root","selectAll","touch","touches","identifier","points","ascending$1","bisector","ascendingComparator","lo","hi","mid","right","f","pairs","array","pair","p","cross","values0","values1","reduce","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","sqrt","extent","max","constant$1","identity","sequence","start","stop","step","ceil","range","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","sturges","LN2","histogram","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","bisectRight","thresholds","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","indexes","permutes","scan","xi","xj","shuffle","random","transpose","matrix","row","zip","Map","map$1","object","set","nest","depth","createResult","setResult","keys","sortValues","rollup","valuesByKey","result","get","entries","sortKey","sortKeys","k","createObject","setObject","createMap","setMap","Set","ordinal","scale","unknown","implicit","slice$1","has","copy","band","rescale","paddingInner","paddingOuter","round","align","bandwidth","ordinalRange","undefined","rangeRound","padding","pointish","point$1","csuiDefine","constructor","factory","prototype","extend","definition","Object","Color","color","format","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","colorRgb","h","s","l","Hsl","hslConvert","colorHsl","hsl2rgb","m2","labConvert","Lab","Hcl","deg2rad","cos","c","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","colorHcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","basis$1","basisClosed","constant$2","linear$1","exponential","hue","gamma","nogamma","rgbSpline","spline","colors","array$2","nb","na","interpolateValue","date","Date","setTime","interpolateNumber","zero","one","interpolateString","am","bm","bs","bi","reA","lastIndex","reB","q","join","interpolateRgb","valueOf","interpolateRound","decompose","e","scaleX","scaleY","skewX","translateX","translateY","rotate","degrees","atan","parseCss","identity$2","cssNode","cssRoot","cssView","transform","parseSvg","svgNode","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","cosh","exp","sinh","tanh","zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","epsilon2","rho","d1","b0","rho4","rho2","b1","r0","r1","coshr0","u","duration","hsl","end","lab$1","hcl","cubehelix$1","cubehelixGamma","cubehelix$$","quantize","interpolator","samples","constant$3","number$1","deinterpolate","deinterpolateClamp","reinterpolateClamp","reinterpolate","bimap","d0","polymap","target","interpolate","clamp","continuous","deinterpolate$$","piecewise","output","input","unit","invert","map$2","formatDecimal","toExponential","coefficient","exponent","formatGroup","grouping","thousands","width","substring","formatNumerals","numerals","replace","formatDefault","toPrecision","out","formatPrefixAuto","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","re","Error","fill","sign","symbol","comma","precision","formatTypes","identity$3","formatLocale","locale","newFormat","valuePrefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","charCodeAt","decimal","Infinity","currency","test","percent","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","tickFormat","linearish","nice","linear","identity$1","interval","deinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","logs","pows","z","raise$1","quantile","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","offset","filter","t0$1","t1$1","every","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","formats","pad","pads","charAt","newParse","newDate","week","day$$","parseSpecifier","Q","V","w","utcMonday","utcDay","getUTCFullYear","getUTCMonth","timeMonday","day","getFullYear","getMonth","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","time","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatMicroseconds","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","RegExp","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcWeek","utcThursday","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","timeFormat","utcTime","utcMonth","utcHour","utcMinute","csuiDefine$1","extend$1","Color$1","color$1","reHex3$1","Rgb$1","reHex6$1","rgbn$1","reRgbInteger$1","reRgbPercent$1","reRgbaInteger$1","rgba$1","reRgbaPercent$1","reHslPercent$1","hsla$1","reHslaPercent$1","named$1","rgbConvert$1","Hsl$1","hslConvert$1","hsl$2","hsl2rgb$1","labConvert$1","Lab$1","Hcl$1","deg2rad$1","rgb2xyz$1","xyz2lab$1","Xn$1","Yn$1","Zn$1","lab$2","t3$1","t2$1","t0$2","lab2xyz$1","t1$2","xyz2rgb$1","hclConvert$1","rad2deg$1","hcl$2","cubehelixConvert$1","Cubehelix$1","BC_DA$1","ED$1","EB$1","E$1","C$1","D$1","cubehelix$4","rainbow$1","ts","rainbow","ramp","sequential","Path","_x0","_y0","_x1","_y1","path","constant$4","acos","pi$1","asin","halfPi","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","y0","y1","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","sqrt$1","ox","oy","x11","y11","x00","y00","max$1","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","arc","buffer","a0","a1","da","context","epsilon$1","tau$1","moveTo","a01","a11","a00","a10","da0","da1","ap","rp","padRadius","min$1","cornerRadius","rc0","rc1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","Linear","_context","curveLinear","pointX","pointY","line","defined0","curve","defined","lineStart","lineEnd","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$4","pie","arcs","pa","Radial","_curve","curveRadial","radial","lineRadial","angle","radius","lineRadial$1","curveRadialLinear","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","PI","linkSource","linkTarget","link","argv","slice$2","curveHorizontal","bezierCurveTo","curveVertical","curveRadial$1","p2","p3","linkHorizontal","linkVertical","linkRadial","draw","circle","noop","point$2","Basis","basis$2","BasisClosed","basisClosed$1","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","slope3","h0","h1","s0","s1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","none$1","series","none$2","stackValue","stack","oz","kz","sz","sij","ki","si","expand","diverging","yp","yn","silhouette","wiggle","s2","sij0","sij1","s3","sk","ascending$2","sums","sum$1","descending$2","insideOut","bottom","tops","bottoms","concat","identity$5","number$3","center","entering","__axis","axis","orient","tickValues","tickArguments","spacing","tickSizeInner","tickPadding","range0","range1","position","tick","tickExit","tickEnter","append","attr","text","insert","transition","epsilon$2","tickSizeOuter","slice$3","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","Dispatch","parseTypenames$1","types","get$1","set$2","noop$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","clearInterval","setInterval","timeout$1","elapsed","schedule","id","timing","schedules","__transition","emptyOn","tween","emptyTween","ease","state","CREATED","init","set$1","STARTING","self","SCHEDULED","STARTED","RUNNING","ENDED","ENDING","interrupt","active","selection_interrupt","tweenRemove","tween0","tween1","splice","tweenFunction","transition_tween","_id","tweenValue","csuiDefine$2","extend$2","Color$2","color$2","reHex3$2","Rgb$2","reHex6$2","rgbn$2","reRgbInteger$2","reRgbPercent$2","reRgbaInteger$2","rgba$2","reRgbaPercent$2","reHslPercent$2","hsla$2","reHslaPercent$2","named$2","rgbConvert$2","rgb$1","Hsl$2","hslConvert$2","hsl$3","hsl2rgb$2","labConvert$2","Lab$2","Hcl$2","deg2rad$2","rgb2xyz$2","xyz2lab$2","Xn$2","Yn$2","Zn$2","lab$3","t3$2","t2$2","t0$3","lab2xyz$2","t1$3","xyz2rgb$2","hclConvert$2","rad2deg$2","hcl$3","cubehelixConvert$2","Cubehelix$2","BC_DA$2","ED$2","EB$2","E$2","C$2","D$2","cubehelix$5","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","attrConstantNS$1","attrFunction$1","value10","attrFunctionNS$1","transition_attr","interpolateTransform$2","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","child","children","inherit","transition_selection","Selection$1","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","transition_style","interpolateTransform$1","styleTween","transition_styleTween","textConstant$1","textFunction$1","transition_text","transition_transition","id0","id1","newId","cubicInOut","defaultTiming","selection_transition","root$1","xlink","xml","xmlns","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","mouseenter","mouseleave","classed","html","ascendingBisect","bisectLeft","clear","proto","array$1","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","rgbGamma","rgbBasis","rgbBasisClosed","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelix$2","interpolateCubehelixLong","","toFixed","toUpperCase","setMonth","setUTCSeconds","setUTCMinutes","setUTCMonth","locale$1","timeParse","-","0","category10","category20b","category20c","category20","reI$1","reN$1","reP$1","cubehelix$3","warm","cool","viridis","magma","inferno","plasma","pi","tau","tauEpsilon","quadraticCurveTo","arcTo","x21","y21","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","_line","_point","cross$1","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","_x","_y","bundle","custom","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","_t0","px","py","T","performance","requestAnimationFrame","TypeError","reI$2","reN$2","reP$2","selection_prototype","tau$2","polyIn","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","elasticIn","amplitude","period","elasticOut","elasticInOut","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateObject","interpolateTransformCss","interpolateTransformSvg","interpolateZoom","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","formatDefaultLocale","defineProperty","en-us","en","TotalCount","Total","OTPrimary","OTSecondary","OTTertiary","DataClarity","NodataDefaultText","A11yTableCaption","Backbone","Marionette","$","d3","numeral","lang","View","defaults","marginTop","marginRight","marginBottom","marginLeft","xAxisLabelMargin","maxCategoryLabelLength","transitionDuration","chartOptions","showAsPercentage","animate","chartTitle","showAxisLabels","showValueLabels","showCountAxis","countAxisTicks","showLegend","themeName","showTotal","showGridLines","labelTypes","default","heightRatio","legend","legendTitle","total","title","themes","label","palette","className","template","options","optionsToApply","clone","toJSON","Model","columns","listenTo","collection","_updateChart","chartType","onDomRefresh","chartContext","getChartContext","d3Chart","appendChartTitle","containerWidth","getScaledFontSize","appendGroups","isEmpty","appendRootElement","chartData","getChartDataJSON","height","getChartHeight","getChartWidth","pieCenter","activeColumn","getActiveColumn","countColumn","getCountColumn","colorMap","pluck","getActiveColumnName","activeColumnChanged","hasChanged","checkSign","shortenText","maxLength","substr","formatCount","formattedValue","formatTemplate","formatSi","formatBusiness","formatNumber","displayNumber","Number","getChartData","findWhere","column","getTotalCount","memo","getCountValue","getTransitionDuration","skipAnimation","getMarginTop","getMarginBottom","getMarginLeft","getMarginRight","containerHeight","containerDimensions","getContainerDimensions","el","a11yTable","initA11yTable","updateRootElement","updateA11yTable","a11yTableRows","chartView","getDataValue","getDataLabel","uiValue","boundingRect","countColumnName","getCountColumnName","getCaseInsensitiveProperty","getCountLabel","activeColumnName","getActiveColumnLabel","getTheme","theme","isUndefined","getCategoryColor","uid","labelType","fontSize","minSize","maxSize","obj","find","updatedCollection","trigger","VisualCountChartView","marginLeftMax","categoryAxisLabelMargin","barValueLabelsOffset","isVerticalOrientation","countScale","getCountScale","countAxis","getCountAxis","categoryScale","getCategoryScale","categoryAxis","getCategoryAxis","XAxisGroup","appendXAxisGroup","YAxisGroup","appendYAxisGroup","gridlinesGroup","appendGridlinesGroup","zeroLine","appendZeroLine","barGroup","appendBarGroup","valueLabels","appendBarValueLabels","appendXAxisLabel","appendYAxisLabel","appendTotalCount","genericBarView","limits","updateAxes","updateBars","updateValueLabels","updateTotal","updateTickLabelOrientation","lineLength","ms","translation","xAxis","yAxis","isNull","colorOpacity","barMagnitudeProp","barThicknessProp","xProp","yProp","bars","countValue","yPos","barMagnitude","getDisplayValue","displayValue","isVertical","barThickness","getLabelPositionX","dataLabel","labelPosition","getLabelPositionY","labelOffset","getTextAnchorPosition","anchorPos","longestTickLabelWidth","tickLabels","item","tickLabelWidth","getComputedTextLength","totalCount","limit","axisGenerator","zeroLineLimit","zeroLinePos","zeroLineStart","zeroLineEnd","xAxisLabel","yAxisLabel","VisualCountBarView","innerRadiusNudge","innerLabelRadius","outerLabelRadius","pieChartView","getRadius","getInnerRadius","getOuterRadius","labelArc","getInnerLabelRadius","getOuterLabelRadius","innerLabelArc","getInnerRadiusNudge","legendHeightRatio","arcTween","newSlice","currentSlice","arcCentroid","appendTotal","updateSlices","updateLegend","updateSliceLabelLines","updateCategoryLabels","pieSlices","textAnchor","pieLabel","categoryLabels","innnerLabelArc","lineStartArc","lineEndArc","lineGenerator","pieSliceLabelLines","legendYPos","legendHeight","explode","pieLegendContainer","chartHeight","maxFontSize","minFontSize","legends","legendsExit","legendsEnter","isFunction","actual","percentage","arcSize","VisualCountPieView","donutWidth","fontSizeForTotal","innerDiscSize","stringLength","fontRatios","valueFontSize","donutTotal","module","hbs","Handlebars","compiler","main","depth0","helpers","partials","helper","escapeExpression","helperMissing","hash","registerPartial","templateContext","BlockingView","VerticalBarChartView","HorizontalBarChartView","DonutChartView","PieChartView","EmptyView","regions","chart","replaceElement","imbue","_getChartView","onWinRefresh","debounce","render","blockActions","onCollectionSynced","childViewEvents","redraw:chart","ChartView","showChildView","unblockActions","$chart","$el","_renderEmptyView","onDestroy","off","require","css","styleLoad"],"mappings":"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","file":"csui-visualisation.js","sourcesContent":["// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\r\n\r\n// [OT] Modifications done:\r\n//\r\n// * Replaced UMD with csui AMD at the top and bottom of the file.\r\n// * Returns exports object which has all d3 functions. d3 is written to support es6 modules and is returned\r\n//   as an object with a series of properties, each represents an independent es6 module.\r\n\r\n// [OT] Declare a csui module\r\ncsui.define('csui/lib/d3',[],function(){\r\n\r\n    // [OT] Define exports variable\r\n    var exports = {};\r\n\r\n    var xhtml = \"http://www.w3.org/1999/xhtml\";\r\n\r\n    var namespaces = {\r\n        svg: \"http://www.w3.org/2000/svg\",\r\n        xhtml: xhtml,\r\n        xlink: \"http://www.w3.org/1999/xlink\",\r\n        xml: \"http://www.w3.org/XML/1998/namespace\",\r\n        xmlns: \"http://www.w3.org/2000/xmlns/\"\r\n    };\r\n\r\n    function namespace(name) {\r\n        var prefix = name += \"\", i = prefix.indexOf(\":\");\r\n        if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\r\n        return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\r\n    }\r\n\r\n    function creatorInherit(name) {\r\n        return function() {\r\n            var document = this.ownerDocument,\r\n                uri = this.namespaceURI;\r\n            return uri === xhtml && document.documentElement.namespaceURI === xhtml\r\n                ? document.createElement(name)\r\n                : document.createElementNS(uri, name);\r\n        };\r\n    }\r\n\r\n    function creatorFixed(fullname) {\r\n        return function() {\r\n            return this.ownerDocument.createElementNS(fullname.space, fullname.local);\r\n        };\r\n    }\r\n\r\n    function creator(name) {\r\n        var fullname = namespace(name);\r\n        return (fullname.local\r\n            ? creatorFixed\r\n            : creatorInherit)(fullname);\r\n    }\r\n\r\n    var nextId = 0;\r\n\r\n    function local() {\r\n        return new Local;\r\n    }\r\n\r\n    function Local() {\r\n        this._ = \"@\" + (++nextId).toString(36);\r\n    }\r\n\r\n    Local.prototype = local.prototype = {\r\n        constructor: Local,\r\n        get: function(node) {\r\n            var id = this._;\r\n            while (!(id in node)) if (!(node = node.parentNode)) return;\r\n            return node[id];\r\n        },\r\n        set: function(node, value) {\r\n            return node[this._] = value;\r\n        },\r\n        remove: function(node) {\r\n            return this._ in node && delete node[this._];\r\n        },\r\n        toString: function() {\r\n            return this._;\r\n        }\r\n    };\r\n\r\n    var matcher = function(selector) {\r\n        return function() {\r\n            return this.matches(selector);\r\n        };\r\n    };\r\n\r\n    if (typeof document !== \"undefined\") {\r\n        var element = document.documentElement;\r\n        if (!element.matches) {\r\n            var vendorMatches = element.webkitMatchesSelector\r\n                || element.msMatchesSelector\r\n                || element.mozMatchesSelector\r\n                || element.oMatchesSelector;\r\n            matcher = function(selector) {\r\n                return function() {\r\n                    return vendorMatches.call(this, selector);\r\n                };\r\n            };\r\n        }\r\n    }\r\n\r\n    var matcher$1 = matcher;\r\n\r\n    var filterEvents = {};\r\n\r\n    exports.event = null;\r\n\r\n    if (typeof document !== \"undefined\") {\r\n        var element$1 = document.documentElement;\r\n        if (!(\"onmouseenter\" in element$1)) {\r\n            filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\r\n        }\r\n    }\r\n\r\n    function filterContextListener(listener, index, group) {\r\n        listener = contextListener(listener, index, group);\r\n        return function(event) {\r\n            var related = event.relatedTarget;\r\n            if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\r\n                listener.call(this, event);\r\n            }\r\n        };\r\n    }\r\n\r\n    function contextListener(listener, index, group) {\r\n        return function(event1) {\r\n            var event0 = exports.event; // Events can be reentrant (e.g., focus).\r\n            exports.event = event1;\r\n            try {\r\n                listener.call(this, this.__data__, index, group);\r\n            } finally {\r\n                exports.event = event0;\r\n            }\r\n        };\r\n    }\r\n\r\n    function parseTypenames(typenames) {\r\n        return typenames.trim().split(/^|\\s+/).map(function(t) {\r\n            var name = \"\", i = t.indexOf(\".\");\r\n            if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\r\n            return {type: t, name: name};\r\n        });\r\n    }\r\n\r\n    function onRemove(typename) {\r\n        return function() {\r\n            var on = this.__on;\r\n            if (!on) return;\r\n            for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\r\n                if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\r\n                    this.removeEventListener(o.type, o.listener, o.capture);\r\n                } else {\r\n                    on[++i] = o;\r\n                }\r\n            }\r\n            if (++i) on.length = i;\r\n            else delete this.__on;\r\n        };\r\n    }\r\n\r\n    function onAdd(typename, value, capture) {\r\n        var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\r\n        return function(d, i, group) {\r\n            var on = this.__on, o, listener = wrap(value, i, group);\r\n            if (on) for (var j = 0, m = on.length; j < m; ++j) {\r\n                if ((o = on[j]).type === typename.type && o.name === typename.name) {\r\n                    this.removeEventListener(o.type, o.listener, o.capture);\r\n                    this.addEventListener(o.type, o.listener = listener, o.capture = capture);\r\n                    o.value = value;\r\n                    return;\r\n                }\r\n            }\r\n            this.addEventListener(typename.type, listener, capture);\r\n            o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\r\n            if (!on) this.__on = [o];\r\n            else on.push(o);\r\n        };\r\n    }\r\n\r\n    function selection_on(typename, value, capture) {\r\n        var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\r\n\r\n        if (arguments.length < 2) {\r\n            var on = this.node().__on;\r\n            if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\r\n                for (i = 0, o = on[j]; i < n; ++i) {\r\n                    if ((t = typenames[i]).type === o.type && t.name === o.name) {\r\n                        return o.value;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        on = value ? onAdd : onRemove;\r\n        if (capture == null) capture = false;\r\n        for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\r\n        return this;\r\n    }\r\n\r\n    function customEvent(event1, listener, that, args) {\r\n        var event0 = exports.event;\r\n        event1.sourceEvent = exports.event;\r\n        exports.event = event1;\r\n        try {\r\n            return listener.apply(that, args);\r\n        } finally {\r\n            exports.event = event0;\r\n        }\r\n    }\r\n\r\n    function sourceEvent() {\r\n        var current = exports.event, source;\r\n        while (source = current.sourceEvent) current = source;\r\n        return current;\r\n    }\r\n\r\n    function point(node, event) {\r\n        var svg = node.ownerSVGElement || node;\r\n\r\n        if (svg.createSVGPoint) {\r\n            var point = svg.createSVGPoint();\r\n            point.x = event.clientX, point.y = event.clientY;\r\n            point = point.matrixTransform(node.getScreenCTM().inverse());\r\n            return [point.x, point.y];\r\n        }\r\n\r\n        var rect = node.getBoundingClientRect();\r\n        return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\r\n    }\r\n\r\n    function mouse(node) {\r\n        var event = sourceEvent();\r\n        if (event.changedTouches) event = event.changedTouches[0];\r\n        return point(node, event);\r\n    }\r\n\r\n    function none() {}\r\n\r\n    function selector(selector) {\r\n        return selector == null ? none : function() {\r\n            return this.querySelector(selector);\r\n        };\r\n    }\r\n\r\n    function selection_select(select) {\r\n        if (typeof select !== \"function\") select = selector(select);\r\n\r\n        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\r\n                if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\r\n                    if (\"__data__\" in node) subnode.__data__ = node.__data__;\r\n                    subgroup[i] = subnode;\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Selection(subgroups, this._parents);\r\n    }\r\n\r\n    function empty() {\r\n        return [];\r\n    }\r\n\r\n    function selectorAll(selector) {\r\n        return selector == null ? empty : function() {\r\n            return this.querySelectorAll(selector);\r\n        };\r\n    }\r\n\r\n    function selection_selectAll(select) {\r\n        if (typeof select !== \"function\") select = selectorAll(select);\r\n\r\n        for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n                if (node = group[i]) {\r\n                    subgroups.push(select.call(node, node.__data__, i, group));\r\n                    parents.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Selection(subgroups, parents);\r\n    }\r\n\r\n    function selection_filter(match) {\r\n        if (typeof match !== \"function\") match = matcher$1(match);\r\n\r\n        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\r\n                if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\r\n                    subgroup.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Selection(subgroups, this._parents);\r\n    }\r\n\r\n    function sparse(update) {\r\n        return new Array(update.length);\r\n    }\r\n\r\n    function selection_enter() {\r\n        return new Selection(this._enter || this._groups.map(sparse), this._parents);\r\n    }\r\n\r\n    function EnterNode(parent, datum) {\r\n        this.ownerDocument = parent.ownerDocument;\r\n        this.namespaceURI = parent.namespaceURI;\r\n        this._next = null;\r\n        this._parent = parent;\r\n        this.__data__ = datum;\r\n    }\r\n\r\n    EnterNode.prototype = {\r\n        constructor: EnterNode,\r\n        appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\r\n        insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\r\n        querySelector: function(selector) { return this._parent.querySelector(selector); },\r\n        querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\r\n    };\r\n\r\n    function constant(x) {\r\n        return function() {\r\n            return x;\r\n        };\r\n    }\r\n\r\n    var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\r\n\r\n    function bindIndex(parent, group, enter, update, exit, data) {\r\n        var i = 0,\r\n            node,\r\n            groupLength = group.length,\r\n            dataLength = data.length;\r\n\r\n        // Put any non-null nodes that fit into update.\r\n        // Put any null nodes into enter.\r\n        // Put any remaining data into enter.\r\n        for (; i < dataLength; ++i) {\r\n            if (node = group[i]) {\r\n                node.__data__ = data[i];\r\n                update[i] = node;\r\n            } else {\r\n                enter[i] = new EnterNode(parent, data[i]);\r\n            }\r\n        }\r\n\r\n        // Put any non-null nodes that don’t fit into exit.\r\n        for (; i < groupLength; ++i) {\r\n            if (node = group[i]) {\r\n                exit[i] = node;\r\n            }\r\n        }\r\n    }\r\n\r\n    function bindKey(parent, group, enter, update, exit, data, key) {\r\n        var i,\r\n            node,\r\n            nodeByKeyValue = {},\r\n            groupLength = group.length,\r\n            dataLength = data.length,\r\n            keyValues = new Array(groupLength),\r\n            keyValue;\r\n\r\n        // Compute the key for each node.\r\n        // If multiple nodes have the same key, the duplicates are added to exit.\r\n        for (i = 0; i < groupLength; ++i) {\r\n            if (node = group[i]) {\r\n                keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\r\n                if (keyValue in nodeByKeyValue) {\r\n                    exit[i] = node;\r\n                } else {\r\n                    nodeByKeyValue[keyValue] = node;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Compute the key for each datum.\r\n        // If there a node associated with this key, join and add it to update.\r\n        // If there is not (or the key is a duplicate), add it to enter.\r\n        for (i = 0; i < dataLength; ++i) {\r\n            keyValue = keyPrefix + key.call(parent, data[i], i, data);\r\n            if (node = nodeByKeyValue[keyValue]) {\r\n                update[i] = node;\r\n                node.__data__ = data[i];\r\n                nodeByKeyValue[keyValue] = null;\r\n            } else {\r\n                enter[i] = new EnterNode(parent, data[i]);\r\n            }\r\n        }\r\n\r\n        // Add any remaining nodes that were not bound to data to exit.\r\n        for (i = 0; i < groupLength; ++i) {\r\n            if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\r\n                exit[i] = node;\r\n            }\r\n        }\r\n    }\r\n\r\n    function selection_data(value, key) {\r\n        if (!value) {\r\n            data = new Array(this.size()), j = -1;\r\n            this.each(function(d) { data[++j] = d; });\r\n            return data;\r\n        }\r\n\r\n        var bind = key ? bindKey : bindIndex,\r\n            parents = this._parents,\r\n            groups = this._groups;\r\n\r\n        if (typeof value !== \"function\") value = constant(value);\r\n\r\n        for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\r\n            var parent = parents[j],\r\n                group = groups[j],\r\n                groupLength = group.length,\r\n                data = value.call(parent, parent && parent.__data__, j, parents),\r\n                dataLength = data.length,\r\n                enterGroup = enter[j] = new Array(dataLength),\r\n                updateGroup = update[j] = new Array(dataLength),\r\n                exitGroup = exit[j] = new Array(groupLength);\r\n\r\n            bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\r\n\r\n            // Now connect the enter nodes to their following update node, such that\r\n            // appendChild can insert the materialized enter node before this node,\r\n            // rather than at the end of the parent node.\r\n            for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\r\n                if (previous = enterGroup[i0]) {\r\n                    if (i0 >= i1) i1 = i0 + 1;\r\n                    while (!(next = updateGroup[i1]) && ++i1 < dataLength);\r\n                    previous._next = next || null;\r\n                }\r\n            }\r\n        }\r\n\r\n        update = new Selection(update, parents);\r\n        update._enter = enter;\r\n        update._exit = exit;\r\n        return update;\r\n    }\r\n\r\n    function selection_exit() {\r\n        return new Selection(this._exit || this._groups.map(sparse), this._parents);\r\n    }\r\n\r\n    function selection_merge(selection) {\r\n\r\n        for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\r\n            for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\r\n                if (node = group0[i] || group1[i]) {\r\n                    merge[i] = node;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (; j < m0; ++j) {\r\n            merges[j] = groups0[j];\r\n        }\r\n\r\n        return new Selection(merges, this._parents);\r\n    }\r\n\r\n    function selection_order() {\r\n\r\n        for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\r\n            for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\r\n                if (node = group[i]) {\r\n                    if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\r\n                    next = node;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function selection_sort(compare) {\r\n        if (!compare) compare = ascending;\r\n\r\n        function compareNode(a, b) {\r\n            return a && b ? compare(a.__data__, b.__data__) : !a - !b;\r\n        }\r\n\r\n        for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\r\n                if (node = group[i]) {\r\n                    sortgroup[i] = node;\r\n                }\r\n            }\r\n            sortgroup.sort(compareNode);\r\n        }\r\n\r\n        return new Selection(sortgroups, this._parents).order();\r\n    }\r\n\r\n    function ascending(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function selection_call() {\r\n        var callback = arguments[0];\r\n        arguments[0] = this;\r\n        callback.apply(null, arguments);\r\n        return this;\r\n    }\r\n\r\n    function selection_nodes() {\r\n        var nodes = new Array(this.size()), i = -1;\r\n        this.each(function() { nodes[++i] = this; });\r\n        return nodes;\r\n    }\r\n\r\n    function selection_node() {\r\n\r\n        for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\r\n            for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\r\n                var node = group[i];\r\n                if (node) return node;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function selection_size() {\r\n        var size = 0;\r\n        this.each(function() { ++size; });\r\n        return size;\r\n    }\r\n\r\n    function selection_empty() {\r\n        return !this.node();\r\n    }\r\n\r\n    function selection_each(callback) {\r\n\r\n        for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\r\n            for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\r\n                if (node = group[i]) callback.call(node, node.__data__, i, group);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function attrRemove(name) {\r\n        return function() {\r\n            this.removeAttribute(name);\r\n        };\r\n    }\r\n\r\n    function attrRemoveNS(fullname) {\r\n        return function() {\r\n            this.removeAttributeNS(fullname.space, fullname.local);\r\n        };\r\n    }\r\n\r\n    function attrConstant(name, value) {\r\n        return function() {\r\n            this.setAttribute(name, value);\r\n        };\r\n    }\r\n\r\n    function attrConstantNS(fullname, value) {\r\n        return function() {\r\n            this.setAttributeNS(fullname.space, fullname.local, value);\r\n        };\r\n    }\r\n\r\n    function attrFunction(name, value) {\r\n        return function() {\r\n            var v = value.apply(this, arguments);\r\n            if (v == null) this.removeAttribute(name);\r\n            else this.setAttribute(name, v);\r\n        };\r\n    }\r\n\r\n    function attrFunctionNS(fullname, value) {\r\n        return function() {\r\n            var v = value.apply(this, arguments);\r\n            if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\r\n            else this.setAttributeNS(fullname.space, fullname.local, v);\r\n        };\r\n    }\r\n\r\n    function selection_attr(name, value) {\r\n        var fullname = namespace(name);\r\n\r\n        if (arguments.length < 2) {\r\n            var node = this.node();\r\n            return fullname.local\r\n                ? node.getAttributeNS(fullname.space, fullname.local)\r\n                : node.getAttribute(fullname);\r\n        }\r\n\r\n        return this.each((value == null\r\n            ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\r\n                ? (fullname.local ? attrFunctionNS : attrFunction)\r\n                : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\r\n    }\r\n\r\n    function defaultView(node) {\r\n        return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\r\n            || (node.document && node) // node is a Window\r\n            || node.defaultView; // node is a Document\r\n    }\r\n\r\n    function styleRemove(name) {\r\n        return function() {\r\n            this.style.removeProperty(name);\r\n        };\r\n    }\r\n\r\n    function styleConstant(name, value, priority) {\r\n        return function() {\r\n            this.style.setProperty(name, value, priority);\r\n        };\r\n    }\r\n\r\n    function styleFunction(name, value, priority) {\r\n        return function() {\r\n            var v = value.apply(this, arguments);\r\n            if (v == null) this.style.removeProperty(name);\r\n            else this.style.setProperty(name, v, priority);\r\n        };\r\n    }\r\n\r\n    function selection_style(name, value, priority) {\r\n        return arguments.length > 1\r\n            ? this.each((value == null\r\n                ? styleRemove : typeof value === \"function\"\r\n                    ? styleFunction\r\n                    : styleConstant)(name, value, priority == null ? \"\" : priority))\r\n            : style(this.node(), name);\r\n    }\r\n\r\n    function style(node, name) {\r\n        return node.style.getPropertyValue(name)\r\n            || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\r\n    }\r\n\r\n    function propertyRemove(name) {\r\n        return function() {\r\n            delete this[name];\r\n        };\r\n    }\r\n\r\n    function propertyConstant(name, value) {\r\n        return function() {\r\n            this[name] = value;\r\n        };\r\n    }\r\n\r\n    function propertyFunction(name, value) {\r\n        return function() {\r\n            var v = value.apply(this, arguments);\r\n            if (v == null) delete this[name];\r\n            else this[name] = v;\r\n        };\r\n    }\r\n\r\n    function selection_property(name, value) {\r\n        return arguments.length > 1\r\n            ? this.each((value == null\r\n                ? propertyRemove : typeof value === \"function\"\r\n                    ? propertyFunction\r\n                    : propertyConstant)(name, value))\r\n            : this.node()[name];\r\n    }\r\n\r\n    function classArray(string) {\r\n        return string.trim().split(/^|\\s+/);\r\n    }\r\n\r\n    function classList(node) {\r\n        return node.classList || new ClassList(node);\r\n    }\r\n\r\n    function ClassList(node) {\r\n        this._node = node;\r\n        this._names = classArray(node.getAttribute(\"class\") || \"\");\r\n    }\r\n\r\n    ClassList.prototype = {\r\n        add: function(name) {\r\n            var i = this._names.indexOf(name);\r\n            if (i < 0) {\r\n                this._names.push(name);\r\n                this._node.setAttribute(\"class\", this._names.join(\" \"));\r\n            }\r\n        },\r\n        remove: function(name) {\r\n            var i = this._names.indexOf(name);\r\n            if (i >= 0) {\r\n                this._names.splice(i, 1);\r\n                this._node.setAttribute(\"class\", this._names.join(\" \"));\r\n            }\r\n        },\r\n        contains: function(name) {\r\n            return this._names.indexOf(name) >= 0;\r\n        }\r\n    };\r\n\r\n    function classedAdd(node, names) {\r\n        var list = classList(node), i = -1, n = names.length;\r\n        while (++i < n) list.add(names[i]);\r\n    }\r\n\r\n    function classedRemove(node, names) {\r\n        var list = classList(node), i = -1, n = names.length;\r\n        while (++i < n) list.remove(names[i]);\r\n    }\r\n\r\n    function classedTrue(names) {\r\n        return function() {\r\n            classedAdd(this, names);\r\n        };\r\n    }\r\n\r\n    function classedFalse(names) {\r\n        return function() {\r\n            classedRemove(this, names);\r\n        };\r\n    }\r\n\r\n    function classedFunction(names, value) {\r\n        return function() {\r\n            (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\r\n        };\r\n    }\r\n\r\n    function selection_classed(name, value) {\r\n        var names = classArray(name + \"\");\r\n\r\n        if (arguments.length < 2) {\r\n            var list = classList(this.node()), i = -1, n = names.length;\r\n            while (++i < n) if (!list.contains(names[i])) return false;\r\n            return true;\r\n        }\r\n\r\n        return this.each((typeof value === \"function\"\r\n            ? classedFunction : value\r\n                ? classedTrue\r\n                : classedFalse)(names, value));\r\n    }\r\n\r\n    function textRemove() {\r\n        this.textContent = \"\";\r\n    }\r\n\r\n    function textConstant(value) {\r\n        return function() {\r\n            this.textContent = value;\r\n        };\r\n    }\r\n\r\n    function textFunction(value) {\r\n        return function() {\r\n            var v = value.apply(this, arguments);\r\n            this.textContent = v == null ? \"\" : v;\r\n        };\r\n    }\r\n\r\n    function selection_text(value) {\r\n        return arguments.length\r\n            ? this.each(value == null\r\n                ? textRemove : (typeof value === \"function\"\r\n                    ? textFunction\r\n                    : textConstant)(value))\r\n            : this.node().textContent;\r\n    }\r\n\r\n    function htmlRemove() {\r\n        this.innerHTML = \"\";\r\n    }\r\n\r\n    function htmlConstant(value) {\r\n        return function() {\r\n            this.innerHTML = value;\r\n        };\r\n    }\r\n\r\n    function htmlFunction(value) {\r\n        return function() {\r\n            var v = value.apply(this, arguments);\r\n            this.innerHTML = v == null ? \"\" : v;\r\n        };\r\n    }\r\n\r\n    function selection_html(value) {\r\n        return arguments.length\r\n            ? this.each(value == null\r\n                ? htmlRemove : (typeof value === \"function\"\r\n                    ? htmlFunction\r\n                    : htmlConstant)(value))\r\n            : this.node().innerHTML;\r\n    }\r\n\r\n    function raise() {\r\n        if (this.nextSibling) this.parentNode.appendChild(this);\r\n    }\r\n\r\n    function selection_raise() {\r\n        return this.each(raise);\r\n    }\r\n\r\n    function lower() {\r\n        if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\r\n    }\r\n\r\n    function selection_lower() {\r\n        return this.each(lower);\r\n    }\r\n\r\n    function selection_append(name) {\r\n        var create = typeof name === \"function\" ? name : creator(name);\r\n        return this.select(function() {\r\n            return this.appendChild(create.apply(this, arguments));\r\n        });\r\n    }\r\n\r\n    function constantNull() {\r\n        return null;\r\n    }\r\n\r\n    function selection_insert(name, before) {\r\n        var create = typeof name === \"function\" ? name : creator(name),\r\n            select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\r\n        return this.select(function() {\r\n            return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\r\n        });\r\n    }\r\n\r\n    function remove() {\r\n        var parent = this.parentNode;\r\n        if (parent) parent.removeChild(this);\r\n    }\r\n\r\n    function selection_remove() {\r\n        return this.each(remove);\r\n    }\r\n\r\n    function selection_datum(value) {\r\n        return arguments.length\r\n            ? this.property(\"__data__\", value)\r\n            : this.node().__data__;\r\n    }\r\n\r\n    function dispatchEvent(node, type, params) {\r\n        var window = defaultView(node),\r\n            event = window.CustomEvent;\r\n\r\n        if (typeof event === \"function\") {\r\n            event = new event(type, params);\r\n        } else {\r\n            event = window.document.createEvent(\"Event\");\r\n            if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\r\n            else event.initEvent(type, false, false);\r\n        }\r\n\r\n        node.dispatchEvent(event);\r\n    }\r\n\r\n    function dispatchConstant(type, params) {\r\n        return function() {\r\n            return dispatchEvent(this, type, params);\r\n        };\r\n    }\r\n\r\n    function dispatchFunction(type, params) {\r\n        return function() {\r\n            return dispatchEvent(this, type, params.apply(this, arguments));\r\n        };\r\n    }\r\n\r\n    function selection_dispatch(type, params) {\r\n        return this.each((typeof params === \"function\"\r\n            ? dispatchFunction\r\n            : dispatchConstant)(type, params));\r\n    }\r\n\r\n    var root = [null];\r\n\r\n    function Selection(groups, parents) {\r\n        this._groups = groups;\r\n        this._parents = parents;\r\n    }\r\n\r\n    function selection() {\r\n        return new Selection([[document.documentElement]], root);\r\n    }\r\n\r\n    Selection.prototype = selection.prototype = {\r\n        constructor: Selection,\r\n        select: selection_select,\r\n        selectAll: selection_selectAll,\r\n        filter: selection_filter,\r\n        data: selection_data,\r\n        enter: selection_enter,\r\n        exit: selection_exit,\r\n        merge: selection_merge,\r\n        order: selection_order,\r\n        sort: selection_sort,\r\n        call: selection_call,\r\n        nodes: selection_nodes,\r\n        node: selection_node,\r\n        size: selection_size,\r\n        empty: selection_empty,\r\n        each: selection_each,\r\n        attr: selection_attr,\r\n        style: selection_style,\r\n        property: selection_property,\r\n        classed: selection_classed,\r\n        text: selection_text,\r\n        html: selection_html,\r\n        raise: selection_raise,\r\n        lower: selection_lower,\r\n        append: selection_append,\r\n        insert: selection_insert,\r\n        remove: selection_remove,\r\n        datum: selection_datum,\r\n        on: selection_on,\r\n        dispatch: selection_dispatch\r\n    };\r\n\r\n    function select(selector) {\r\n        return typeof selector === \"string\"\r\n            ? new Selection([[document.querySelector(selector)]], [document.documentElement])\r\n            : new Selection([[selector]], root);\r\n    }\r\n\r\n    function selectAll(selector) {\r\n        return typeof selector === \"string\"\r\n            ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\r\n            : new Selection([selector == null ? [] : selector], root);\r\n    }\r\n\r\n    function touch(node, touches, identifier) {\r\n        if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\r\n\r\n        for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\r\n            if ((touch = touches[i]).identifier === identifier) {\r\n                return point(node, touch);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function touches(node, touches) {\r\n        if (touches == null) touches = sourceEvent().touches;\r\n\r\n        for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\r\n            points[i] = point(node, touches[i]);\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n    function ascending$1(a, b) {\r\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n    }\r\n\r\n    function bisector(compare) {\r\n        if (compare.length === 1) compare = ascendingComparator(compare);\r\n        return {\r\n            left: function(a, x, lo, hi) {\r\n                if (lo == null) lo = 0;\r\n                if (hi == null) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) < 0) lo = mid + 1;\r\n                    else hi = mid;\r\n                }\r\n                return lo;\r\n            },\r\n            right: function(a, x, lo, hi) {\r\n                if (lo == null) lo = 0;\r\n                if (hi == null) hi = a.length;\r\n                while (lo < hi) {\r\n                    var mid = lo + hi >>> 1;\r\n                    if (compare(a[mid], x) > 0) hi = mid;\r\n                    else lo = mid + 1;\r\n                }\r\n                return lo;\r\n            }\r\n        };\r\n    }\r\n\r\n    function ascendingComparator(f) {\r\n        return function(d, x) {\r\n            return ascending$1(f(d), x);\r\n        };\r\n    }\r\n\r\n    var ascendingBisect = bisector(ascending$1);\r\n    var bisectRight = ascendingBisect.right;\r\n    var bisectLeft = ascendingBisect.left;\r\n\r\n    function pairs(array, f) {\r\n        if (f == null) f = pair;\r\n        var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\r\n        while (i < n) pairs[i] = f(p, p = array[++i]);\r\n        return pairs;\r\n    }\r\n\r\n    function pair(a, b) {\r\n        return [a, b];\r\n    }\r\n\r\n    function cross(values0, values1, reduce) {\r\n        var n0 = values0.length,\r\n            n1 = values1.length,\r\n            values = new Array(n0 * n1),\r\n            i0,\r\n            i1,\r\n            i,\r\n            value0;\r\n\r\n        if (reduce == null) reduce = pair;\r\n\r\n        for (i0 = i = 0; i0 < n0; ++i0) {\r\n            for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\r\n                values[i] = reduce(value0, values1[i1]);\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    function descending(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function number(x) {\r\n        return x === null ? NaN : +x;\r\n    }\r\n\r\n    function variance(values, valueof) {\r\n        var n = values.length,\r\n            m = 0,\r\n            i = -1,\r\n            mean = 0,\r\n            value,\r\n            delta,\r\n            sum = 0;\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) {\r\n                if (!isNaN(value = number(values[i]))) {\r\n                    delta = value - mean;\r\n                    mean += delta / ++m;\r\n                    sum += delta * (value - mean);\r\n                }\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) {\r\n                if (!isNaN(value = number(valueof(values[i], i, values)))) {\r\n                    delta = value - mean;\r\n                    mean += delta / ++m;\r\n                    sum += delta * (value - mean);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (m > 1) return sum / (m - 1);\r\n    }\r\n\r\n    function deviation(array, f) {\r\n        var v = variance(array, f);\r\n        return v ? Math.sqrt(v) : v;\r\n    }\r\n\r\n    function extent(values, valueof) {\r\n        var n = values.length,\r\n            i = -1,\r\n            value,\r\n            min,\r\n            max;\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) { // Find the first comparable value.\r\n                if ((value = values[i]) != null && value >= value) {\r\n                    min = max = value;\r\n                    while (++i < n) { // Compare the remaining values.\r\n                        if ((value = values[i]) != null) {\r\n                            if (min > value) min = value;\r\n                            if (max < value) max = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) { // Find the first comparable value.\r\n                if ((value = valueof(values[i], i, values)) != null && value >= value) {\r\n                    min = max = value;\r\n                    while (++i < n) { // Compare the remaining values.\r\n                        if ((value = valueof(values[i], i, values)) != null) {\r\n                            if (min > value) min = value;\r\n                            if (max < value) max = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return [min, max];\r\n    }\r\n\r\n    var array = Array.prototype;\r\n\r\n    var slice = array.slice;\r\n    var map = array.map;\r\n\r\n    function constant$1(x) {\r\n        return function() {\r\n            return x;\r\n        };\r\n    }\r\n\r\n    function identity(x) {\r\n        return x;\r\n    }\r\n\r\n    function sequence(start, stop, step) {\r\n        start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\r\n\r\n        var i = -1,\r\n            n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\r\n            range = new Array(n);\r\n\r\n        while (++i < n) {\r\n            range[i] = start + i * step;\r\n        }\r\n\r\n        return range;\r\n    }\r\n\r\n    var e10 = Math.sqrt(50);\r\n    var e5 = Math.sqrt(10);\r\n    var e2 = Math.sqrt(2);\r\n    function ticks(start, stop, count) {\r\n        var reverse,\r\n            i = -1,\r\n            n,\r\n            ticks,\r\n            step;\r\n\r\n        stop = +stop, start = +start, count = +count;\r\n        if (start === stop && count > 0) return [start];\r\n        if (reverse = stop < start) n = start, start = stop, stop = n;\r\n        if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\r\n\r\n        if (step > 0) {\r\n            start = Math.ceil(start / step);\r\n            stop = Math.floor(stop / step);\r\n            ticks = new Array(n = Math.ceil(stop - start + 1));\r\n            while (++i < n) ticks[i] = (start + i) * step;\r\n        } else {\r\n            start = Math.floor(start * step);\r\n            stop = Math.ceil(stop * step);\r\n            ticks = new Array(n = Math.ceil(start - stop + 1));\r\n            while (++i < n) ticks[i] = (start - i) / step;\r\n        }\r\n\r\n        if (reverse) ticks.reverse();\r\n\r\n        return ticks;\r\n    }\r\n\r\n    function tickIncrement(start, stop, count) {\r\n        var step = (stop - start) / Math.max(0, count),\r\n            power = Math.floor(Math.log(step) / Math.LN10),\r\n            error = step / Math.pow(10, power);\r\n        return power >= 0\r\n            ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\r\n            : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\r\n    }\r\n\r\n    function tickStep(start, stop, count) {\r\n        var step0 = Math.abs(stop - start) / Math.max(0, count),\r\n            step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\r\n            error = step0 / step1;\r\n        if (error >= e10) step1 *= 10;\r\n        else if (error >= e5) step1 *= 5;\r\n        else if (error >= e2) step1 *= 2;\r\n        return stop < start ? -step1 : step1;\r\n    }\r\n\r\n    function sturges(values) {\r\n        return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\r\n    }\r\n\r\n    function histogram() {\r\n        var value = identity,\r\n            domain = extent,\r\n            threshold = sturges;\r\n\r\n        function histogram(data) {\r\n            var i,\r\n                n = data.length,\r\n                x,\r\n                values = new Array(n);\r\n\r\n            for (i = 0; i < n; ++i) {\r\n                values[i] = value(data[i], i, data);\r\n            }\r\n\r\n            var xz = domain(values),\r\n                x0 = xz[0],\r\n                x1 = xz[1],\r\n                tz = threshold(values, x0, x1);\r\n\r\n            // Convert number of thresholds into uniform thresholds.\r\n            if (!Array.isArray(tz)) {\r\n                tz = tickStep(x0, x1, tz);\r\n                tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\r\n            }\r\n\r\n            // Remove any thresholds outside the domain.\r\n            var m = tz.length;\r\n            while (tz[0] <= x0) tz.shift(), --m;\r\n            while (tz[m - 1] > x1) tz.pop(), --m;\r\n\r\n            var bins = new Array(m + 1),\r\n                bin;\r\n\r\n            // Initialize bins.\r\n            for (i = 0; i <= m; ++i) {\r\n                bin = bins[i] = [];\r\n                bin.x0 = i > 0 ? tz[i - 1] : x0;\r\n                bin.x1 = i < m ? tz[i] : x1;\r\n            }\r\n\r\n            // Assign data to bins by value, ignoring any outside the domain.\r\n            for (i = 0; i < n; ++i) {\r\n                x = values[i];\r\n                if (x0 <= x && x <= x1) {\r\n                    bins[bisectRight(tz, x, 0, m)].push(data[i]);\r\n                }\r\n            }\r\n\r\n            return bins;\r\n        }\r\n\r\n        histogram.value = function(_) {\r\n            return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\r\n        };\r\n\r\n        histogram.domain = function(_) {\r\n            return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\r\n        };\r\n\r\n        histogram.thresholds = function(_) {\r\n            return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\r\n        };\r\n\r\n        return histogram;\r\n    }\r\n\r\n    function threshold(values, p, valueof) {\r\n        if (valueof == null) valueof = number;\r\n        if (!(n = values.length)) return;\r\n        if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\r\n        if (p >= 1) return +valueof(values[n - 1], n - 1, values);\r\n        var n,\r\n            i = (n - 1) * p,\r\n            i0 = Math.floor(i),\r\n            value0 = +valueof(values[i0], i0, values),\r\n            value1 = +valueof(values[i0 + 1], i0 + 1, values);\r\n        return value0 + (value1 - value0) * (i - i0);\r\n    }\r\n\r\n    function freedmanDiaconis(values, min, max) {\r\n        values = map.call(values, number).sort(ascending$1);\r\n        return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\r\n    }\r\n\r\n    function scott(values, min, max) {\r\n        return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\r\n    }\r\n\r\n    function max(values, valueof) {\r\n        var n = values.length,\r\n            i = -1,\r\n            value,\r\n            max;\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) { // Find the first comparable value.\r\n                if ((value = values[i]) != null && value >= value) {\r\n                    max = value;\r\n                    while (++i < n) { // Compare the remaining values.\r\n                        if ((value = values[i]) != null && value > max) {\r\n                            max = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) { // Find the first comparable value.\r\n                if ((value = valueof(values[i], i, values)) != null && value >= value) {\r\n                    max = value;\r\n                    while (++i < n) { // Compare the remaining values.\r\n                        if ((value = valueof(values[i], i, values)) != null && value > max) {\r\n                            max = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n\r\n    function mean(values, valueof) {\r\n        var n = values.length,\r\n            m = n,\r\n            i = -1,\r\n            value,\r\n            sum = 0;\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) {\r\n                if (!isNaN(value = number(values[i]))) sum += value;\r\n                else --m;\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) {\r\n                if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\r\n                else --m;\r\n            }\r\n        }\r\n\r\n        if (m) return sum / m;\r\n    }\r\n\r\n    function median(values, valueof) {\r\n        var n = values.length,\r\n            i = -1,\r\n            value,\r\n            numbers = [];\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) {\r\n                if (!isNaN(value = number(values[i]))) {\r\n                    numbers.push(value);\r\n                }\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) {\r\n                if (!isNaN(value = number(valueof(values[i], i, values)))) {\r\n                    numbers.push(value);\r\n                }\r\n            }\r\n        }\r\n\r\n        return threshold(numbers.sort(ascending$1), 0.5);\r\n    }\r\n\r\n    function merge(arrays) {\r\n        var n = arrays.length,\r\n            m,\r\n            i = -1,\r\n            j = 0,\r\n            merged,\r\n            array;\r\n\r\n        while (++i < n) j += arrays[i].length;\r\n        merged = new Array(j);\r\n\r\n        while (--n >= 0) {\r\n            array = arrays[n];\r\n            m = array.length;\r\n            while (--m >= 0) {\r\n                merged[--j] = array[m];\r\n            }\r\n        }\r\n\r\n        return merged;\r\n    }\r\n\r\n    function min(values, valueof) {\r\n        var n = values.length,\r\n            i = -1,\r\n            value,\r\n            min;\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) { // Find the first comparable value.\r\n                if ((value = values[i]) != null && value >= value) {\r\n                    min = value;\r\n                    while (++i < n) { // Compare the remaining values.\r\n                        if ((value = values[i]) != null && min > value) {\r\n                            min = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) { // Find the first comparable value.\r\n                if ((value = valueof(values[i], i, values)) != null && value >= value) {\r\n                    min = value;\r\n                    while (++i < n) { // Compare the remaining values.\r\n                        if ((value = valueof(values[i], i, values)) != null && min > value) {\r\n                            min = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return min;\r\n    }\r\n\r\n    function permute(array, indexes) {\r\n        var i = indexes.length, permutes = new Array(i);\r\n        while (i--) permutes[i] = array[indexes[i]];\r\n        return permutes;\r\n    }\r\n\r\n    function scan(values, compare) {\r\n        if (!(n = values.length)) return;\r\n        var n,\r\n            i = 0,\r\n            j = 0,\r\n            xi,\r\n            xj = values[j];\r\n\r\n        if (compare == null) compare = ascending$1;\r\n\r\n        while (++i < n) {\r\n            if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\r\n                xj = xi, j = i;\r\n            }\r\n        }\r\n\r\n        if (compare(xj, xj) === 0) return j;\r\n    }\r\n\r\n    function shuffle(array, i0, i1) {\r\n        var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\r\n            t,\r\n            i;\r\n\r\n        while (m) {\r\n            i = Math.random() * m-- | 0;\r\n            t = array[m + i0];\r\n            array[m + i0] = array[i + i0];\r\n            array[i + i0] = t;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    function sum(values, valueof) {\r\n        var n = values.length,\r\n            i = -1,\r\n            value,\r\n            sum = 0;\r\n\r\n        if (valueof == null) {\r\n            while (++i < n) {\r\n                if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\r\n            }\r\n        }\r\n\r\n        else {\r\n            while (++i < n) {\r\n                if (value = +valueof(values[i], i, values)) sum += value;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    function transpose(matrix) {\r\n        if (!(n = matrix.length)) return [];\r\n        for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\r\n            for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\r\n                row[j] = matrix[j][i];\r\n            }\r\n        }\r\n        return transpose;\r\n    }\r\n\r\n    function length(d) {\r\n        return d.length;\r\n    }\r\n\r\n    function zip() {\r\n        return transpose(arguments);\r\n    }\r\n\r\n    var prefix = \"$\";\r\n\r\n    function Map() {}\r\n\r\n    Map.prototype = map$1.prototype = {\r\n        constructor: Map,\r\n        has: function(key) {\r\n            return (prefix + key) in this;\r\n        },\r\n        get: function(key) {\r\n            return this[prefix + key];\r\n        },\r\n        set: function(key, value) {\r\n            this[prefix + key] = value;\r\n            return this;\r\n        },\r\n        remove: function(key) {\r\n            var property = prefix + key;\r\n            return property in this && delete this[property];\r\n        },\r\n        clear: function() {\r\n            for (var property in this) if (property[0] === prefix) delete this[property];\r\n        },\r\n        keys: function() {\r\n            var keys = [];\r\n            for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\r\n            return keys;\r\n        },\r\n        values: function() {\r\n            var values = [];\r\n            for (var property in this) if (property[0] === prefix) values.push(this[property]);\r\n            return values;\r\n        },\r\n        entries: function() {\r\n            var entries = [];\r\n            for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\r\n            return entries;\r\n        },\r\n        size: function() {\r\n            var size = 0;\r\n            for (var property in this) if (property[0] === prefix) ++size;\r\n            return size;\r\n        },\r\n        empty: function() {\r\n            for (var property in this) if (property[0] === prefix) return false;\r\n            return true;\r\n        },\r\n        each: function(f) {\r\n            for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\r\n        }\r\n    };\r\n\r\n    function map$1(object, f) {\r\n        var map = new Map;\r\n\r\n        // Copy constructor.\r\n        if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\r\n\r\n        // Index array by numeric index or specified key function.\r\n        else if (Array.isArray(object)) {\r\n            var i = -1,\r\n                n = object.length,\r\n                o;\r\n\r\n            if (f == null) while (++i < n) map.set(i, object[i]);\r\n            else while (++i < n) map.set(f(o = object[i], i, object), o);\r\n        }\r\n\r\n        // Convert object to map.\r\n        else if (object) for (var key in object) map.set(key, object[key]);\r\n\r\n        return map;\r\n    }\r\n\r\n    function nest() {\r\n        var keys = [],\r\n            sortKeys = [],\r\n            sortValues,\r\n            rollup,\r\n            nest;\r\n\r\n        function apply(array, depth, createResult, setResult) {\r\n            if (depth >= keys.length) {\r\n                if (sortValues != null) array.sort(sortValues);\r\n                return rollup != null ? rollup(array) : array;\r\n            }\r\n\r\n            var i = -1,\r\n                n = array.length,\r\n                key = keys[depth++],\r\n                keyValue,\r\n                value,\r\n                valuesByKey = map$1(),\r\n                values,\r\n                result = createResult();\r\n\r\n            while (++i < n) {\r\n                if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\r\n                    values.push(value);\r\n                } else {\r\n                    valuesByKey.set(keyValue, [value]);\r\n                }\r\n            }\r\n\r\n            valuesByKey.each(function(values, key) {\r\n                setResult(result, key, apply(values, depth, createResult, setResult));\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        function entries(map, depth) {\r\n            if (++depth > keys.length) return map;\r\n            var array, sortKey = sortKeys[depth - 1];\r\n            if (rollup != null && depth >= keys.length) array = map.entries();\r\n            else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\r\n            return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\r\n        }\r\n\r\n        return nest = {\r\n            object: function(array) { return apply(array, 0, createObject, setObject); },\r\n            map: function(array) { return apply(array, 0, createMap, setMap); },\r\n            entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\r\n            key: function(d) { keys.push(d); return nest; },\r\n            sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\r\n            sortValues: function(order) { sortValues = order; return nest; },\r\n            rollup: function(f) { rollup = f; return nest; }\r\n        };\r\n    }\r\n\r\n    function createObject() {\r\n        return {};\r\n    }\r\n\r\n    function setObject(object, key, value) {\r\n        object[key] = value;\r\n    }\r\n\r\n    function createMap() {\r\n        return map$1();\r\n    }\r\n\r\n    function setMap(map, key, value) {\r\n        map.set(key, value);\r\n    }\r\n\r\n    function Set() {}\r\n\r\n    var proto = map$1.prototype;\r\n\r\n    Set.prototype = set.prototype = {\r\n        constructor: Set,\r\n        has: proto.has,\r\n        add: function(value) {\r\n            value += \"\";\r\n            this[prefix + value] = value;\r\n            return this;\r\n        },\r\n        remove: proto.remove,\r\n        clear: proto.clear,\r\n        values: proto.keys,\r\n        size: proto.size,\r\n        empty: proto.empty,\r\n        each: proto.each\r\n    };\r\n\r\n    function set(object, f) {\r\n        var set = new Set;\r\n\r\n        // Copy constructor.\r\n        if (object instanceof Set) object.each(function(value) { set.add(value); });\r\n\r\n        // Otherwise, assume it’s an array.\r\n        else if (object) {\r\n            var i = -1, n = object.length;\r\n            if (f == null) while (++i < n) set.add(object[i]);\r\n            else while (++i < n) set.add(f(object[i], i, object));\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    function keys(map) {\r\n        var keys = [];\r\n        for (var key in map) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function values(map) {\r\n        var values = [];\r\n        for (var key in map) values.push(map[key]);\r\n        return values;\r\n    }\r\n\r\n    function entries(map) {\r\n        var entries = [];\r\n        for (var key in map) entries.push({key: key, value: map[key]});\r\n        return entries;\r\n    }\r\n\r\n    var array$1 = Array.prototype;\r\n\r\n    var map$2 = array$1.map;\r\n    var slice$1 = array$1.slice;\r\n\r\n    var implicit = {name: \"implicit\"};\r\n\r\n    function ordinal(range) {\r\n        var index = map$1(),\r\n            domain = [],\r\n            unknown = implicit;\r\n\r\n        range = range == null ? [] : slice$1.call(range);\r\n\r\n        function scale(d) {\r\n            var key = d + \"\", i = index.get(key);\r\n            if (!i) {\r\n                if (unknown !== implicit) return unknown;\r\n                index.set(key, i = domain.push(d));\r\n            }\r\n            return range[(i - 1) % range.length];\r\n        }\r\n\r\n        scale.domain = function(_) {\r\n            if (!arguments.length) return domain.slice();\r\n            domain = [], index = map$1();\r\n            var i = -1, n = _.length, d, key;\r\n            while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\r\n            return scale;\r\n        };\r\n\r\n        scale.range = function(_) {\r\n            return arguments.length ? (range = slice$1.call(_), scale) : range.slice();\r\n        };\r\n\r\n        scale.unknown = function(_) {\r\n            return arguments.length ? (unknown = _, scale) : unknown;\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return ordinal()\r\n                .domain(domain)\r\n                .range(range)\r\n                .unknown(unknown);\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    function band() {\r\n        var scale = ordinal().unknown(undefined),\r\n            domain = scale.domain,\r\n            ordinalRange = scale.range,\r\n            range = [0, 1],\r\n            step,\r\n            bandwidth,\r\n            round = false,\r\n            paddingInner = 0,\r\n            paddingOuter = 0,\r\n            align = 0.5;\r\n\r\n        delete scale.unknown;\r\n\r\n        function rescale() {\r\n            var n = domain().length,\r\n                reverse = range[1] < range[0],\r\n                start = range[reverse - 0],\r\n                stop = range[1 - reverse];\r\n            step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\r\n            if (round) step = Math.floor(step);\r\n            start += (stop - start - step * (n - paddingInner)) * align;\r\n            bandwidth = step * (1 - paddingInner);\r\n            if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\r\n            var values = sequence(n).map(function(i) { return start + step * i; });\r\n            return ordinalRange(reverse ? values.reverse() : values);\r\n        }\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? (domain(_), rescale()) : domain();\r\n        };\r\n\r\n        scale.range = function(_) {\r\n            return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\r\n        };\r\n\r\n        scale.rangeRound = function(_) {\r\n            return range = [+_[0], +_[1]], round = true, rescale();\r\n        };\r\n\r\n        scale.bandwidth = function() {\r\n            return bandwidth;\r\n        };\r\n\r\n        scale.step = function() {\r\n            return step;\r\n        };\r\n\r\n        scale.round = function(_) {\r\n            return arguments.length ? (round = !!_, rescale()) : round;\r\n        };\r\n\r\n        scale.padding = function(_) {\r\n            return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\r\n        };\r\n\r\n        scale.paddingInner = function(_) {\r\n            return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\r\n        };\r\n\r\n        scale.paddingOuter = function(_) {\r\n            return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\r\n        };\r\n\r\n        scale.align = function(_) {\r\n            return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return band()\r\n                .domain(domain())\r\n                .range(range)\r\n                .round(round)\r\n                .paddingInner(paddingInner)\r\n                .paddingOuter(paddingOuter)\r\n                .align(align);\r\n        };\r\n\r\n        return rescale();\r\n    }\r\n\r\n    function pointish(scale) {\r\n        var copy = scale.copy;\r\n\r\n        scale.padding = scale.paddingOuter;\r\n        delete scale.paddingInner;\r\n        delete scale.paddingOuter;\r\n\r\n        scale.copy = function() {\r\n            return pointish(copy());\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    function point$1() {\r\n        return pointish(band().paddingInner(1));\r\n    }\r\n\r\n    function csuiDefine(constructor, factory, prototype) {\r\n        constructor.prototype = factory.prototype = prototype;\r\n        prototype.constructor = constructor;\r\n    }\r\n\r\n    function extend(parent, definition) {\r\n        var prototype = Object.create(parent.prototype);\r\n        for (var key in definition) prototype[key] = definition[key];\r\n        return prototype;\r\n    }\r\n\r\n    function Color() {}\r\n\r\n    var darker = 0.7;\r\n    var brighter = 1 / darker;\r\n\r\n    var reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\r\n    var reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\r\n    var reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\r\n    var reHex3 = /^#([0-9a-f]{3})$/;\r\n    var reHex6 = /^#([0-9a-f]{6})$/;\r\n    var reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\r\n    var reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\r\n    var reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\r\n    var reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\r\n    var reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\r\n    var reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\r\n    var named = {\r\n        aliceblue: 0xf0f8ff,\r\n        antiquewhite: 0xfaebd7,\r\n        aqua: 0x00ffff,\r\n        aquamarine: 0x7fffd4,\r\n        azure: 0xf0ffff,\r\n        beige: 0xf5f5dc,\r\n        bisque: 0xffe4c4,\r\n        black: 0x000000,\r\n        blanchedalmond: 0xffebcd,\r\n        blue: 0x0000ff,\r\n        blueviolet: 0x8a2be2,\r\n        brown: 0xa52a2a,\r\n        burlywood: 0xdeb887,\r\n        cadetblue: 0x5f9ea0,\r\n        chartreuse: 0x7fff00,\r\n        chocolate: 0xd2691e,\r\n        coral: 0xff7f50,\r\n        cornflowerblue: 0x6495ed,\r\n        cornsilk: 0xfff8dc,\r\n        crimson: 0xdc143c,\r\n        cyan: 0x00ffff,\r\n        darkblue: 0x00008b,\r\n        darkcyan: 0x008b8b,\r\n        darkgoldenrod: 0xb8860b,\r\n        darkgray: 0xa9a9a9,\r\n        darkgreen: 0x006400,\r\n        darkgrey: 0xa9a9a9,\r\n        darkkhaki: 0xbdb76b,\r\n        darkmagenta: 0x8b008b,\r\n        darkolivegreen: 0x556b2f,\r\n        darkorange: 0xff8c00,\r\n        darkorchid: 0x9932cc,\r\n        darkred: 0x8b0000,\r\n        darksalmon: 0xe9967a,\r\n        darkseagreen: 0x8fbc8f,\r\n        darkslateblue: 0x483d8b,\r\n        darkslategray: 0x2f4f4f,\r\n        darkslategrey: 0x2f4f4f,\r\n        darkturquoise: 0x00ced1,\r\n        darkviolet: 0x9400d3,\r\n        deeppink: 0xff1493,\r\n        deepskyblue: 0x00bfff,\r\n        dimgray: 0x696969,\r\n        dimgrey: 0x696969,\r\n        dodgerblue: 0x1e90ff,\r\n        firebrick: 0xb22222,\r\n        floralwhite: 0xfffaf0,\r\n        forestgreen: 0x228b22,\r\n        fuchsia: 0xff00ff,\r\n        gainsboro: 0xdcdcdc,\r\n        ghostwhite: 0xf8f8ff,\r\n        gold: 0xffd700,\r\n        goldenrod: 0xdaa520,\r\n        gray: 0x808080,\r\n        green: 0x008000,\r\n        greenyellow: 0xadff2f,\r\n        grey: 0x808080,\r\n        honeydew: 0xf0fff0,\r\n        hotpink: 0xff69b4,\r\n        indianred: 0xcd5c5c,\r\n        indigo: 0x4b0082,\r\n        ivory: 0xfffff0,\r\n        khaki: 0xf0e68c,\r\n        lavender: 0xe6e6fa,\r\n        lavenderblush: 0xfff0f5,\r\n        lawngreen: 0x7cfc00,\r\n        lemonchiffon: 0xfffacd,\r\n        lightblue: 0xadd8e6,\r\n        lightcoral: 0xf08080,\r\n        lightcyan: 0xe0ffff,\r\n        lightgoldenrodyellow: 0xfafad2,\r\n        lightgray: 0xd3d3d3,\r\n        lightgreen: 0x90ee90,\r\n        lightgrey: 0xd3d3d3,\r\n        lightpink: 0xffb6c1,\r\n        lightsalmon: 0xffa07a,\r\n        lightseagreen: 0x20b2aa,\r\n        lightskyblue: 0x87cefa,\r\n        lightslategray: 0x778899,\r\n        lightslategrey: 0x778899,\r\n        lightsteelblue: 0xb0c4de,\r\n        lightyellow: 0xffffe0,\r\n        lime: 0x00ff00,\r\n        limegreen: 0x32cd32,\r\n        linen: 0xfaf0e6,\r\n        magenta: 0xff00ff,\r\n        maroon: 0x800000,\r\n        mediumaquamarine: 0x66cdaa,\r\n        mediumblue: 0x0000cd,\r\n        mediumorchid: 0xba55d3,\r\n        mediumpurple: 0x9370db,\r\n        mediumseagreen: 0x3cb371,\r\n        mediumslateblue: 0x7b68ee,\r\n        mediumspringgreen: 0x00fa9a,\r\n        mediumturquoise: 0x48d1cc,\r\n        mediumvioletred: 0xc71585,\r\n        midnightblue: 0x191970,\r\n        mintcream: 0xf5fffa,\r\n        mistyrose: 0xffe4e1,\r\n        moccasin: 0xffe4b5,\r\n        navajowhite: 0xffdead,\r\n        navy: 0x000080,\r\n        oldlace: 0xfdf5e6,\r\n        olive: 0x808000,\r\n        olivedrab: 0x6b8e23,\r\n        orange: 0xffa500,\r\n        orangered: 0xff4500,\r\n        orchid: 0xda70d6,\r\n        palegoldenrod: 0xeee8aa,\r\n        palegreen: 0x98fb98,\r\n        paleturquoise: 0xafeeee,\r\n        palevioletred: 0xdb7093,\r\n        papayawhip: 0xffefd5,\r\n        peachpuff: 0xffdab9,\r\n        peru: 0xcd853f,\r\n        pink: 0xffc0cb,\r\n        plum: 0xdda0dd,\r\n        powderblue: 0xb0e0e6,\r\n        purple: 0x800080,\r\n        rebeccapurple: 0x663399,\r\n        red: 0xff0000,\r\n        rosybrown: 0xbc8f8f,\r\n        royalblue: 0x4169e1,\r\n        saddlebrown: 0x8b4513,\r\n        salmon: 0xfa8072,\r\n        sandybrown: 0xf4a460,\r\n        seagreen: 0x2e8b57,\r\n        seashell: 0xfff5ee,\r\n        sienna: 0xa0522d,\r\n        silver: 0xc0c0c0,\r\n        skyblue: 0x87ceeb,\r\n        slateblue: 0x6a5acd,\r\n        slategray: 0x708090,\r\n        slategrey: 0x708090,\r\n        snow: 0xfffafa,\r\n        springgreen: 0x00ff7f,\r\n        steelblue: 0x4682b4,\r\n        tan: 0xd2b48c,\r\n        teal: 0x008080,\r\n        thistle: 0xd8bfd8,\r\n        tomato: 0xff6347,\r\n        turquoise: 0x40e0d0,\r\n        violet: 0xee82ee,\r\n        wheat: 0xf5deb3,\r\n        white: 0xffffff,\r\n        whitesmoke: 0xf5f5f5,\r\n        yellow: 0xffff00,\r\n        yellowgreen: 0x9acd32\r\n    };\r\n\r\n    csuiDefine(Color, color, {\r\n        displayable: function() {\r\n            return this.rgb().displayable();\r\n        },\r\n        toString: function() {\r\n            return this.rgb() + \"\";\r\n        }\r\n    });\r\n\r\n    function color(format) {\r\n        var m;\r\n        format = (format + \"\").trim().toLowerCase();\r\n        return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\r\n            : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\r\n                : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\r\n                    : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\r\n                        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\r\n                            : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\r\n                                : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\r\n                                    : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\r\n                                        : named.hasOwnProperty(format) ? rgbn(named[format])\r\n                                            : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\r\n                                                : null;\r\n    }\r\n\r\n    function rgbn(n) {\r\n        return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\r\n    }\r\n\r\n    function rgba(r, g, b, a) {\r\n        if (a <= 0) r = g = b = NaN;\r\n        return new Rgb(r, g, b, a);\r\n    }\r\n\r\n    function rgbConvert(o) {\r\n        if (!(o instanceof Color)) o = color(o);\r\n        if (!o) return new Rgb;\r\n        o = o.rgb();\r\n        return new Rgb(o.r, o.g, o.b, o.opacity);\r\n    }\r\n\r\n    function colorRgb(r, g, b, opacity) {\r\n        return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Rgb(r, g, b, opacity) {\r\n        this.r = +r;\r\n        this.g = +g;\r\n        this.b = +b;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine(Rgb, colorRgb, extend(Color, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter : Math.pow(brighter, k);\r\n            return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker : Math.pow(darker, k);\r\n            return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            return this;\r\n        },\r\n        displayable: function() {\r\n            return (0 <= this.r && this.r <= 255)\r\n                && (0 <= this.g && this.g <= 255)\r\n                && (0 <= this.b && this.b <= 255)\r\n                && (0 <= this.opacity && this.opacity <= 1);\r\n        },\r\n        toString: function() {\r\n            var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\r\n            return (a === 1 ? \"rgb(\" : \"rgba(\")\r\n                + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\r\n                + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\r\n                + Math.max(0, Math.min(255, Math.round(this.b) || 0))\r\n                + (a === 1 ? \")\" : \", \" + a + \")\");\r\n        }\r\n    }));\r\n\r\n    function hsla(h, s, l, a) {\r\n        if (a <= 0) h = s = l = NaN;\r\n        else if (l <= 0 || l >= 1) h = s = NaN;\r\n        else if (s <= 0) h = NaN;\r\n        return new Hsl(h, s, l, a);\r\n    }\r\n\r\n    function hslConvert(o) {\r\n        if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\r\n        if (!(o instanceof Color)) o = color(o);\r\n        if (!o) return new Hsl;\r\n        if (o instanceof Hsl) return o;\r\n        o = o.rgb();\r\n        var r = o.r / 255,\r\n            g = o.g / 255,\r\n            b = o.b / 255,\r\n            min = Math.min(r, g, b),\r\n            max = Math.max(r, g, b),\r\n            h = NaN,\r\n            s = max - min,\r\n            l = (max + min) / 2;\r\n        if (s) {\r\n            if (r === max) h = (g - b) / s + (g < b) * 6;\r\n            else if (g === max) h = (b - r) / s + 2;\r\n            else h = (r - g) / s + 4;\r\n            s /= l < 0.5 ? max + min : 2 - max - min;\r\n            h *= 60;\r\n        } else {\r\n            s = l > 0 && l < 1 ? 0 : h;\r\n        }\r\n        return new Hsl(h, s, l, o.opacity);\r\n    }\r\n\r\n    function colorHsl(h, s, l, opacity) {\r\n        return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Hsl(h, s, l, opacity) {\r\n        this.h = +h;\r\n        this.s = +s;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine(Hsl, colorHsl, extend(Color, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter : Math.pow(brighter, k);\r\n            return new Hsl(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker : Math.pow(darker, k);\r\n            return new Hsl(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var h = this.h % 360 + (this.h < 0) * 360,\r\n                s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\r\n                l = this.l,\r\n                m2 = l + (l < 0.5 ? l : 1 - l) * s,\r\n                m1 = 2 * l - m2;\r\n            return new Rgb(\r\n                hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\r\n                hsl2rgb(h, m1, m2),\r\n                hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\r\n                this.opacity\r\n            );\r\n        },\r\n        displayable: function() {\r\n            return (0 <= this.s && this.s <= 1 || isNaN(this.s))\r\n                && (0 <= this.l && this.l <= 1)\r\n                && (0 <= this.opacity && this.opacity <= 1);\r\n        }\r\n    }));\r\n\r\n    /* From FvD 13.37, CSS Color Module Level 3 */\r\n    function hsl2rgb(h, m1, m2) {\r\n        return (h < 60 ? m1 + (m2 - m1) * h / 60\r\n                : h < 180 ? m2\r\n                    : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\r\n                        : m1) * 255;\r\n    }\r\n\r\n    var deg2rad = Math.PI / 180;\r\n    var rad2deg = 180 / Math.PI;\r\n\r\n    var Kn = 18;\r\n    var Xn = 0.950470;\r\n    var Yn = 1;\r\n    var Zn = 1.088830;\r\n    var t0 = 4 / 29;\r\n    var t1 = 6 / 29;\r\n    var t2 = 3 * t1 * t1;\r\n    var t3 = t1 * t1 * t1;\r\n    function labConvert(o) {\r\n        if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\r\n        if (o instanceof Hcl) {\r\n            var h = o.h * deg2rad;\r\n            return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\r\n        }\r\n        if (!(o instanceof Rgb)) o = rgbConvert(o);\r\n        var b = rgb2xyz(o.r),\r\n            a = rgb2xyz(o.g),\r\n            l = rgb2xyz(o.b),\r\n            x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\r\n            y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\r\n            z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\r\n        return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\r\n    }\r\n\r\n    function lab(l, a, b, opacity) {\r\n        return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Lab(l, a, b, opacity) {\r\n        this.l = +l;\r\n        this.a = +a;\r\n        this.b = +b;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine(Lab, lab, extend(Color, {\r\n        brighter: function(k) {\r\n            return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var y = (this.l + 16) / 116,\r\n                x = isNaN(this.a) ? y : y + this.a / 500,\r\n                z = isNaN(this.b) ? y : y - this.b / 200;\r\n            y = Yn * lab2xyz(y);\r\n            x = Xn * lab2xyz(x);\r\n            z = Zn * lab2xyz(z);\r\n            return new Rgb(\r\n                xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\r\n                xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\r\n                xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\r\n                this.opacity\r\n            );\r\n        }\r\n    }));\r\n\r\n    function xyz2lab(t) {\r\n        return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\r\n    }\r\n\r\n    function lab2xyz(t) {\r\n        return t > t1 ? t * t * t : t2 * (t - t0);\r\n    }\r\n\r\n    function xyz2rgb(x) {\r\n        return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\r\n    }\r\n\r\n    function rgb2xyz(x) {\r\n        return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\r\n    }\r\n\r\n    function hclConvert(o) {\r\n        if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\r\n        if (!(o instanceof Lab)) o = labConvert(o);\r\n        var h = Math.atan2(o.b, o.a) * rad2deg;\r\n        return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\r\n    }\r\n\r\n    function colorHcl(h, c, l, opacity) {\r\n        return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Hcl(h, c, l, opacity) {\r\n        this.h = +h;\r\n        this.c = +c;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine(Hcl, colorHcl, extend(Color, {\r\n        brighter: function(k) {\r\n            return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\r\n        },\r\n        rgb: function() {\r\n            return labConvert(this).rgb();\r\n        }\r\n    }));\r\n\r\n    var A = -0.14861;\r\n    var B = +1.78277;\r\n    var C = -0.29227;\r\n    var D = -0.90649;\r\n    var E = +1.97294;\r\n    var ED = E * D;\r\n    var EB = E * B;\r\n    var BC_DA = B * C - D * A;\r\n    function cubehelixConvert(o) {\r\n        if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\r\n        if (!(o instanceof Rgb)) o = rgbConvert(o);\r\n        var r = o.r / 255,\r\n            g = o.g / 255,\r\n            b = o.b / 255,\r\n            l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\r\n            bl = b - l,\r\n            k = (E * (g - l) - C * bl) / D,\r\n            s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\r\n            h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\r\n        return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\r\n    }\r\n\r\n    function cubehelix(h, s, l, opacity) {\r\n        return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Cubehelix(h, s, l, opacity) {\r\n        this.h = +h;\r\n        this.s = +s;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine(Cubehelix, cubehelix, extend(Color, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter : Math.pow(brighter, k);\r\n            return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker : Math.pow(darker, k);\r\n            return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\r\n                l = +this.l,\r\n                a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\r\n                cosh = Math.cos(h),\r\n                sinh = Math.sin(h);\r\n            return new Rgb(\r\n                255 * (l + a * (A * cosh + B * sinh)),\r\n                255 * (l + a * (C * cosh + D * sinh)),\r\n                255 * (l + a * (E * cosh)),\r\n                this.opacity\r\n            );\r\n        }\r\n    }));\r\n\r\n    function basis(t1, v0, v1, v2, v3) {\r\n        var t2 = t1 * t1, t3 = t2 * t1;\r\n        return ((1 - 3 * t1 + 3 * t2 - t3) * v0\r\n            + (4 - 6 * t2 + 3 * t3) * v1\r\n            + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\r\n            + t3 * v3) / 6;\r\n    }\r\n\r\n    function basis$1(values) {\r\n        var n = values.length - 1;\r\n        return function(t) {\r\n            var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\r\n                v1 = values[i],\r\n                v2 = values[i + 1],\r\n                v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\r\n                v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\r\n            return basis((t - i / n) * n, v0, v1, v2, v3);\r\n        };\r\n    }\r\n\r\n    function basisClosed(values) {\r\n        var n = values.length;\r\n        return function(t) {\r\n            var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\r\n                v0 = values[(i + n - 1) % n],\r\n                v1 = values[i % n],\r\n                v2 = values[(i + 1) % n],\r\n                v3 = values[(i + 2) % n];\r\n            return basis((t - i / n) * n, v0, v1, v2, v3);\r\n        };\r\n    }\r\n\r\n    function constant$2(x) {\r\n        return function() {\r\n            return x;\r\n        };\r\n    }\r\n\r\n    function linear$1(a, d) {\r\n        return function(t) {\r\n            return a + t * d;\r\n        };\r\n    }\r\n\r\n    function exponential(a, b, y) {\r\n        return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\r\n            return Math.pow(a + t * b, y);\r\n        };\r\n    }\r\n\r\n    function hue(a, b) {\r\n        var d = b - a;\r\n        return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\r\n    }\r\n\r\n    function gamma(y) {\r\n        return (y = +y) === 1 ? nogamma : function(a, b) {\r\n            return b - a ? exponential(a, b, y) : constant$2(isNaN(a) ? b : a);\r\n        };\r\n    }\r\n\r\n    function nogamma(a, b) {\r\n        var d = b - a;\r\n        return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\r\n    }\r\n\r\n    var interpolateRgb = (function rgbGamma(y) {\r\n        var color = gamma(y);\r\n\r\n        function rgb(start, end) {\r\n            var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\r\n                g = color(start.g, end.g),\r\n                b = color(start.b, end.b),\r\n                opacity = nogamma(start.opacity, end.opacity);\r\n            return function(t) {\r\n                start.r = r(t);\r\n                start.g = g(t);\r\n                start.b = b(t);\r\n                start.opacity = opacity(t);\r\n                return start + \"\";\r\n            };\r\n        }\r\n\r\n        rgb.gamma = rgbGamma;\r\n\r\n        return rgb;\r\n    })(1);\r\n\r\n    function rgbSpline(spline) {\r\n        return function(colors) {\r\n            var n = colors.length,\r\n                r = new Array(n),\r\n                g = new Array(n),\r\n                b = new Array(n),\r\n                i, color;\r\n            for (i = 0; i < n; ++i) {\r\n                color = colorRgb(colors[i]);\r\n                r[i] = color.r || 0;\r\n                g[i] = color.g || 0;\r\n                b[i] = color.b || 0;\r\n            }\r\n            r = spline(r);\r\n            g = spline(g);\r\n            b = spline(b);\r\n            color.opacity = 1;\r\n            return function(t) {\r\n                color.r = r(t);\r\n                color.g = g(t);\r\n                color.b = b(t);\r\n                return color + \"\";\r\n            };\r\n        };\r\n    }\r\n\r\n    var rgbBasis = rgbSpline(basis$1);\r\n    var rgbBasisClosed = rgbSpline(basisClosed);\r\n\r\n    function array$2(a, b) {\r\n        var nb = b ? b.length : 0,\r\n            na = a ? Math.min(nb, a.length) : 0,\r\n            x = new Array(nb),\r\n            c = new Array(nb),\r\n            i;\r\n\r\n        for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\r\n        for (; i < nb; ++i) c[i] = b[i];\r\n\r\n        return function(t) {\r\n            for (i = 0; i < na; ++i) c[i] = x[i](t);\r\n            return c;\r\n        };\r\n    }\r\n\r\n    function date(a, b) {\r\n        var d = new Date;\r\n        return a = +a, b -= a, function(t) {\r\n            return d.setTime(a + b * t), d;\r\n        };\r\n    }\r\n\r\n    function interpolateNumber(a, b) {\r\n        return a = +a, b -= a, function(t) {\r\n            return a + b * t;\r\n        };\r\n    }\r\n\r\n    function object(a, b) {\r\n        var i = {},\r\n            c = {},\r\n            k;\r\n\r\n        if (a === null || typeof a !== \"object\") a = {};\r\n        if (b === null || typeof b !== \"object\") b = {};\r\n\r\n        for (k in b) {\r\n            if (k in a) {\r\n                i[k] = interpolateValue(a[k], b[k]);\r\n            } else {\r\n                c[k] = b[k];\r\n            }\r\n        }\r\n\r\n        return function(t) {\r\n            for (k in i) c[k] = i[k](t);\r\n            return c;\r\n        };\r\n    }\r\n\r\n    var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\r\n    var reB = new RegExp(reA.source, \"g\");\r\n    function zero(b) {\r\n        return function() {\r\n            return b;\r\n        };\r\n    }\r\n\r\n    function one(b) {\r\n        return function(t) {\r\n            return b(t) + \"\";\r\n        };\r\n    }\r\n\r\n    function interpolateString(a, b) {\r\n        var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\r\n            am, // current match in a\r\n            bm, // current match in b\r\n            bs, // string preceding current number in b, if any\r\n            i = -1, // index in s\r\n            s = [], // string constants and placeholders\r\n            q = []; // number interpolators\r\n\r\n        // Coerce inputs to strings.\r\n        a = a + \"\", b = b + \"\";\r\n\r\n        // Interpolate pairs of numbers in a & b.\r\n        while ((am = reA.exec(a))\r\n        && (bm = reB.exec(b))) {\r\n            if ((bs = bm.index) > bi) { // a string precedes the next number in b\r\n                bs = b.slice(bi, bs);\r\n                if (s[i]) s[i] += bs; // coalesce with previous string\r\n                else s[++i] = bs;\r\n            }\r\n            if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\r\n                if (s[i]) s[i] += bm; // coalesce with previous string\r\n                else s[++i] = bm;\r\n            } else { // interpolate non-matching numbers\r\n                s[++i] = null;\r\n                q.push({i: i, x: interpolateNumber(am, bm)});\r\n            }\r\n            bi = reB.lastIndex;\r\n        }\r\n\r\n        // Add remains of b.\r\n        if (bi < b.length) {\r\n            bs = b.slice(bi);\r\n            if (s[i]) s[i] += bs; // coalesce with previous string\r\n            else s[++i] = bs;\r\n        }\r\n\r\n        // Special optimization for only a single match.\r\n        // Otherwise, interpolate each of the numbers and rejoin the string.\r\n        return s.length < 2 ? (q[0]\r\n            ? one(q[0].x)\r\n            : zero(b))\r\n            : (b = q.length, function(t) {\r\n                for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\r\n                return s.join(\"\");\r\n            });\r\n    }\r\n\r\n    function interpolateValue(a, b) {\r\n        var t = typeof b, c;\r\n        return b == null || t === \"boolean\" ? constant$2(b)\r\n            : (t === \"number\" ? interpolateNumber\r\n                : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\r\n                    : b instanceof color ? interpolateRgb\r\n                        : b instanceof Date ? date\r\n                            : Array.isArray(b) ? array$2\r\n                                : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\r\n                                    : interpolateNumber)(a, b);\r\n    }\r\n\r\n    function interpolateRound(a, b) {\r\n        return a = +a, b -= a, function(t) {\r\n            return Math.round(a + b * t);\r\n        };\r\n    }\r\n\r\n    var degrees = 180 / Math.PI;\r\n\r\n    var identity$2 = {\r\n        translateX: 0,\r\n        translateY: 0,\r\n        rotate: 0,\r\n        skewX: 0,\r\n        scaleX: 1,\r\n        scaleY: 1\r\n    };\r\n\r\n    function decompose(a, b, c, d, e, f) {\r\n        var scaleX, scaleY, skewX;\r\n        if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\r\n        if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\r\n        if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\r\n        if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\r\n        return {\r\n            translateX: e,\r\n            translateY: f,\r\n            rotate: Math.atan2(b, a) * degrees,\r\n            skewX: Math.atan(skewX) * degrees,\r\n            scaleX: scaleX,\r\n            scaleY: scaleY\r\n        };\r\n    }\r\n\r\n    var cssNode;\r\n    var cssRoot;\r\n    var cssView;\r\n    var svgNode;\r\n    function parseCss(value) {\r\n        if (value === \"none\") return identity$2;\r\n        if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\r\n        cssNode.style.transform = value;\r\n        value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\r\n        cssRoot.removeChild(cssNode);\r\n        value = value.slice(7, -1).split(\",\");\r\n        return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\r\n    }\r\n\r\n    function parseSvg(value) {\r\n        if (value == null) return identity$2;\r\n        if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        svgNode.setAttribute(\"transform\", value);\r\n        if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\r\n        value = value.matrix;\r\n        return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\r\n    }\r\n\r\n    function interpolateTransform(parse, pxComma, pxParen, degParen) {\r\n\r\n        function pop(s) {\r\n            return s.length ? s.pop() + \" \" : \"\";\r\n        }\r\n\r\n        function translate(xa, ya, xb, yb, s, q) {\r\n            if (xa !== xb || ya !== yb) {\r\n                var i = s.push(\"translate(\", null, pxComma, null, pxParen);\r\n                q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\r\n            } else if (xb || yb) {\r\n                s.push(\"translate(\" + xb + pxComma + yb + pxParen);\r\n            }\r\n        }\r\n\r\n        function rotate(a, b, s, q) {\r\n            if (a !== b) {\r\n                if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\r\n                q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\r\n            } else if (b) {\r\n                s.push(pop(s) + \"rotate(\" + b + degParen);\r\n            }\r\n        }\r\n\r\n        function skewX(a, b, s, q) {\r\n            if (a !== b) {\r\n                q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\r\n            } else if (b) {\r\n                s.push(pop(s) + \"skewX(\" + b + degParen);\r\n            }\r\n        }\r\n\r\n        function scale(xa, ya, xb, yb, s, q) {\r\n            if (xa !== xb || ya !== yb) {\r\n                var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\r\n                q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\r\n            } else if (xb !== 1 || yb !== 1) {\r\n                s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\r\n            }\r\n        }\r\n\r\n        return function(a, b) {\r\n            var s = [], // string constants and placeholders\r\n                q = []; // number interpolators\r\n            a = parse(a), b = parse(b);\r\n            translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\r\n            rotate(a.rotate, b.rotate, s, q);\r\n            skewX(a.skewX, b.skewX, s, q);\r\n            scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\r\n            a = b = null; // gc\r\n            return function(t) {\r\n                var i = -1, n = q.length, o;\r\n                while (++i < n) s[(o = q[i]).i] = o.x(t);\r\n                return s.join(\"\");\r\n            };\r\n        };\r\n    }\r\n\r\n    var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\r\n    var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\r\n\r\n    var rho = Math.SQRT2;\r\n    var rho2 = 2;\r\n    var rho4 = 4;\r\n    var epsilon2 = 1e-12;\r\n    function cosh(x) {\r\n        return ((x = Math.exp(x)) + 1 / x) / 2;\r\n    }\r\n\r\n    function sinh(x) {\r\n        return ((x = Math.exp(x)) - 1 / x) / 2;\r\n    }\r\n\r\n    function tanh(x) {\r\n        return ((x = Math.exp(2 * x)) - 1) / (x + 1);\r\n    }\r\n\r\n    // p0 = [ux0, uy0, w0]\r\n    // p1 = [ux1, uy1, w1]\r\n    function zoom(p0, p1) {\r\n        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\r\n            ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\r\n            dx = ux1 - ux0,\r\n            dy = uy1 - uy0,\r\n            d2 = dx * dx + dy * dy,\r\n            i,\r\n            S;\r\n\r\n        // Special case for u0 ≅ u1.\r\n        if (d2 < epsilon2) {\r\n            S = Math.log(w1 / w0) / rho;\r\n            i = function(t) {\r\n                return [\r\n                    ux0 + t * dx,\r\n                    uy0 + t * dy,\r\n                    w0 * Math.exp(rho * t * S)\r\n                ];\r\n            }\r\n        }\r\n\r\n        // General case.\r\n        else {\r\n            var d1 = Math.sqrt(d2),\r\n                b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\r\n                b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\r\n                r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\r\n                r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\r\n            S = (r1 - r0) / rho;\r\n            i = function(t) {\r\n                var s = t * S,\r\n                    coshr0 = cosh(r0),\r\n                    u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\r\n                return [\r\n                    ux0 + u * dx,\r\n                    uy0 + u * dy,\r\n                    w0 * coshr0 / cosh(rho * s + r0)\r\n                ];\r\n            }\r\n        }\r\n\r\n        i.duration = S * 1000;\r\n\r\n        return i;\r\n    }\r\n\r\n    function hsl(hue) {\r\n        return function(start, end) {\r\n            var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\r\n                s = nogamma(start.s, end.s),\r\n                l = nogamma(start.l, end.l),\r\n                opacity = nogamma(start.opacity, end.opacity);\r\n            return function(t) {\r\n                start.h = h(t);\r\n                start.s = s(t);\r\n                start.l = l(t);\r\n                start.opacity = opacity(t);\r\n                return start + \"\";\r\n            };\r\n        }\r\n    }\r\n\r\n    var hsl$1 = hsl(hue);\r\n    var hslLong = hsl(nogamma);\r\n\r\n    function lab$1(start, end) {\r\n        var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\r\n            a = nogamma(start.a, end.a),\r\n            b = nogamma(start.b, end.b),\r\n            opacity = nogamma(start.opacity, end.opacity);\r\n        return function(t) {\r\n            start.l = l(t);\r\n            start.a = a(t);\r\n            start.b = b(t);\r\n            start.opacity = opacity(t);\r\n            return start + \"\";\r\n        };\r\n    }\r\n\r\n    function hcl(hue) {\r\n        return function(start, end) {\r\n            var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\r\n                c = nogamma(start.c, end.c),\r\n                l = nogamma(start.l, end.l),\r\n                opacity = nogamma(start.opacity, end.opacity);\r\n            return function(t) {\r\n                start.h = h(t);\r\n                start.c = c(t);\r\n                start.l = l(t);\r\n                start.opacity = opacity(t);\r\n                return start + \"\";\r\n            };\r\n        }\r\n    }\r\n\r\n    var hcl$1 = hcl(hue);\r\n    var hclLong = hcl(nogamma);\r\n\r\n    function cubehelix$1(hue) {\r\n        return (function cubehelixGamma(y) {\r\n            y = +y;\r\n\r\n            function cubehelix$$(start, end) {\r\n                var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\r\n                    s = nogamma(start.s, end.s),\r\n                    l = nogamma(start.l, end.l),\r\n                    opacity = nogamma(start.opacity, end.opacity);\r\n                return function(t) {\r\n                    start.h = h(t);\r\n                    start.s = s(t);\r\n                    start.l = l(Math.pow(t, y));\r\n                    start.opacity = opacity(t);\r\n                    return start + \"\";\r\n                };\r\n            }\r\n\r\n            cubehelix$$.gamma = cubehelixGamma;\r\n\r\n            return cubehelix$$;\r\n        })(1);\r\n    }\r\n\r\n    var cubehelix$2 = cubehelix$1(hue);\r\n    var interpolateCubehelixLong = cubehelix$1(nogamma);\r\n\r\n    function quantize(interpolator, n) {\r\n        var samples = new Array(n);\r\n        for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\r\n        return samples;\r\n    }\r\n\r\n    function constant$3(x) {\r\n        return function() {\r\n            return x;\r\n        };\r\n    }\r\n\r\n    function number$1(x) {\r\n        return +x;\r\n    }\r\n\r\n    var unit = [0, 1];\r\n\r\n    function deinterpolate(a, b) {\r\n        return (b -= (a = +a))\r\n            ? function(x) { return (x - a) / b; }\r\n            : constant$3(b);\r\n    }\r\n\r\n    function deinterpolateClamp(deinterpolate) {\r\n        return function(a, b) {\r\n            var d = deinterpolate(a = +a, b = +b);\r\n            return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\r\n        };\r\n    }\r\n\r\n    function reinterpolateClamp(reinterpolate) {\r\n        return function(a, b) {\r\n            var r = reinterpolate(a = +a, b = +b);\r\n            return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\r\n        };\r\n    }\r\n\r\n    function bimap(domain, range, deinterpolate, reinterpolate) {\r\n        var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\r\n        if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\r\n        else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\r\n        return function(x) { return r0(d0(x)); };\r\n    }\r\n\r\n    function polymap(domain, range, deinterpolate, reinterpolate) {\r\n        var j = Math.min(domain.length, range.length) - 1,\r\n            d = new Array(j),\r\n            r = new Array(j),\r\n            i = -1;\r\n\r\n        // Reverse descending domains.\r\n        if (domain[j] < domain[0]) {\r\n            domain = domain.slice().reverse();\r\n            range = range.slice().reverse();\r\n        }\r\n\r\n        while (++i < j) {\r\n            d[i] = deinterpolate(domain[i], domain[i + 1]);\r\n            r[i] = reinterpolate(range[i], range[i + 1]);\r\n        }\r\n\r\n        return function(x) {\r\n            var i = bisectRight(domain, x, 1, j) - 1;\r\n            return r[i](d[i](x));\r\n        };\r\n    }\r\n\r\n    function copy(source, target) {\r\n        return target\r\n            .domain(source.domain())\r\n            .range(source.range())\r\n            .interpolate(source.interpolate())\r\n            .clamp(source.clamp());\r\n    }\r\n\r\n    // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\r\n    // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\r\n    function continuous(deinterpolate$$, reinterpolate) {\r\n        var domain = unit,\r\n            range = unit,\r\n            interpolate = interpolateValue,\r\n            clamp = false,\r\n            piecewise,\r\n            output,\r\n            input;\r\n\r\n        function rescale() {\r\n            piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\r\n            output = input = null;\r\n            return scale;\r\n        }\r\n\r\n        function scale(x) {\r\n            return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\r\n        }\r\n\r\n        scale.invert = function(y) {\r\n            return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\r\n        };\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\r\n        };\r\n\r\n        scale.range = function(_) {\r\n            return arguments.length ? (range = slice$1.call(_), rescale()) : range.slice();\r\n        };\r\n\r\n        scale.rangeRound = function(_) {\r\n            return range = slice$1.call(_), interpolate = interpolateRound, rescale();\r\n        };\r\n\r\n        scale.clamp = function(_) {\r\n            return arguments.length ? (clamp = !!_, rescale()) : clamp;\r\n        };\r\n\r\n        scale.interpolate = function(_) {\r\n            return arguments.length ? (interpolate = _, rescale()) : interpolate;\r\n        };\r\n\r\n        return rescale();\r\n    }\r\n\r\n    // Computes the decimal coefficient and exponent of the specified number x with\r\n    // significant digits p, where x is positive and p is in [1, 21] or undefined.\r\n    // For example, formatDecimal(1.23) returns [\"123\", 0].\r\n    function formatDecimal(x, p) {\r\n        if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\r\n        var i, coefficient = x.slice(0, i);\r\n\r\n        // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\r\n        // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\r\n        return [\r\n            coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\r\n            +x.slice(i + 1)\r\n        ];\r\n    }\r\n\r\n    function exponent(x) {\r\n        return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\r\n    }\r\n\r\n    function formatGroup(grouping, thousands) {\r\n        return function(value, width) {\r\n            var i = value.length,\r\n                t = [],\r\n                j = 0,\r\n                g = grouping[0],\r\n                length = 0;\r\n\r\n            while (i > 0 && g > 0) {\r\n                if (length + g + 1 > width) g = Math.max(1, width - length);\r\n                t.push(value.substring(i -= g, i + g));\r\n                if ((length += g + 1) > width) break;\r\n                g = grouping[j = (j + 1) % grouping.length];\r\n            }\r\n\r\n            return t.reverse().join(thousands);\r\n        };\r\n    }\r\n\r\n    function formatNumerals(numerals) {\r\n        return function(value) {\r\n            return value.replace(/[0-9]/g, function(i) {\r\n                return numerals[+i];\r\n            });\r\n        };\r\n    }\r\n\r\n    function formatDefault(x, p) {\r\n        x = x.toPrecision(p);\r\n\r\n        out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\r\n            switch (x[i]) {\r\n                case \".\": i0 = i1 = i; break;\r\n                case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\r\n                case \"e\": break out;\r\n                default: if (i0 > 0) i0 = 0; break;\r\n            }\r\n        }\r\n\r\n        return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\r\n    }\r\n\r\n    var prefixExponent;\r\n\r\n    function formatPrefixAuto(x, p) {\r\n        var d = formatDecimal(x, p);\r\n        if (!d) return x + \"\";\r\n        var coefficient = d[0],\r\n            exponent = d[1],\r\n            i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\r\n            n = coefficient.length;\r\n        return i === n ? coefficient\r\n            : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\r\n                : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\r\n                    : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\r\n    }\r\n\r\n    function formatRounded(x, p) {\r\n        var d = formatDecimal(x, p);\r\n        if (!d) return x + \"\";\r\n        var coefficient = d[0],\r\n            exponent = d[1];\r\n        return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\r\n            : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\r\n                : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\r\n    }\r\n\r\n    var formatTypes = {\r\n        \"\": formatDefault,\r\n        \"%\": function(x, p) { return (x * 100).toFixed(p); },\r\n        \"b\": function(x) { return Math.round(x).toString(2); },\r\n        \"c\": function(x) { return x + \"\"; },\r\n        \"d\": function(x) { return Math.round(x).toString(10); },\r\n        \"e\": function(x, p) { return x.toExponential(p); },\r\n        \"f\": function(x, p) { return x.toFixed(p); },\r\n        \"g\": function(x, p) { return x.toPrecision(p); },\r\n        \"o\": function(x) { return Math.round(x).toString(8); },\r\n        \"p\": function(x, p) { return formatRounded(x * 100, p); },\r\n        \"r\": formatRounded,\r\n        \"s\": formatPrefixAuto,\r\n        \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\r\n        \"x\": function(x) { return Math.round(x).toString(16); }\r\n    };\r\n\r\n    // [[fill]align][sign][symbol][0][width][,][.precision][type]\r\n    var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\r\n\r\n    function formatSpecifier(specifier) {\r\n        return new FormatSpecifier(specifier);\r\n    }\r\n\r\n    formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\r\n\r\n    function FormatSpecifier(specifier) {\r\n        if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\r\n\r\n        var match,\r\n            fill = match[1] || \" \",\r\n            align = match[2] || \">\",\r\n            sign = match[3] || \"-\",\r\n            symbol = match[4] || \"\",\r\n            zero = !!match[5],\r\n            width = match[6] && +match[6],\r\n            comma = !!match[7],\r\n            precision = match[8] && +match[8].slice(1),\r\n            type = match[9] || \"\";\r\n\r\n        // The \"n\" type is an alias for \",g\".\r\n        if (type === \"n\") comma = true, type = \"g\";\r\n\r\n        // Map invalid types to the default format.\r\n        else if (!formatTypes[type]) type = \"\";\r\n\r\n        // If zero fill is specified, padding goes after sign and before digits.\r\n        if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\r\n\r\n        this.fill = fill;\r\n        this.align = align;\r\n        this.sign = sign;\r\n        this.symbol = symbol;\r\n        this.zero = zero;\r\n        this.width = width;\r\n        this.comma = comma;\r\n        this.precision = precision;\r\n        this.type = type;\r\n    }\r\n\r\n    FormatSpecifier.prototype.toString = function() {\r\n        return this.fill\r\n            + this.align\r\n            + this.sign\r\n            + this.symbol\r\n            + (this.zero ? \"0\" : \"\")\r\n            + (this.width == null ? \"\" : Math.max(1, this.width | 0))\r\n            + (this.comma ? \",\" : \"\")\r\n            + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\r\n            + this.type;\r\n    };\r\n\r\n    function identity$3(x) {\r\n        return x;\r\n    }\r\n\r\n    var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\r\n\r\n    function formatLocale(locale) {\r\n        var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\r\n            currency = locale.currency,\r\n            decimal = locale.decimal,\r\n            numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\r\n            percent = locale.percent || \"%\";\r\n\r\n        function newFormat(specifier) {\r\n            specifier = formatSpecifier(specifier);\r\n\r\n            var fill = specifier.fill,\r\n                align = specifier.align,\r\n                sign = specifier.sign,\r\n                symbol = specifier.symbol,\r\n                zero = specifier.zero,\r\n                width = specifier.width,\r\n                comma = specifier.comma,\r\n                precision = specifier.precision,\r\n                type = specifier.type;\r\n\r\n            // Compute the prefix and suffix.\r\n            // For SI-prefix, the suffix is lazily computed.\r\n            var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\r\n                suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\r\n\r\n            // What format function should we use?\r\n            // Is this an integer type?\r\n            // Can this type generate exponential notation?\r\n            var formatType = formatTypes[type],\r\n                maybeSuffix = !type || /[defgprs%]/.test(type);\r\n\r\n            // Set the default precision if not specified,\r\n            // or clamp the specified precision to the supported range.\r\n            // For significant precision, it must be in [1, 21].\r\n            // For fixed precision, it must be in [0, 20].\r\n            precision = precision == null ? (type ? 6 : 12)\r\n                : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\r\n                    : Math.max(0, Math.min(20, precision));\r\n\r\n            function format(value) {\r\n                var valuePrefix = prefix,\r\n                    valueSuffix = suffix,\r\n                    i, n, c;\r\n\r\n                if (type === \"c\") {\r\n                    valueSuffix = formatType(value) + valueSuffix;\r\n                    value = \"\";\r\n                } else {\r\n                    value = +value;\r\n\r\n                    // Perform the initial formatting.\r\n                    var valueNegative = value < 0;\r\n                    value = formatType(Math.abs(value), precision);\r\n\r\n                    // If a negative value rounds to zero during formatting, treat as positive.\r\n                    if (valueNegative && +value === 0) valueNegative = false;\r\n\r\n                    // Compute the prefix and suffix.\r\n                    valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\r\n                    valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\r\n\r\n                    // Break the formatted value into the integer “value” part that can be\r\n                    // grouped, and fractional or exponential “suffix” part that is not.\r\n                    if (maybeSuffix) {\r\n                        i = -1, n = value.length;\r\n                        while (++i < n) {\r\n                            if (c = value.charCodeAt(i), 48 > c || c > 57) {\r\n                                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\r\n                                value = value.slice(0, i);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // If the fill character is not \"0\", grouping is applied before padding.\r\n                if (comma && !zero) value = group(value, Infinity);\r\n\r\n                // Compute the padding.\r\n                var length = valuePrefix.length + value.length + valueSuffix.length,\r\n                    padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\r\n\r\n                // If the fill character is \"0\", grouping is applied after padding.\r\n                if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\r\n\r\n                // Reconstruct the final output based on the desired alignment.\r\n                switch (align) {\r\n                    case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\r\n                    case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\r\n                    case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\r\n                    default: value = padding + valuePrefix + value + valueSuffix; break;\r\n                }\r\n\r\n                return numerals(value);\r\n            }\r\n\r\n            format.toString = function() {\r\n                return specifier + \"\";\r\n            };\r\n\r\n            return format;\r\n        }\r\n\r\n        function formatPrefix(specifier, value) {\r\n            var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\r\n                e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\r\n                k = Math.pow(10, -e),\r\n                prefix = prefixes[8 + e / 3];\r\n            return function(value) {\r\n                return f(k * value) + prefix;\r\n            };\r\n        }\r\n\r\n        return {\r\n            format: newFormat,\r\n            formatPrefix: formatPrefix\r\n        };\r\n    }\r\n\r\n    var locale;\r\n    exports.format;\r\n    exports.formatPrefix;\r\n\r\n    defaultLocale({\r\n        decimal: \".\",\r\n        thousands: \",\",\r\n        grouping: [3],\r\n        currency: [\"$\", \"\"]\r\n    });\r\n\r\n    function defaultLocale(definition) {\r\n        locale = formatLocale(definition);\r\n        exports.format = locale.format;\r\n        exports.formatPrefix = locale.formatPrefix;\r\n        return locale;\r\n    }\r\n\r\n    function precisionFixed(step) {\r\n        return Math.max(0, -exponent(Math.abs(step)));\r\n    }\r\n\r\n    function precisionPrefix(step, value) {\r\n        return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\r\n    }\r\n\r\n    function precisionRound(step, max) {\r\n        step = Math.abs(step), max = Math.abs(max) - step;\r\n        return Math.max(0, exponent(max) - exponent(step)) + 1;\r\n    }\r\n\r\n    function tickFormat(domain, count, specifier) {\r\n        var start = domain[0],\r\n            stop = domain[domain.length - 1],\r\n            step = tickStep(start, stop, count == null ? 10 : count),\r\n            precision;\r\n        specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\r\n        switch (specifier.type) {\r\n            case \"s\": {\r\n                var value = Math.max(Math.abs(start), Math.abs(stop));\r\n                if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\r\n                return exports.formatPrefix(specifier, value);\r\n            }\r\n            case \"\":\r\n            case \"e\":\r\n            case \"g\":\r\n            case \"p\":\r\n            case \"r\": {\r\n                if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\r\n                break;\r\n            }\r\n            case \"f\":\r\n            case \"%\": {\r\n                if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\r\n                break;\r\n            }\r\n        }\r\n        return exports.format(specifier);\r\n    }\r\n\r\n    function linearish(scale) {\r\n        var domain = scale.domain;\r\n\r\n        scale.ticks = function(count) {\r\n            var d = domain();\r\n            return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\r\n        };\r\n\r\n        scale.tickFormat = function(count, specifier) {\r\n            return tickFormat(domain(), count, specifier);\r\n        };\r\n\r\n        scale.nice = function(count) {\r\n            if (count == null) count = 10;\r\n\r\n            var d = domain(),\r\n                i0 = 0,\r\n                i1 = d.length - 1,\r\n                start = d[i0],\r\n                stop = d[i1],\r\n                step;\r\n\r\n            if (stop < start) {\r\n                step = start, start = stop, stop = step;\r\n                step = i0, i0 = i1, i1 = step;\r\n            }\r\n\r\n            step = tickIncrement(start, stop, count);\r\n\r\n            if (step > 0) {\r\n                start = Math.floor(start / step) * step;\r\n                stop = Math.ceil(stop / step) * step;\r\n                step = tickIncrement(start, stop, count);\r\n            } else if (step < 0) {\r\n                start = Math.ceil(start * step) / step;\r\n                stop = Math.floor(stop * step) / step;\r\n                step = tickIncrement(start, stop, count);\r\n            }\r\n\r\n            if (step > 0) {\r\n                d[i0] = Math.floor(start / step) * step;\r\n                d[i1] = Math.ceil(stop / step) * step;\r\n                domain(d);\r\n            } else if (step < 0) {\r\n                d[i0] = Math.ceil(start * step) / step;\r\n                d[i1] = Math.floor(stop * step) / step;\r\n                domain(d);\r\n            }\r\n\r\n            return scale;\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    function linear() {\r\n        var scale = continuous(deinterpolate, interpolateNumber);\r\n\r\n        scale.copy = function() {\r\n            return copy(scale, linear());\r\n        };\r\n\r\n        return linearish(scale);\r\n    }\r\n\r\n    function identity$1() {\r\n        var domain = [0, 1];\r\n\r\n        function scale(x) {\r\n            return +x;\r\n        }\r\n\r\n        scale.invert = scale;\r\n\r\n        scale.domain = scale.range = function(_) {\r\n            return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return identity$1().domain(domain);\r\n        };\r\n\r\n        return linearish(scale);\r\n    }\r\n\r\n    function nice(domain, interval) {\r\n        domain = domain.slice();\r\n\r\n        var i0 = 0,\r\n            i1 = domain.length - 1,\r\n            x0 = domain[i0],\r\n            x1 = domain[i1],\r\n            t;\r\n\r\n        if (x1 < x0) {\r\n            t = i0, i0 = i1, i1 = t;\r\n            t = x0, x0 = x1, x1 = t;\r\n        }\r\n\r\n        domain[i0] = interval.floor(x0);\r\n        domain[i1] = interval.ceil(x1);\r\n        return domain;\r\n    }\r\n\r\n    function deinterpolate$1(a, b) {\r\n        return (b = Math.log(b / a))\r\n            ? function(x) { return Math.log(x / a) / b; }\r\n            : constant$3(b);\r\n    }\r\n\r\n    function reinterpolate(a, b) {\r\n        return a < 0\r\n            ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\r\n            : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\r\n    }\r\n\r\n    function pow10(x) {\r\n        return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\r\n    }\r\n\r\n    function powp(base) {\r\n        return base === 10 ? pow10\r\n            : base === Math.E ? Math.exp\r\n                : function(x) { return Math.pow(base, x); };\r\n    }\r\n\r\n    function logp(base) {\r\n        return base === Math.E ? Math.log\r\n            : base === 10 && Math.log10\r\n            || base === 2 && Math.log2\r\n            || (base = Math.log(base), function(x) { return Math.log(x) / base; });\r\n    }\r\n\r\n    function reflect(f) {\r\n        return function(x) {\r\n            return -f(-x);\r\n        };\r\n    }\r\n\r\n    function log() {\r\n        var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\r\n            domain = scale.domain,\r\n            base = 10,\r\n            logs = logp(10),\r\n            pows = powp(10);\r\n\r\n        function rescale() {\r\n            logs = logp(base), pows = powp(base);\r\n            if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\r\n            return scale;\r\n        }\r\n\r\n        scale.base = function(_) {\r\n            return arguments.length ? (base = +_, rescale()) : base;\r\n        };\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? (domain(_), rescale()) : domain();\r\n        };\r\n\r\n        scale.ticks = function(count) {\r\n            var d = domain(),\r\n                u = d[0],\r\n                v = d[d.length - 1],\r\n                r;\r\n\r\n            if (r = v < u) i = u, u = v, v = i;\r\n\r\n            var i = logs(u),\r\n                j = logs(v),\r\n                p,\r\n                k,\r\n                t,\r\n                n = count == null ? 10 : +count,\r\n                z = [];\r\n\r\n            if (!(base % 1) && j - i < n) {\r\n                i = Math.round(i) - 1, j = Math.round(j) + 1;\r\n                if (u > 0) for (; i < j; ++i) {\r\n                    for (k = 1, p = pows(i); k < base; ++k) {\r\n                        t = p * k;\r\n                        if (t < u) continue;\r\n                        if (t > v) break;\r\n                        z.push(t);\r\n                    }\r\n                } else for (; i < j; ++i) {\r\n                    for (k = base - 1, p = pows(i); k >= 1; --k) {\r\n                        t = p * k;\r\n                        if (t < u) continue;\r\n                        if (t > v) break;\r\n                        z.push(t);\r\n                    }\r\n                }\r\n            } else {\r\n                z = ticks(i, j, Math.min(j - i, n)).map(pows);\r\n            }\r\n\r\n            return r ? z.reverse() : z;\r\n        };\r\n\r\n        scale.tickFormat = function(count, specifier) {\r\n            if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\r\n            if (typeof specifier !== \"function\") specifier = exports.format(specifier);\r\n            if (count === Infinity) return specifier;\r\n            if (count == null) count = 10;\r\n            var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\r\n            return function(d) {\r\n                var i = d / pows(Math.round(logs(d)));\r\n                if (i * base < base - 0.5) i *= base;\r\n                return i <= k ? specifier(d) : \"\";\r\n            };\r\n        };\r\n\r\n        scale.nice = function() {\r\n            return domain(nice(domain(), {\r\n                floor: function(x) { return pows(Math.floor(logs(x))); },\r\n                ceil: function(x) { return pows(Math.ceil(logs(x))); }\r\n            }));\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return copy(scale, log().base(base));\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    function raise$1(x, exponent) {\r\n        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\r\n    }\r\n\r\n    function pow() {\r\n        var exponent = 1,\r\n            scale = continuous(deinterpolate, reinterpolate),\r\n            domain = scale.domain;\r\n\r\n        function deinterpolate(a, b) {\r\n            return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\r\n                ? function(x) { return (raise$1(x, exponent) - a) / b; }\r\n                : constant$3(b);\r\n        }\r\n\r\n        function reinterpolate(a, b) {\r\n            b = raise$1(b, exponent) - (a = raise$1(a, exponent));\r\n            return function(t) { return raise$1(a + b * t, 1 / exponent); };\r\n        }\r\n\r\n        scale.exponent = function(_) {\r\n            return arguments.length ? (exponent = +_, domain(domain())) : exponent;\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return copy(scale, pow().exponent(exponent));\r\n        };\r\n\r\n        return linearish(scale);\r\n    }\r\n\r\n    function sqrt() {\r\n        return pow().exponent(0.5);\r\n    }\r\n\r\n    function quantile() {\r\n        var domain = [],\r\n            range = [],\r\n            thresholds = [];\r\n\r\n        function rescale() {\r\n            var i = 0, n = Math.max(1, range.length);\r\n            thresholds = new Array(n - 1);\r\n            while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\r\n            return scale;\r\n        }\r\n\r\n        function scale(x) {\r\n            if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\r\n        }\r\n\r\n        scale.invertExtent = function(y) {\r\n            var i = range.indexOf(y);\r\n            return i < 0 ? [NaN, NaN] : [\r\n                i > 0 ? thresholds[i - 1] : domain[0],\r\n                i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\r\n            ];\r\n        };\r\n\r\n        scale.domain = function(_) {\r\n            if (!arguments.length) return domain.slice();\r\n            domain = [];\r\n            for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\r\n            domain.sort(ascending$1);\r\n            return rescale();\r\n        };\r\n\r\n        scale.range = function(_) {\r\n            return arguments.length ? (range = slice$1.call(_), rescale()) : range.slice();\r\n        };\r\n\r\n        scale.quantiles = function() {\r\n            return thresholds.slice();\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return quantile()\r\n                .domain(domain)\r\n                .range(range);\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    function quantize$1() {\r\n        var x0 = 0,\r\n            x1 = 1,\r\n            n = 1,\r\n            domain = [0.5],\r\n            range = [0, 1];\r\n\r\n        function scale(x) {\r\n            if (x <= x) return range[bisectRight(domain, x, 0, n)];\r\n        }\r\n\r\n        function rescale() {\r\n            var i = -1;\r\n            domain = new Array(n);\r\n            while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\r\n            return scale;\r\n        }\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\r\n        };\r\n\r\n        scale.range = function(_) {\r\n            return arguments.length ? (n = (range = slice$1.call(_)).length - 1, rescale()) : range.slice();\r\n        };\r\n\r\n        scale.invertExtent = function(y) {\r\n            var i = range.indexOf(y);\r\n            return i < 0 ? [NaN, NaN]\r\n                : i < 1 ? [x0, domain[0]]\r\n                    : i >= n ? [domain[n - 1], x1]\r\n                        : [domain[i - 1], domain[i]];\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return quantize$1()\r\n                .domain([x0, x1])\r\n                .range(range);\r\n        };\r\n\r\n        return linearish(scale);\r\n    }\r\n\r\n    function threshold$1() {\r\n        var domain = [0.5],\r\n            range = [0, 1],\r\n            n = 1;\r\n\r\n        function scale(x) {\r\n            if (x <= x) return range[bisectRight(domain, x, 0, n)];\r\n        }\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? (domain = slice$1.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\r\n        };\r\n\r\n        scale.range = function(_) {\r\n            return arguments.length ? (range = slice$1.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\r\n        };\r\n\r\n        scale.invertExtent = function(y) {\r\n            var i = range.indexOf(y);\r\n            return [domain[i - 1], domain[i]];\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return threshold$1()\r\n                .domain(domain)\r\n                .range(range);\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    var t0$1 = new Date;\r\n    var t1$1 = new Date;\r\n    function newInterval(floori, offseti, count, field) {\r\n\r\n        function interval(date) {\r\n            return floori(date = new Date(+date)), date;\r\n        }\r\n\r\n        interval.floor = interval;\r\n\r\n        interval.ceil = function(date) {\r\n            return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\r\n        };\r\n\r\n        interval.round = function(date) {\r\n            var d0 = interval(date),\r\n                d1 = interval.ceil(date);\r\n            return date - d0 < d1 - date ? d0 : d1;\r\n        };\r\n\r\n        interval.offset = function(date, step) {\r\n            return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\r\n        };\r\n\r\n        interval.range = function(start, stop, step) {\r\n            var range = [];\r\n            start = interval.ceil(start);\r\n            step = step == null ? 1 : Math.floor(step);\r\n            if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\r\n            do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\r\n            return range;\r\n        };\r\n\r\n        interval.filter = function(test) {\r\n            return newInterval(function(date) {\r\n                if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\r\n            }, function(date, step) {\r\n                if (date >= date) {\r\n                    if (step < 0) while (++step <= 0) {\r\n                        while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\r\n                    } else while (--step >= 0) {\r\n                        while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        if (count) {\r\n            interval.count = function(start, end) {\r\n                t0$1.setTime(+start), t1$1.setTime(+end);\r\n                floori(t0$1), floori(t1$1);\r\n                return Math.floor(count(t0$1, t1$1));\r\n            };\r\n\r\n            interval.every = function(step) {\r\n                step = Math.floor(step);\r\n                return !isFinite(step) || !(step > 0) ? null\r\n                    : !(step > 1) ? interval\r\n                        : interval.filter(field\r\n                            ? function(d) { return field(d) % step === 0; }\r\n                            : function(d) { return interval.count(0, d) % step === 0; });\r\n            };\r\n        }\r\n\r\n        return interval;\r\n    }\r\n\r\n    var millisecond = newInterval(function() {\r\n        // noop\r\n    }, function(date, step) {\r\n        date.setTime(+date + step);\r\n    }, function(start, end) {\r\n        return end - start;\r\n    });\r\n\r\n    // An optimized implementation for this simple case.\r\n    millisecond.every = function(k) {\r\n        k = Math.floor(k);\r\n        if (!isFinite(k) || !(k > 0)) return null;\r\n        if (!(k > 1)) return millisecond;\r\n        return newInterval(function(date) {\r\n            date.setTime(Math.floor(date / k) * k);\r\n        }, function(date, step) {\r\n            date.setTime(+date + step * k);\r\n        }, function(start, end) {\r\n            return (end - start) / k;\r\n        });\r\n    };\r\n\r\n    var durationSecond$1 = 1e3;\r\n    var durationMinute$1 = 6e4;\r\n    var durationHour$1 = 36e5;\r\n    var durationDay$1 = 864e5;\r\n    var durationWeek$1 = 6048e5;\r\n\r\n    var second = newInterval(function(date) {\r\n        date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\r\n    }, function(date, step) {\r\n        date.setTime(+date + step * durationSecond$1);\r\n    }, function(start, end) {\r\n        return (end - start) / durationSecond$1;\r\n    }, function(date) {\r\n        return date.getUTCSeconds();\r\n    });\r\n\r\n    var minute = newInterval(function(date) {\r\n        date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\r\n    }, function(date, step) {\r\n        date.setTime(+date + step * durationMinute$1);\r\n    }, function(start, end) {\r\n        return (end - start) / durationMinute$1;\r\n    }, function(date) {\r\n        return date.getMinutes();\r\n    });\r\n\r\n    var hour = newInterval(function(date) {\r\n        var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\r\n        if (offset < 0) offset += durationHour$1;\r\n        date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\r\n    }, function(date, step) {\r\n        date.setTime(+date + step * durationHour$1);\r\n    }, function(start, end) {\r\n        return (end - start) / durationHour$1;\r\n    }, function(date) {\r\n        return date.getHours();\r\n    });\r\n\r\n    var day = newInterval(function(date) {\r\n        date.setHours(0, 0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setDate(date.getDate() + step);\r\n    }, function(start, end) {\r\n        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\r\n    }, function(date) {\r\n        return date.getDate() - 1;\r\n    });\r\n\r\n    function weekday(i) {\r\n        return newInterval(function(date) {\r\n            date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\r\n            date.setHours(0, 0, 0, 0);\r\n        }, function(date, step) {\r\n            date.setDate(date.getDate() + step * 7);\r\n        }, function(start, end) {\r\n            return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\r\n        });\r\n    }\r\n\r\n    var timeSunday = weekday(0);\r\n    var timeMonday = weekday(1);\r\n    var timeThursday = weekday(4);\r\n\r\n    var month = newInterval(function(date) {\r\n        date.setDate(1);\r\n        date.setHours(0, 0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setMonth(date.getMonth() + step);\r\n    }, function(start, end) {\r\n        return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\r\n    }, function(date) {\r\n        return date.getMonth();\r\n    });\r\n\r\n    var year = newInterval(function(date) {\r\n        date.setMonth(0, 1);\r\n        date.setHours(0, 0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setFullYear(date.getFullYear() + step);\r\n    }, function(start, end) {\r\n        return end.getFullYear() - start.getFullYear();\r\n    }, function(date) {\r\n        return date.getFullYear();\r\n    });\r\n\r\n    // An optimized implementation for this simple case.\r\n    year.every = function(k) {\r\n        return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\r\n            date.setFullYear(Math.floor(date.getFullYear() / k) * k);\r\n            date.setMonth(0, 1);\r\n            date.setHours(0, 0, 0, 0);\r\n        }, function(date, step) {\r\n            date.setFullYear(date.getFullYear() + step * k);\r\n        });\r\n    };\r\n\r\n    var utcMinute = newInterval(function(date) {\r\n        date.setUTCSeconds(0, 0);\r\n    }, function(date, step) {\r\n        date.setTime(+date + step * durationMinute$1);\r\n    }, function(start, end) {\r\n        return (end - start) / durationMinute$1;\r\n    }, function(date) {\r\n        return date.getUTCMinutes();\r\n    });\r\n\r\n    var utcHour = newInterval(function(date) {\r\n        date.setUTCMinutes(0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setTime(+date + step * durationHour$1);\r\n    }, function(start, end) {\r\n        return (end - start) / durationHour$1;\r\n    }, function(date) {\r\n        return date.getUTCHours();\r\n    });\r\n\r\n    var utcDay = newInterval(function(date) {\r\n        date.setUTCHours(0, 0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setUTCDate(date.getUTCDate() + step);\r\n    }, function(start, end) {\r\n        return (end - start) / durationDay$1;\r\n    }, function(date) {\r\n        return date.getUTCDate() - 1;\r\n    });\r\n\r\n    function utcWeekday(i) {\r\n        return newInterval(function(date) {\r\n            date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\r\n            date.setUTCHours(0, 0, 0, 0);\r\n        }, function(date, step) {\r\n            date.setUTCDate(date.getUTCDate() + step * 7);\r\n        }, function(start, end) {\r\n            return (end - start) / durationWeek$1;\r\n        });\r\n    }\r\n\r\n    var utcWeek = utcWeekday(0);\r\n    var utcMonday = utcWeekday(1);\r\n    var utcThursday = utcWeekday(4);\r\n\r\n    var utcMonth = newInterval(function(date) {\r\n        date.setUTCDate(1);\r\n        date.setUTCHours(0, 0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setUTCMonth(date.getUTCMonth() + step);\r\n    }, function(start, end) {\r\n        return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\r\n    }, function(date) {\r\n        return date.getUTCMonth();\r\n    });\r\n\r\n    var utcYear = newInterval(function(date) {\r\n        date.setUTCMonth(0, 1);\r\n        date.setUTCHours(0, 0, 0, 0);\r\n    }, function(date, step) {\r\n        date.setUTCFullYear(date.getUTCFullYear() + step);\r\n    }, function(start, end) {\r\n        return end.getUTCFullYear() - start.getUTCFullYear();\r\n    }, function(date) {\r\n        return date.getUTCFullYear();\r\n    });\r\n\r\n    // An optimized implementation for this simple case.\r\n    utcYear.every = function(k) {\r\n        return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\r\n            date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\r\n            date.setUTCMonth(0, 1);\r\n            date.setUTCHours(0, 0, 0, 0);\r\n        }, function(date, step) {\r\n            date.setUTCFullYear(date.getUTCFullYear() + step * k);\r\n        });\r\n    };\r\n\r\n    function localDate(d) {\r\n        if (0 <= d.y && d.y < 100) {\r\n            var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\r\n            date.setFullYear(d.y);\r\n            return date;\r\n        }\r\n        return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\r\n    }\r\n\r\n    function utcDate(d) {\r\n        if (0 <= d.y && d.y < 100) {\r\n            var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\r\n            date.setUTCFullYear(d.y);\r\n            return date;\r\n        }\r\n        return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\r\n    }\r\n\r\n    function newYear(y) {\r\n        return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\r\n    }\r\n\r\n    function formatLocale$1(locale) {\r\n        var locale_dateTime = locale.dateTime,\r\n            locale_date = locale.date,\r\n            locale_time = locale.time,\r\n            locale_periods = locale.periods,\r\n            locale_weekdays = locale.days,\r\n            locale_shortWeekdays = locale.shortDays,\r\n            locale_months = locale.months,\r\n            locale_shortMonths = locale.shortMonths;\r\n\r\n        var periodRe = formatRe(locale_periods),\r\n            periodLookup = formatLookup(locale_periods),\r\n            weekdayRe = formatRe(locale_weekdays),\r\n            weekdayLookup = formatLookup(locale_weekdays),\r\n            shortWeekdayRe = formatRe(locale_shortWeekdays),\r\n            shortWeekdayLookup = formatLookup(locale_shortWeekdays),\r\n            monthRe = formatRe(locale_months),\r\n            monthLookup = formatLookup(locale_months),\r\n            shortMonthRe = formatRe(locale_shortMonths),\r\n            shortMonthLookup = formatLookup(locale_shortMonths);\r\n\r\n        var formats = {\r\n            \"a\": formatShortWeekday,\r\n            \"A\": formatWeekday,\r\n            \"b\": formatShortMonth,\r\n            \"B\": formatMonth,\r\n            \"c\": null,\r\n            \"d\": formatDayOfMonth,\r\n            \"e\": formatDayOfMonth,\r\n            \"f\": formatMicroseconds,\r\n            \"H\": formatHour24,\r\n            \"I\": formatHour12,\r\n            \"j\": formatDayOfYear,\r\n            \"L\": formatMilliseconds,\r\n            \"m\": formatMonthNumber,\r\n            \"M\": formatMinutes,\r\n            \"p\": formatPeriod,\r\n            \"Q\": formatUnixTimestamp,\r\n            \"s\": formatUnixTimestampSeconds,\r\n            \"S\": formatSeconds,\r\n            \"u\": formatWeekdayNumberMonday,\r\n            \"U\": formatWeekNumberSunday,\r\n            \"V\": formatWeekNumberISO,\r\n            \"w\": formatWeekdayNumberSunday,\r\n            \"W\": formatWeekNumberMonday,\r\n            \"x\": null,\r\n            \"X\": null,\r\n            \"y\": formatYear,\r\n            \"Y\": formatFullYear,\r\n            \"Z\": formatZone,\r\n            \"%\": formatLiteralPercent\r\n        };\r\n\r\n        var utcFormats = {\r\n            \"a\": formatUTCShortWeekday,\r\n            \"A\": formatUTCWeekday,\r\n            \"b\": formatUTCShortMonth,\r\n            \"B\": formatUTCMonth,\r\n            \"c\": null,\r\n            \"d\": formatUTCDayOfMonth,\r\n            \"e\": formatUTCDayOfMonth,\r\n            \"f\": formatUTCMicroseconds,\r\n            \"H\": formatUTCHour24,\r\n            \"I\": formatUTCHour12,\r\n            \"j\": formatUTCDayOfYear,\r\n            \"L\": formatUTCMilliseconds,\r\n            \"m\": formatUTCMonthNumber,\r\n            \"M\": formatUTCMinutes,\r\n            \"p\": formatUTCPeriod,\r\n            \"Q\": formatUnixTimestamp,\r\n            \"s\": formatUnixTimestampSeconds,\r\n            \"S\": formatUTCSeconds,\r\n            \"u\": formatUTCWeekdayNumberMonday,\r\n            \"U\": formatUTCWeekNumberSunday,\r\n            \"V\": formatUTCWeekNumberISO,\r\n            \"w\": formatUTCWeekdayNumberSunday,\r\n            \"W\": formatUTCWeekNumberMonday,\r\n            \"x\": null,\r\n            \"X\": null,\r\n            \"y\": formatUTCYear,\r\n            \"Y\": formatUTCFullYear,\r\n            \"Z\": formatUTCZone,\r\n            \"%\": formatLiteralPercent\r\n        };\r\n\r\n        var parses = {\r\n            \"a\": parseShortWeekday,\r\n            \"A\": parseWeekday,\r\n            \"b\": parseShortMonth,\r\n            \"B\": parseMonth,\r\n            \"c\": parseLocaleDateTime,\r\n            \"d\": parseDayOfMonth,\r\n            \"e\": parseDayOfMonth,\r\n            \"f\": parseMicroseconds,\r\n            \"H\": parseHour24,\r\n            \"I\": parseHour24,\r\n            \"j\": parseDayOfYear,\r\n            \"L\": parseMilliseconds,\r\n            \"m\": parseMonthNumber,\r\n            \"M\": parseMinutes,\r\n            \"p\": parsePeriod,\r\n            \"Q\": parseUnixTimestamp,\r\n            \"s\": parseUnixTimestampSeconds,\r\n            \"S\": parseSeconds,\r\n            \"u\": parseWeekdayNumberMonday,\r\n            \"U\": parseWeekNumberSunday,\r\n            \"V\": parseWeekNumberISO,\r\n            \"w\": parseWeekdayNumberSunday,\r\n            \"W\": parseWeekNumberMonday,\r\n            \"x\": parseLocaleDate,\r\n            \"X\": parseLocaleTime,\r\n            \"y\": parseYear,\r\n            \"Y\": parseFullYear,\r\n            \"Z\": parseZone,\r\n            \"%\": parseLiteralPercent\r\n        };\r\n\r\n        // These recursive directive definitions must be deferred.\r\n        formats.x = newFormat(locale_date, formats);\r\n        formats.X = newFormat(locale_time, formats);\r\n        formats.c = newFormat(locale_dateTime, formats);\r\n        utcFormats.x = newFormat(locale_date, utcFormats);\r\n        utcFormats.X = newFormat(locale_time, utcFormats);\r\n        utcFormats.c = newFormat(locale_dateTime, utcFormats);\r\n\r\n        function newFormat(specifier, formats) {\r\n            return function(date) {\r\n                var string = [],\r\n                    i = -1,\r\n                    j = 0,\r\n                    n = specifier.length,\r\n                    c,\r\n                    pad,\r\n                    format;\r\n\r\n                if (!(date instanceof Date)) date = new Date(+date);\r\n\r\n                while (++i < n) {\r\n                    if (specifier.charCodeAt(i) === 37) {\r\n                        string.push(specifier.slice(j, i));\r\n                        if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\r\n                        else pad = c === \"e\" ? \" \" : \"0\";\r\n                        if (format = formats[c]) c = format(date, pad);\r\n                        string.push(c);\r\n                        j = i + 1;\r\n                    }\r\n                }\r\n\r\n                string.push(specifier.slice(j, i));\r\n                return string.join(\"\");\r\n            };\r\n        }\r\n\r\n        function newParse(specifier, newDate) {\r\n            return function(string) {\r\n                var d = newYear(1900),\r\n                    i = parseSpecifier(d, specifier, string += \"\", 0),\r\n                    week, day$$;\r\n                if (i != string.length) return null;\r\n\r\n                // If a UNIX timestamp is specified, return it.\r\n                if (\"Q\" in d) return new Date(d.Q);\r\n\r\n                // The am-pm flag is 0 for AM, and 1 for PM.\r\n                if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\r\n\r\n                // Convert day-of-week and week-of-year to day-of-year.\r\n                if (\"V\" in d) {\r\n                    if (d.V < 1 || d.V > 53) return null;\r\n                    if (!(\"w\" in d)) d.w = 1;\r\n                    if (\"Z\" in d) {\r\n                        week = utcDate(newYear(d.y)), day$$ = week.getUTCDay();\r\n                        week = day$$ > 4 || day$$ === 0 ? utcMonday.ceil(week) : utcMonday(week);\r\n                        week = utcDay.offset(week, (d.V - 1) * 7);\r\n                        d.y = week.getUTCFullYear();\r\n                        d.m = week.getUTCMonth();\r\n                        d.d = week.getUTCDate() + (d.w + 6) % 7;\r\n                    } else {\r\n                        week = newDate(newYear(d.y)), day$$ = week.getDay();\r\n                        week = day$$ > 4 || day$$ === 0 ? timeMonday.ceil(week) : timeMonday(week);\r\n                        week = day.offset(week, (d.V - 1) * 7);\r\n                        d.y = week.getFullYear();\r\n                        d.m = week.getMonth();\r\n                        d.d = week.getDate() + (d.w + 6) % 7;\r\n                    }\r\n                } else if (\"W\" in d || \"U\" in d) {\r\n                    if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\r\n                    day$$ = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\r\n                    d.m = 0;\r\n                    d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$ + 5) % 7 : d.w + d.U * 7 - (day$$ + 6) % 7;\r\n                }\r\n\r\n                // If a time zone is specified, all fields are interpreted as UTC and then\r\n                // offset according to the specified time zone.\r\n                if (\"Z\" in d) {\r\n                    d.H += d.Z / 100 | 0;\r\n                    d.M += d.Z % 100;\r\n                    return utcDate(d);\r\n                }\r\n\r\n                // Otherwise, all fields are in local time.\r\n                return newDate(d);\r\n            };\r\n        }\r\n\r\n        function parseSpecifier(d, specifier, string, j) {\r\n            var i = 0,\r\n                n = specifier.length,\r\n                m = string.length,\r\n                c,\r\n                parse;\r\n\r\n            while (i < n) {\r\n                if (j >= m) return -1;\r\n                c = specifier.charCodeAt(i++);\r\n                if (c === 37) {\r\n                    c = specifier.charAt(i++);\r\n                    parse = parses[c in pads ? specifier.charAt(i++) : c];\r\n                    if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\r\n                } else if (c != string.charCodeAt(j++)) {\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            return j;\r\n        }\r\n\r\n        function parsePeriod(d, string, i) {\r\n            var n = periodRe.exec(string.slice(i));\r\n            return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\r\n        }\r\n\r\n        function parseShortWeekday(d, string, i) {\r\n            var n = shortWeekdayRe.exec(string.slice(i));\r\n            return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\r\n        }\r\n\r\n        function parseWeekday(d, string, i) {\r\n            var n = weekdayRe.exec(string.slice(i));\r\n            return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\r\n        }\r\n\r\n        function parseShortMonth(d, string, i) {\r\n            var n = shortMonthRe.exec(string.slice(i));\r\n            return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\r\n        }\r\n\r\n        function parseMonth(d, string, i) {\r\n            var n = monthRe.exec(string.slice(i));\r\n            return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\r\n        }\r\n\r\n        function parseLocaleDateTime(d, string, i) {\r\n            return parseSpecifier(d, locale_dateTime, string, i);\r\n        }\r\n\r\n        function parseLocaleDate(d, string, i) {\r\n            return parseSpecifier(d, locale_date, string, i);\r\n        }\r\n\r\n        function parseLocaleTime(d, string, i) {\r\n            return parseSpecifier(d, locale_time, string, i);\r\n        }\r\n\r\n        function formatShortWeekday(d) {\r\n            return locale_shortWeekdays[d.getDay()];\r\n        }\r\n\r\n        function formatWeekday(d) {\r\n            return locale_weekdays[d.getDay()];\r\n        }\r\n\r\n        function formatShortMonth(d) {\r\n            return locale_shortMonths[d.getMonth()];\r\n        }\r\n\r\n        function formatMonth(d) {\r\n            return locale_months[d.getMonth()];\r\n        }\r\n\r\n        function formatPeriod(d) {\r\n            return locale_periods[+(d.getHours() >= 12)];\r\n        }\r\n\r\n        function formatUTCShortWeekday(d) {\r\n            return locale_shortWeekdays[d.getUTCDay()];\r\n        }\r\n\r\n        function formatUTCWeekday(d) {\r\n            return locale_weekdays[d.getUTCDay()];\r\n        }\r\n\r\n        function formatUTCShortMonth(d) {\r\n            return locale_shortMonths[d.getUTCMonth()];\r\n        }\r\n\r\n        function formatUTCMonth(d) {\r\n            return locale_months[d.getUTCMonth()];\r\n        }\r\n\r\n        function formatUTCPeriod(d) {\r\n            return locale_periods[+(d.getUTCHours() >= 12)];\r\n        }\r\n\r\n        return {\r\n            format: function(specifier) {\r\n                var f = newFormat(specifier += \"\", formats);\r\n                f.toString = function() { return specifier; };\r\n                return f;\r\n            },\r\n            parse: function(specifier) {\r\n                var p = newParse(specifier += \"\", localDate);\r\n                p.toString = function() { return specifier; };\r\n                return p;\r\n            },\r\n            utcFormat: function(specifier) {\r\n                var f = newFormat(specifier += \"\", utcFormats);\r\n                f.toString = function() { return specifier; };\r\n                return f;\r\n            },\r\n            utcParse: function(specifier) {\r\n                var p = newParse(specifier, utcDate);\r\n                p.toString = function() { return specifier; };\r\n                return p;\r\n            }\r\n        };\r\n    }\r\n\r\n    var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\r\n    var numberRe = /^\\s*\\d+/;\r\n    var percentRe = /^%/;\r\n    var requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\r\n    function pad(value, fill, width) {\r\n        var sign = value < 0 ? \"-\" : \"\",\r\n            string = (sign ? -value : value) + \"\",\r\n            length = string.length;\r\n        return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\r\n    }\r\n\r\n    function requote(s) {\r\n        return s.replace(requoteRe, \"\\\\$&\");\r\n    }\r\n\r\n    function formatRe(names) {\r\n        return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\r\n    }\r\n\r\n    function formatLookup(names) {\r\n        var map = {}, i = -1, n = names.length;\r\n        while (++i < n) map[names[i].toLowerCase()] = i;\r\n        return map;\r\n    }\r\n\r\n    function parseWeekdayNumberSunday(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 1));\r\n        return n ? (d.w = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseWeekdayNumberMonday(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 1));\r\n        return n ? (d.u = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseWeekNumberSunday(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.U = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseWeekNumberISO(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.V = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseWeekNumberMonday(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.W = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseFullYear(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 4));\r\n        return n ? (d.y = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseYear(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseZone(d, string, i) {\r\n        var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\r\n        return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseMonthNumber(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseDayOfMonth(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.d = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseDayOfYear(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 3));\r\n        return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseHour24(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.H = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseMinutes(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.M = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseSeconds(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 2));\r\n        return n ? (d.S = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseMilliseconds(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 3));\r\n        return n ? (d.L = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseMicroseconds(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i, i + 6));\r\n        return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseLiteralPercent(d, string, i) {\r\n        var n = percentRe.exec(string.slice(i, i + 1));\r\n        return n ? i + n[0].length : -1;\r\n    }\r\n\r\n    function parseUnixTimestamp(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i));\r\n        return n ? (d.Q = +n[0], i + n[0].length) : -1;\r\n    }\r\n\r\n    function parseUnixTimestampSeconds(d, string, i) {\r\n        var n = numberRe.exec(string.slice(i));\r\n        return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\r\n    }\r\n\r\n    function formatDayOfMonth(d, p) {\r\n        return pad(d.getDate(), p, 2);\r\n    }\r\n\r\n    function formatHour24(d, p) {\r\n        return pad(d.getHours(), p, 2);\r\n    }\r\n\r\n    function formatHour12(d, p) {\r\n        return pad(d.getHours() % 12 || 12, p, 2);\r\n    }\r\n\r\n    function formatDayOfYear(d, p) {\r\n        return pad(1 + day.count(year(d), d), p, 3);\r\n    }\r\n\r\n    function formatMilliseconds(d, p) {\r\n        return pad(d.getMilliseconds(), p, 3);\r\n    }\r\n\r\n    function formatMicroseconds(d, p) {\r\n        return formatMilliseconds(d, p) + \"000\";\r\n    }\r\n\r\n    function formatMonthNumber(d, p) {\r\n        return pad(d.getMonth() + 1, p, 2);\r\n    }\r\n\r\n    function formatMinutes(d, p) {\r\n        return pad(d.getMinutes(), p, 2);\r\n    }\r\n\r\n    function formatSeconds(d, p) {\r\n        return pad(d.getSeconds(), p, 2);\r\n    }\r\n\r\n    function formatWeekdayNumberMonday(d) {\r\n        var day = d.getDay();\r\n        return day === 0 ? 7 : day;\r\n    }\r\n\r\n    function formatWeekNumberSunday(d, p) {\r\n        return pad(timeSunday.count(year(d), d), p, 2);\r\n    }\r\n\r\n    function formatWeekNumberISO(d, p) {\r\n        var day = d.getDay();\r\n        d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\r\n        return pad(timeThursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\r\n    }\r\n\r\n    function formatWeekdayNumberSunday(d) {\r\n        return d.getDay();\r\n    }\r\n\r\n    function formatWeekNumberMonday(d, p) {\r\n        return pad(timeMonday.count(year(d), d), p, 2);\r\n    }\r\n\r\n    function formatYear(d, p) {\r\n        return pad(d.getFullYear() % 100, p, 2);\r\n    }\r\n\r\n    function formatFullYear(d, p) {\r\n        return pad(d.getFullYear() % 10000, p, 4);\r\n    }\r\n\r\n    function formatZone(d) {\r\n        var z = d.getTimezoneOffset();\r\n        return (z > 0 ? \"-\" : (z *= -1, \"+\"))\r\n            + pad(z / 60 | 0, \"0\", 2)\r\n            + pad(z % 60, \"0\", 2);\r\n    }\r\n\r\n    function formatUTCDayOfMonth(d, p) {\r\n        return pad(d.getUTCDate(), p, 2);\r\n    }\r\n\r\n    function formatUTCHour24(d, p) {\r\n        return pad(d.getUTCHours(), p, 2);\r\n    }\r\n\r\n    function formatUTCHour12(d, p) {\r\n        return pad(d.getUTCHours() % 12 || 12, p, 2);\r\n    }\r\n\r\n    function formatUTCDayOfYear(d, p) {\r\n        return pad(1 + utcDay.count(utcYear(d), d), p, 3);\r\n    }\r\n\r\n    function formatUTCMilliseconds(d, p) {\r\n        return pad(d.getUTCMilliseconds(), p, 3);\r\n    }\r\n\r\n    function formatUTCMicroseconds(d, p) {\r\n        return formatUTCMilliseconds(d, p) + \"000\";\r\n    }\r\n\r\n    function formatUTCMonthNumber(d, p) {\r\n        return pad(d.getUTCMonth() + 1, p, 2);\r\n    }\r\n\r\n    function formatUTCMinutes(d, p) {\r\n        return pad(d.getUTCMinutes(), p, 2);\r\n    }\r\n\r\n    function formatUTCSeconds(d, p) {\r\n        return pad(d.getUTCSeconds(), p, 2);\r\n    }\r\n\r\n    function formatUTCWeekdayNumberMonday(d) {\r\n        var dow = d.getUTCDay();\r\n        return dow === 0 ? 7 : dow;\r\n    }\r\n\r\n    function formatUTCWeekNumberSunday(d, p) {\r\n        return pad(utcWeek.count(utcYear(d), d), p, 2);\r\n    }\r\n\r\n    function formatUTCWeekNumberISO(d, p) {\r\n        var day = d.getUTCDay();\r\n        d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\r\n        return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\r\n    }\r\n\r\n    function formatUTCWeekdayNumberSunday(d) {\r\n        return d.getUTCDay();\r\n    }\r\n\r\n    function formatUTCWeekNumberMonday(d, p) {\r\n        return pad(utcMonday.count(utcYear(d), d), p, 2);\r\n    }\r\n\r\n    function formatUTCYear(d, p) {\r\n        return pad(d.getUTCFullYear() % 100, p, 2);\r\n    }\r\n\r\n    function formatUTCFullYear(d, p) {\r\n        return pad(d.getUTCFullYear() % 10000, p, 4);\r\n    }\r\n\r\n    function formatUTCZone() {\r\n        return \"+0000\";\r\n    }\r\n\r\n    function formatLiteralPercent() {\r\n        return \"%\";\r\n    }\r\n\r\n    function formatUnixTimestamp(d) {\r\n        return +d;\r\n    }\r\n\r\n    function formatUnixTimestampSeconds(d) {\r\n        return Math.floor(+d / 1000);\r\n    }\r\n\r\n    var locale$1;\r\n    var timeFormat;\r\n    var timeParse;\r\n    var utcFormat;\r\n    var utcParse;\r\n\r\n    defaultLocale$1({\r\n        dateTime: \"%x, %X\",\r\n        date: \"%-m/%-d/%Y\",\r\n        time: \"%-I:%M:%S %p\",\r\n        periods: [\"AM\", \"PM\"],\r\n        days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n        shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n        months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n        shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    });\r\n\r\n    function defaultLocale$1(definition) {\r\n        locale$1 = formatLocale$1(definition);\r\n        timeFormat = locale$1.format;\r\n        timeParse = locale$1.parse;\r\n        utcFormat = locale$1.utcFormat;\r\n        utcParse = locale$1.utcParse;\r\n        return locale$1;\r\n    }\r\n\r\n    var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\r\n\r\n    function formatIsoNative(date) {\r\n        return date.toISOString();\r\n    }\r\n\r\n    var formatIso = Date.prototype.toISOString\r\n        ? formatIsoNative\r\n        : utcFormat(isoSpecifier);\r\n\r\n    function parseIsoNative(string) {\r\n        var date = new Date(string);\r\n        return isNaN(date) ? null : date;\r\n    }\r\n\r\n    var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\r\n        ? parseIsoNative\r\n        : utcParse(isoSpecifier);\r\n\r\n    var durationSecond = 1000;\r\n    var durationMinute = durationSecond * 60;\r\n    var durationHour = durationMinute * 60;\r\n    var durationDay = durationHour * 24;\r\n    var durationWeek = durationDay * 7;\r\n    var durationMonth = durationDay * 30;\r\n    var durationYear = durationDay * 365;\r\n    function date$1(t) {\r\n        return new Date(t);\r\n    }\r\n\r\n    function number$2(t) {\r\n        return t instanceof Date ? +t : +new Date(+t);\r\n    }\r\n\r\n    function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\r\n        var scale = continuous(deinterpolate, interpolateNumber),\r\n            invert = scale.invert,\r\n            domain = scale.domain;\r\n\r\n        var formatMillisecond = format(\".%L\"),\r\n            formatSecond = format(\":%S\"),\r\n            formatMinute = format(\"%I:%M\"),\r\n            formatHour = format(\"%I %p\"),\r\n            formatDay = format(\"%a %d\"),\r\n            formatWeek = format(\"%b %d\"),\r\n            formatMonth = format(\"%B\"),\r\n            formatYear = format(\"%Y\");\r\n\r\n        var tickIntervals = [\r\n            [second,  1,      durationSecond],\r\n            [second,  5,  5 * durationSecond],\r\n            [second, 15, 15 * durationSecond],\r\n            [second, 30, 30 * durationSecond],\r\n            [minute,  1,      durationMinute],\r\n            [minute,  5,  5 * durationMinute],\r\n            [minute, 15, 15 * durationMinute],\r\n            [minute, 30, 30 * durationMinute],\r\n            [  hour,  1,      durationHour  ],\r\n            [  hour,  3,  3 * durationHour  ],\r\n            [  hour,  6,  6 * durationHour  ],\r\n            [  hour, 12, 12 * durationHour  ],\r\n            [   day,  1,      durationDay   ],\r\n            [   day,  2,  2 * durationDay   ],\r\n            [  week,  1,      durationWeek  ],\r\n            [ month,  1,      durationMonth ],\r\n            [ month,  3,  3 * durationMonth ],\r\n            [  year,  1,      durationYear  ]\r\n        ];\r\n\r\n        function tickFormat(date) {\r\n            return (second(date) < date ? formatMillisecond\r\n                : minute(date) < date ? formatSecond\r\n                    : hour(date) < date ? formatMinute\r\n                        : day(date) < date ? formatHour\r\n                            : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\r\n                                : year(date) < date ? formatMonth\r\n                                    : formatYear)(date);\r\n        }\r\n\r\n        function tickInterval(interval, start, stop, step) {\r\n            if (interval == null) interval = 10;\r\n\r\n            // If a desired tick count is specified, pick a reasonable tick interval\r\n            // based on the extent of the domain and a rough estimate of tick size.\r\n            // Otherwise, assume interval is already a time interval and use it.\r\n            if (typeof interval === \"number\") {\r\n                var target = Math.abs(stop - start) / interval,\r\n                    i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\r\n                if (i === tickIntervals.length) {\r\n                    step = tickStep(start / durationYear, stop / durationYear, interval);\r\n                    interval = year;\r\n                } else if (i) {\r\n                    i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\r\n                    step = i[1];\r\n                    interval = i[0];\r\n                } else {\r\n                    step = tickStep(start, stop, interval);\r\n                    interval = millisecond;\r\n                }\r\n            }\r\n\r\n            return step == null ? interval : interval.every(step);\r\n        }\r\n\r\n        scale.invert = function(y) {\r\n            return new Date(invert(y));\r\n        };\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\r\n        };\r\n\r\n        scale.ticks = function(interval, step) {\r\n            var d = domain(),\r\n                t0 = d[0],\r\n                t1 = d[d.length - 1],\r\n                r = t1 < t0,\r\n                t;\r\n            if (r) t = t0, t0 = t1, t1 = t;\r\n            t = tickInterval(interval, t0, t1, step);\r\n            t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\r\n            return r ? t.reverse() : t;\r\n        };\r\n\r\n        scale.tickFormat = function(count, specifier) {\r\n            return specifier == null ? tickFormat : format(specifier);\r\n        };\r\n\r\n        scale.nice = function(interval, step) {\r\n            var d = domain();\r\n            return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\r\n                ? domain(nice(d, interval))\r\n                : scale;\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\r\n        };\r\n\r\n        return scale;\r\n    }\r\n\r\n    function time() {\r\n        return calendar(year, month, timeSunday, day, hour, minute, second, millisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\r\n    }\r\n\r\n    function utcTime() {\r\n        return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\r\n    }\r\n\r\n    function colors(s) {\r\n        return s.match(/.{6}/g).map(function(x) {\r\n            return \"#\" + x;\r\n        });\r\n    }\r\n\r\n    var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\r\n\r\n    var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\r\n\r\n    var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\r\n\r\n    var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\r\n\r\n    function csuiDefine$1(constructor, factory, prototype) {\r\n        constructor.prototype = factory.prototype = prototype;\r\n        prototype.constructor = constructor;\r\n    }\r\n\r\n    function extend$1(parent, definition) {\r\n        var prototype = Object.create(parent.prototype);\r\n        for (var key in definition) prototype[key] = definition[key];\r\n        return prototype;\r\n    }\r\n\r\n    function Color$1() {}\r\n\r\n    var darker$1 = 0.7;\r\n    var brighter$1 = 1 / darker$1;\r\n\r\n    var reI$1 = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\r\n    var reN$1 = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\r\n    var reP$1 = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\r\n    var reHex3$1 = /^#([0-9a-f]{3})$/;\r\n    var reHex6$1 = /^#([0-9a-f]{6})$/;\r\n    var reRgbInteger$1 = new RegExp(\"^rgb\\\\(\" + [reI$1, reI$1, reI$1] + \"\\\\)$\");\r\n    var reRgbPercent$1 = new RegExp(\"^rgb\\\\(\" + [reP$1, reP$1, reP$1] + \"\\\\)$\");\r\n    var reRgbaInteger$1 = new RegExp(\"^rgba\\\\(\" + [reI$1, reI$1, reI$1, reN$1] + \"\\\\)$\");\r\n    var reRgbaPercent$1 = new RegExp(\"^rgba\\\\(\" + [reP$1, reP$1, reP$1, reN$1] + \"\\\\)$\");\r\n    var reHslPercent$1 = new RegExp(\"^hsl\\\\(\" + [reN$1, reP$1, reP$1] + \"\\\\)$\");\r\n    var reHslaPercent$1 = new RegExp(\"^hsla\\\\(\" + [reN$1, reP$1, reP$1, reN$1] + \"\\\\)$\");\r\n    var named$1 = {\r\n        aliceblue: 0xf0f8ff,\r\n        antiquewhite: 0xfaebd7,\r\n        aqua: 0x00ffff,\r\n        aquamarine: 0x7fffd4,\r\n        azure: 0xf0ffff,\r\n        beige: 0xf5f5dc,\r\n        bisque: 0xffe4c4,\r\n        black: 0x000000,\r\n        blanchedalmond: 0xffebcd,\r\n        blue: 0x0000ff,\r\n        blueviolet: 0x8a2be2,\r\n        brown: 0xa52a2a,\r\n        burlywood: 0xdeb887,\r\n        cadetblue: 0x5f9ea0,\r\n        chartreuse: 0x7fff00,\r\n        chocolate: 0xd2691e,\r\n        coral: 0xff7f50,\r\n        cornflowerblue: 0x6495ed,\r\n        cornsilk: 0xfff8dc,\r\n        crimson: 0xdc143c,\r\n        cyan: 0x00ffff,\r\n        darkblue: 0x00008b,\r\n        darkcyan: 0x008b8b,\r\n        darkgoldenrod: 0xb8860b,\r\n        darkgray: 0xa9a9a9,\r\n        darkgreen: 0x006400,\r\n        darkgrey: 0xa9a9a9,\r\n        darkkhaki: 0xbdb76b,\r\n        darkmagenta: 0x8b008b,\r\n        darkolivegreen: 0x556b2f,\r\n        darkorange: 0xff8c00,\r\n        darkorchid: 0x9932cc,\r\n        darkred: 0x8b0000,\r\n        darksalmon: 0xe9967a,\r\n        darkseagreen: 0x8fbc8f,\r\n        darkslateblue: 0x483d8b,\r\n        darkslategray: 0x2f4f4f,\r\n        darkslategrey: 0x2f4f4f,\r\n        darkturquoise: 0x00ced1,\r\n        darkviolet: 0x9400d3,\r\n        deeppink: 0xff1493,\r\n        deepskyblue: 0x00bfff,\r\n        dimgray: 0x696969,\r\n        dimgrey: 0x696969,\r\n        dodgerblue: 0x1e90ff,\r\n        firebrick: 0xb22222,\r\n        floralwhite: 0xfffaf0,\r\n        forestgreen: 0x228b22,\r\n        fuchsia: 0xff00ff,\r\n        gainsboro: 0xdcdcdc,\r\n        ghostwhite: 0xf8f8ff,\r\n        gold: 0xffd700,\r\n        goldenrod: 0xdaa520,\r\n        gray: 0x808080,\r\n        green: 0x008000,\r\n        greenyellow: 0xadff2f,\r\n        grey: 0x808080,\r\n        honeydew: 0xf0fff0,\r\n        hotpink: 0xff69b4,\r\n        indianred: 0xcd5c5c,\r\n        indigo: 0x4b0082,\r\n        ivory: 0xfffff0,\r\n        khaki: 0xf0e68c,\r\n        lavender: 0xe6e6fa,\r\n        lavenderblush: 0xfff0f5,\r\n        lawngreen: 0x7cfc00,\r\n        lemonchiffon: 0xfffacd,\r\n        lightblue: 0xadd8e6,\r\n        lightcoral: 0xf08080,\r\n        lightcyan: 0xe0ffff,\r\n        lightgoldenrodyellow: 0xfafad2,\r\n        lightgray: 0xd3d3d3,\r\n        lightgreen: 0x90ee90,\r\n        lightgrey: 0xd3d3d3,\r\n        lightpink: 0xffb6c1,\r\n        lightsalmon: 0xffa07a,\r\n        lightseagreen: 0x20b2aa,\r\n        lightskyblue: 0x87cefa,\r\n        lightslategray: 0x778899,\r\n        lightslategrey: 0x778899,\r\n        lightsteelblue: 0xb0c4de,\r\n        lightyellow: 0xffffe0,\r\n        lime: 0x00ff00,\r\n        limegreen: 0x32cd32,\r\n        linen: 0xfaf0e6,\r\n        magenta: 0xff00ff,\r\n        maroon: 0x800000,\r\n        mediumaquamarine: 0x66cdaa,\r\n        mediumblue: 0x0000cd,\r\n        mediumorchid: 0xba55d3,\r\n        mediumpurple: 0x9370db,\r\n        mediumseagreen: 0x3cb371,\r\n        mediumslateblue: 0x7b68ee,\r\n        mediumspringgreen: 0x00fa9a,\r\n        mediumturquoise: 0x48d1cc,\r\n        mediumvioletred: 0xc71585,\r\n        midnightblue: 0x191970,\r\n        mintcream: 0xf5fffa,\r\n        mistyrose: 0xffe4e1,\r\n        moccasin: 0xffe4b5,\r\n        navajowhite: 0xffdead,\r\n        navy: 0x000080,\r\n        oldlace: 0xfdf5e6,\r\n        olive: 0x808000,\r\n        olivedrab: 0x6b8e23,\r\n        orange: 0xffa500,\r\n        orangered: 0xff4500,\r\n        orchid: 0xda70d6,\r\n        palegoldenrod: 0xeee8aa,\r\n        palegreen: 0x98fb98,\r\n        paleturquoise: 0xafeeee,\r\n        palevioletred: 0xdb7093,\r\n        papayawhip: 0xffefd5,\r\n        peachpuff: 0xffdab9,\r\n        peru: 0xcd853f,\r\n        pink: 0xffc0cb,\r\n        plum: 0xdda0dd,\r\n        powderblue: 0xb0e0e6,\r\n        purple: 0x800080,\r\n        rebeccapurple: 0x663399,\r\n        red: 0xff0000,\r\n        rosybrown: 0xbc8f8f,\r\n        royalblue: 0x4169e1,\r\n        saddlebrown: 0x8b4513,\r\n        salmon: 0xfa8072,\r\n        sandybrown: 0xf4a460,\r\n        seagreen: 0x2e8b57,\r\n        seashell: 0xfff5ee,\r\n        sienna: 0xa0522d,\r\n        silver: 0xc0c0c0,\r\n        skyblue: 0x87ceeb,\r\n        slateblue: 0x6a5acd,\r\n        slategray: 0x708090,\r\n        slategrey: 0x708090,\r\n        snow: 0xfffafa,\r\n        springgreen: 0x00ff7f,\r\n        steelblue: 0x4682b4,\r\n        tan: 0xd2b48c,\r\n        teal: 0x008080,\r\n        thistle: 0xd8bfd8,\r\n        tomato: 0xff6347,\r\n        turquoise: 0x40e0d0,\r\n        violet: 0xee82ee,\r\n        wheat: 0xf5deb3,\r\n        white: 0xffffff,\r\n        whitesmoke: 0xf5f5f5,\r\n        yellow: 0xffff00,\r\n        yellowgreen: 0x9acd32\r\n    };\r\n\r\n    csuiDefine$1(Color$1, color$1, {\r\n        displayable: function() {\r\n            return this.rgb().displayable();\r\n        },\r\n        toString: function() {\r\n            return this.rgb() + \"\";\r\n        }\r\n    });\r\n\r\n    function color$1(format) {\r\n        var m;\r\n        format = (format + \"\").trim().toLowerCase();\r\n        return (m = reHex3$1.exec(format)) ? (m = parseInt(m[1], 16), new Rgb$1((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\r\n            : (m = reHex6$1.exec(format)) ? rgbn$1(parseInt(m[1], 16)) // #ff0000\r\n                : (m = reRgbInteger$1.exec(format)) ? new Rgb$1(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\r\n                    : (m = reRgbPercent$1.exec(format)) ? new Rgb$1(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\r\n                        : (m = reRgbaInteger$1.exec(format)) ? rgba$1(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\r\n                            : (m = reRgbaPercent$1.exec(format)) ? rgba$1(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\r\n                                : (m = reHslPercent$1.exec(format)) ? hsla$1(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\r\n                                    : (m = reHslaPercent$1.exec(format)) ? hsla$1(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\r\n                                        : named$1.hasOwnProperty(format) ? rgbn$1(named$1[format])\r\n                                            : format === \"transparent\" ? new Rgb$1(NaN, NaN, NaN, 0)\r\n                                                : null;\r\n    }\r\n\r\n    function rgbn$1(n) {\r\n        return new Rgb$1(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\r\n    }\r\n\r\n    function rgba$1(r, g, b, a) {\r\n        if (a <= 0) r = g = b = NaN;\r\n        return new Rgb$1(r, g, b, a);\r\n    }\r\n\r\n    function rgbConvert$1(o) {\r\n        if (!(o instanceof Color$1)) o = color$1(o);\r\n        if (!o) return new Rgb$1;\r\n        o = o.rgb();\r\n        return new Rgb$1(o.r, o.g, o.b, o.opacity);\r\n    }\r\n\r\n    function rgb(r, g, b, opacity) {\r\n        return arguments.length === 1 ? rgbConvert$1(r) : new Rgb$1(r, g, b, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Rgb$1(r, g, b, opacity) {\r\n        this.r = +r;\r\n        this.g = +g;\r\n        this.b = +b;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$1(Rgb$1, rgb, extend$1(Color$1, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter$1 : Math.pow(brighter$1, k);\r\n            return new Rgb$1(this.r * k, this.g * k, this.b * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker$1 : Math.pow(darker$1, k);\r\n            return new Rgb$1(this.r * k, this.g * k, this.b * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            return this;\r\n        },\r\n        displayable: function() {\r\n            return (0 <= this.r && this.r <= 255)\r\n                && (0 <= this.g && this.g <= 255)\r\n                && (0 <= this.b && this.b <= 255)\r\n                && (0 <= this.opacity && this.opacity <= 1);\r\n        },\r\n        toString: function() {\r\n            var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\r\n            return (a === 1 ? \"rgb(\" : \"rgba(\")\r\n                + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\r\n                + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\r\n                + Math.max(0, Math.min(255, Math.round(this.b) || 0))\r\n                + (a === 1 ? \")\" : \", \" + a + \")\");\r\n        }\r\n    }));\r\n\r\n    function hsla$1(h, s, l, a) {\r\n        if (a <= 0) h = s = l = NaN;\r\n        else if (l <= 0 || l >= 1) h = s = NaN;\r\n        else if (s <= 0) h = NaN;\r\n        return new Hsl$1(h, s, l, a);\r\n    }\r\n\r\n    function hslConvert$1(o) {\r\n        if (o instanceof Hsl$1) return new Hsl$1(o.h, o.s, o.l, o.opacity);\r\n        if (!(o instanceof Color$1)) o = color$1(o);\r\n        if (!o) return new Hsl$1;\r\n        if (o instanceof Hsl$1) return o;\r\n        o = o.rgb();\r\n        var r = o.r / 255,\r\n            g = o.g / 255,\r\n            b = o.b / 255,\r\n            min = Math.min(r, g, b),\r\n            max = Math.max(r, g, b),\r\n            h = NaN,\r\n            s = max - min,\r\n            l = (max + min) / 2;\r\n        if (s) {\r\n            if (r === max) h = (g - b) / s + (g < b) * 6;\r\n            else if (g === max) h = (b - r) / s + 2;\r\n            else h = (r - g) / s + 4;\r\n            s /= l < 0.5 ? max + min : 2 - max - min;\r\n            h *= 60;\r\n        } else {\r\n            s = l > 0 && l < 1 ? 0 : h;\r\n        }\r\n        return new Hsl$1(h, s, l, o.opacity);\r\n    }\r\n\r\n    function hsl$2(h, s, l, opacity) {\r\n        return arguments.length === 1 ? hslConvert$1(h) : new Hsl$1(h, s, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Hsl$1(h, s, l, opacity) {\r\n        this.h = +h;\r\n        this.s = +s;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$1(Hsl$1, hsl$2, extend$1(Color$1, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter$1 : Math.pow(brighter$1, k);\r\n            return new Hsl$1(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker$1 : Math.pow(darker$1, k);\r\n            return new Hsl$1(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var h = this.h % 360 + (this.h < 0) * 360,\r\n                s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\r\n                l = this.l,\r\n                m2 = l + (l < 0.5 ? l : 1 - l) * s,\r\n                m1 = 2 * l - m2;\r\n            return new Rgb$1(\r\n                hsl2rgb$1(h >= 240 ? h - 240 : h + 120, m1, m2),\r\n                hsl2rgb$1(h, m1, m2),\r\n                hsl2rgb$1(h < 120 ? h + 240 : h - 120, m1, m2),\r\n                this.opacity\r\n            );\r\n        },\r\n        displayable: function() {\r\n            return (0 <= this.s && this.s <= 1 || isNaN(this.s))\r\n                && (0 <= this.l && this.l <= 1)\r\n                && (0 <= this.opacity && this.opacity <= 1);\r\n        }\r\n    }));\r\n\r\n    /* From FvD 13.37, CSS Color Module Level 3 */\r\n    function hsl2rgb$1(h, m1, m2) {\r\n        return (h < 60 ? m1 + (m2 - m1) * h / 60\r\n                : h < 180 ? m2\r\n                    : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\r\n                        : m1) * 255;\r\n    }\r\n\r\n    var deg2rad$1 = Math.PI / 180;\r\n    var rad2deg$1 = 180 / Math.PI;\r\n\r\n    var Kn$1 = 18;\r\n    var Xn$1 = 0.950470;\r\n    var Yn$1 = 1;\r\n    var Zn$1 = 1.088830;\r\n    var t0$2 = 4 / 29;\r\n    var t1$2 = 6 / 29;\r\n    var t2$1 = 3 * t1$2 * t1$2;\r\n    var t3$1 = t1$2 * t1$2 * t1$2;\r\n    function labConvert$1(o) {\r\n        if (o instanceof Lab$1) return new Lab$1(o.l, o.a, o.b, o.opacity);\r\n        if (o instanceof Hcl$1) {\r\n            var h = o.h * deg2rad$1;\r\n            return new Lab$1(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\r\n        }\r\n        if (!(o instanceof Rgb$1)) o = rgbConvert$1(o);\r\n        var b = rgb2xyz$1(o.r),\r\n            a = rgb2xyz$1(o.g),\r\n            l = rgb2xyz$1(o.b),\r\n            x = xyz2lab$1((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn$1),\r\n            y = xyz2lab$1((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn$1),\r\n            z = xyz2lab$1((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn$1);\r\n        return new Lab$1(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\r\n    }\r\n\r\n    function lab$2(l, a, b, opacity) {\r\n        return arguments.length === 1 ? labConvert$1(l) : new Lab$1(l, a, b, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Lab$1(l, a, b, opacity) {\r\n        this.l = +l;\r\n        this.a = +a;\r\n        this.b = +b;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$1(Lab$1, lab$2, extend$1(Color$1, {\r\n        brighter: function(k) {\r\n            return new Lab$1(this.l + Kn$1 * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            return new Lab$1(this.l - Kn$1 * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var y = (this.l + 16) / 116,\r\n                x = isNaN(this.a) ? y : y + this.a / 500,\r\n                z = isNaN(this.b) ? y : y - this.b / 200;\r\n            y = Yn$1 * lab2xyz$1(y);\r\n            x = Xn$1 * lab2xyz$1(x);\r\n            z = Zn$1 * lab2xyz$1(z);\r\n            return new Rgb$1(\r\n                xyz2rgb$1( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\r\n                xyz2rgb$1(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\r\n                xyz2rgb$1( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\r\n                this.opacity\r\n            );\r\n        }\r\n    }));\r\n\r\n    function xyz2lab$1(t) {\r\n        return t > t3$1 ? Math.pow(t, 1 / 3) : t / t2$1 + t0$2;\r\n    }\r\n\r\n    function lab2xyz$1(t) {\r\n        return t > t1$2 ? t * t * t : t2$1 * (t - t0$2);\r\n    }\r\n\r\n    function xyz2rgb$1(x) {\r\n        return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\r\n    }\r\n\r\n    function rgb2xyz$1(x) {\r\n        return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\r\n    }\r\n\r\n    function hclConvert$1(o) {\r\n        if (o instanceof Hcl$1) return new Hcl$1(o.h, o.c, o.l, o.opacity);\r\n        if (!(o instanceof Lab$1)) o = labConvert$1(o);\r\n        var h = Math.atan2(o.b, o.a) * rad2deg$1;\r\n        return new Hcl$1(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\r\n    }\r\n\r\n    function hcl$2(h, c, l, opacity) {\r\n        return arguments.length === 1 ? hclConvert$1(h) : new Hcl$1(h, c, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Hcl$1(h, c, l, opacity) {\r\n        this.h = +h;\r\n        this.c = +c;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$1(Hcl$1, hcl$2, extend$1(Color$1, {\r\n        brighter: function(k) {\r\n            return new Hcl$1(this.h, this.c, this.l + Kn$1 * (k == null ? 1 : k), this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            return new Hcl$1(this.h, this.c, this.l - Kn$1 * (k == null ? 1 : k), this.opacity);\r\n        },\r\n        rgb: function() {\r\n            return labConvert$1(this).rgb();\r\n        }\r\n    }));\r\n\r\n    var A$1 = -0.14861;\r\n    var B$1 = +1.78277;\r\n    var C$1 = -0.29227;\r\n    var D$1 = -0.90649;\r\n    var E$1 = +1.97294;\r\n    var ED$1 = E$1 * D$1;\r\n    var EB$1 = E$1 * B$1;\r\n    var BC_DA$1 = B$1 * C$1 - D$1 * A$1;\r\n    function cubehelixConvert$1(o) {\r\n        if (o instanceof Cubehelix$1) return new Cubehelix$1(o.h, o.s, o.l, o.opacity);\r\n        if (!(o instanceof Rgb$1)) o = rgbConvert$1(o);\r\n        var r = o.r / 255,\r\n            g = o.g / 255,\r\n            b = o.b / 255,\r\n            l = (BC_DA$1 * b + ED$1 * r - EB$1 * g) / (BC_DA$1 + ED$1 - EB$1),\r\n            bl = b - l,\r\n            k = (E$1 * (g - l) - C$1 * bl) / D$1,\r\n            s = Math.sqrt(k * k + bl * bl) / (E$1 * l * (1 - l)), // NaN if l=0 or l=1\r\n            h = s ? Math.atan2(k, bl) * rad2deg$1 - 120 : NaN;\r\n        return new Cubehelix$1(h < 0 ? h + 360 : h, s, l, o.opacity);\r\n    }\r\n\r\n    function cubehelix$4(h, s, l, opacity) {\r\n        return arguments.length === 1 ? cubehelixConvert$1(h) : new Cubehelix$1(h, s, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Cubehelix$1(h, s, l, opacity) {\r\n        this.h = +h;\r\n        this.s = +s;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$1(Cubehelix$1, cubehelix$4, extend$1(Color$1, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter$1 : Math.pow(brighter$1, k);\r\n            return new Cubehelix$1(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker$1 : Math.pow(darker$1, k);\r\n            return new Cubehelix$1(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad$1,\r\n                l = +this.l,\r\n                a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\r\n                cosh = Math.cos(h),\r\n                sinh = Math.sin(h);\r\n            return new Rgb$1(\r\n                255 * (l + a * (A$1 * cosh + B$1 * sinh)),\r\n                255 * (l + a * (C$1 * cosh + D$1 * sinh)),\r\n                255 * (l + a * (E$1 * cosh)),\r\n                this.opacity\r\n            );\r\n        }\r\n    }));\r\n\r\n    var cubehelix$3 = interpolateCubehelixLong(cubehelix$4(300, 0.5, 0.0), cubehelix$4(-240, 0.5, 1.0));\r\n\r\n    var warm = interpolateCubehelixLong(cubehelix$4(-100, 0.75, 0.35), cubehelix$4(80, 1.50, 0.8));\r\n\r\n    var cool = interpolateCubehelixLong(cubehelix$4(260, 0.75, 0.35), cubehelix$4(80, 1.50, 0.8));\r\n\r\n    var rainbow = cubehelix$4();\r\n\r\n    function rainbow$1(t) {\r\n        if (t < 0 || t > 1) t -= Math.floor(t);\r\n        var ts = Math.abs(t - 0.5);\r\n        rainbow.h = 360 * t - 100;\r\n        rainbow.s = 1.5 - 1.5 * ts;\r\n        rainbow.l = 0.8 - 0.9 * ts;\r\n        return rainbow + \"\";\r\n    }\r\n\r\n    function ramp(range) {\r\n        var n = range.length;\r\n        return function(t) {\r\n            return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\r\n        };\r\n    }\r\n\r\n    var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\r\n\r\n    var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\r\n\r\n    var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\r\n\r\n    var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\r\n\r\n    function sequential(interpolator) {\r\n        var x0 = 0,\r\n            x1 = 1,\r\n            clamp = false;\r\n\r\n        function scale(x) {\r\n            var t = (x - x0) / (x1 - x0);\r\n            return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\r\n        }\r\n\r\n        scale.domain = function(_) {\r\n            return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\r\n        };\r\n\r\n        scale.clamp = function(_) {\r\n            return arguments.length ? (clamp = !!_, scale) : clamp;\r\n        };\r\n\r\n        scale.interpolator = function(_) {\r\n            return arguments.length ? (interpolator = _, scale) : interpolator;\r\n        };\r\n\r\n        scale.copy = function() {\r\n            return sequential(interpolator).domain([x0, x1]).clamp(clamp);\r\n        };\r\n\r\n        return linearish(scale);\r\n    }\r\n\r\n    var pi = Math.PI;\r\n    var tau = 2 * pi;\r\n    var epsilon = 1e-6;\r\n    var tauEpsilon = tau - epsilon;\r\n    function Path() {\r\n        this._x0 = this._y0 = // start of current subpath\r\n            this._x1 = this._y1 = null; // end of current subpath\r\n        this._ = \"\";\r\n    }\r\n\r\n    function path() {\r\n        return new Path;\r\n    }\r\n\r\n    Path.prototype = path.prototype = {\r\n        constructor: Path,\r\n        moveTo: function(x, y) {\r\n            this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\r\n        },\r\n        closePath: function() {\r\n            if (this._x1 !== null) {\r\n                this._x1 = this._x0, this._y1 = this._y0;\r\n                this._ += \"Z\";\r\n            }\r\n        },\r\n        lineTo: function(x, y) {\r\n            this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\r\n        },\r\n        quadraticCurveTo: function(x1, y1, x, y) {\r\n            this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\r\n        },\r\n        bezierCurveTo: function(x1, y1, x2, y2, x, y) {\r\n            this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\r\n        },\r\n        arcTo: function(x1, y1, x2, y2, r) {\r\n            x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\r\n            var x0 = this._x1,\r\n                y0 = this._y1,\r\n                x21 = x2 - x1,\r\n                y21 = y2 - y1,\r\n                x01 = x0 - x1,\r\n                y01 = y0 - y1,\r\n                l01_2 = x01 * x01 + y01 * y01;\r\n\r\n            // Is the radius negative? Error.\r\n            if (r < 0) throw new Error(\"negative radius: \" + r);\r\n\r\n            // Is this path empty? Move to (x1,y1).\r\n            if (this._x1 === null) {\r\n                this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\r\n            }\r\n\r\n            // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\r\n            else if (!(l01_2 > epsilon)) {}\r\n\r\n            // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\r\n            // Equivalently, is (x1,y1) coincident with (x2,y2)?\r\n            // Or, is the radius zero? Line to (x1,y1).\r\n            else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\r\n                this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\r\n            }\r\n\r\n            // Otherwise, draw an arc!\r\n            else {\r\n                var x20 = x2 - x0,\r\n                    y20 = y2 - y0,\r\n                    l21_2 = x21 * x21 + y21 * y21,\r\n                    l20_2 = x20 * x20 + y20 * y20,\r\n                    l21 = Math.sqrt(l21_2),\r\n                    l01 = Math.sqrt(l01_2),\r\n                    l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\r\n                    t01 = l / l01,\r\n                    t21 = l / l21;\r\n\r\n                // If the start tangent is not coincident with (x0,y0), line to.\r\n                if (Math.abs(t01 - 1) > epsilon) {\r\n                    this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\r\n                }\r\n\r\n                this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\r\n            }\r\n        },\r\n        arc: function(x, y, r, a0, a1, ccw) {\r\n            x = +x, y = +y, r = +r;\r\n            var dx = r * Math.cos(a0),\r\n                dy = r * Math.sin(a0),\r\n                x0 = x + dx,\r\n                y0 = y + dy,\r\n                cw = 1 ^ ccw,\r\n                da = ccw ? a0 - a1 : a1 - a0;\r\n\r\n            // Is the radius negative? Error.\r\n            if (r < 0) throw new Error(\"negative radius: \" + r);\r\n\r\n            // Is this path empty? Move to (x0,y0).\r\n            if (this._x1 === null) {\r\n                this._ += \"M\" + x0 + \",\" + y0;\r\n            }\r\n\r\n            // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\r\n            else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\r\n                this._ += \"L\" + x0 + \",\" + y0;\r\n            }\r\n\r\n            // Is this arc empty? We’re done.\r\n            if (!r) return;\r\n\r\n            // Does the angle go the wrong way? Flip the direction.\r\n            if (da < 0) da = da % tau + tau;\r\n\r\n            // Is this a complete circle? Draw two arcs to complete the circle.\r\n            if (da > tauEpsilon) {\r\n                this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\r\n            }\r\n\r\n            // Is this arc non-empty? Draw an arc!\r\n            else if (da > epsilon) {\r\n                this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\r\n            }\r\n        },\r\n        rect: function(x, y, w, h) {\r\n            this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\r\n        },\r\n        toString: function() {\r\n            return this._;\r\n        }\r\n    };\r\n\r\n    function constant$4(x) {\r\n        return function constant() {\r\n            return x;\r\n        };\r\n    }\r\n\r\n    var abs = Math.abs;\r\n    var atan2 = Math.atan2;\r\n    var cos = Math.cos;\r\n    var max$1 = Math.max;\r\n    var min$1 = Math.min;\r\n    var sin = Math.sin;\r\n    var sqrt$1 = Math.sqrt;\r\n\r\n    var epsilon$1 = 1e-12;\r\n    var pi$1 = Math.PI;\r\n    var halfPi = pi$1 / 2;\r\n    var tau$1 = 2 * pi$1;\r\n\r\n    function acos(x) {\r\n        return x > 1 ? 0 : x < -1 ? pi$1 : Math.acos(x);\r\n    }\r\n\r\n    function asin(x) {\r\n        return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\r\n    }\r\n\r\n    function arcInnerRadius(d) {\r\n        return d.innerRadius;\r\n    }\r\n\r\n    function arcOuterRadius(d) {\r\n        return d.outerRadius;\r\n    }\r\n\r\n    function arcStartAngle(d) {\r\n        return d.startAngle;\r\n    }\r\n\r\n    function arcEndAngle(d) {\r\n        return d.endAngle;\r\n    }\r\n\r\n    function arcPadAngle(d) {\r\n        return d && d.padAngle; // Note: optional!\r\n    }\r\n\r\n    function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n        var x10 = x1 - x0, y10 = y1 - y0,\r\n            x32 = x3 - x2, y32 = y3 - y2,\r\n            t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\r\n        return [x0 + t * x10, y0 + t * y10];\r\n    }\r\n\r\n    // Compute perpendicular offset line of length rc.\r\n    // http://mathworld.wolfram.com/Circle-LineIntersection.html\r\n    function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\r\n        var x01 = x0 - x1,\r\n            y01 = y0 - y1,\r\n            lo = (cw ? rc : -rc) / sqrt$1(x01 * x01 + y01 * y01),\r\n            ox = lo * y01,\r\n            oy = -lo * x01,\r\n            x11 = x0 + ox,\r\n            y11 = y0 + oy,\r\n            x10 = x1 + ox,\r\n            y10 = y1 + oy,\r\n            x00 = (x11 + x10) / 2,\r\n            y00 = (y11 + y10) / 2,\r\n            dx = x10 - x11,\r\n            dy = y10 - y11,\r\n            d2 = dx * dx + dy * dy,\r\n            r = r1 - rc,\r\n            D = x11 * y10 - x10 * y11,\r\n            d = (dy < 0 ? -1 : 1) * sqrt$1(max$1(0, r * r * d2 - D * D)),\r\n            cx0 = (D * dy - dx * d) / d2,\r\n            cy0 = (-D * dx - dy * d) / d2,\r\n            cx1 = (D * dy + dx * d) / d2,\r\n            cy1 = (-D * dx + dy * d) / d2,\r\n            dx0 = cx0 - x00,\r\n            dy0 = cy0 - y00,\r\n            dx1 = cx1 - x00,\r\n            dy1 = cy1 - y00;\r\n\r\n        // Pick the closer of the two intersection points.\r\n        // TODO Is there a faster way to determine which intersection to use?\r\n        if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\r\n\r\n        return {\r\n            cx: cx0,\r\n            cy: cy0,\r\n            x01: -ox,\r\n            y01: -oy,\r\n            x11: cx0 * (r1 / r - 1),\r\n            y11: cy0 * (r1 / r - 1)\r\n        };\r\n    }\r\n\r\n    function arc() {\r\n        var innerRadius = arcInnerRadius,\r\n            outerRadius = arcOuterRadius,\r\n            cornerRadius = constant$4(0),\r\n            padRadius = null,\r\n            startAngle = arcStartAngle,\r\n            endAngle = arcEndAngle,\r\n            padAngle = arcPadAngle,\r\n            context = null;\r\n\r\n        function arc() {\r\n            var buffer,\r\n                r,\r\n                r0 = +innerRadius.apply(this, arguments),\r\n                r1 = +outerRadius.apply(this, arguments),\r\n                a0 = startAngle.apply(this, arguments) - halfPi,\r\n                a1 = endAngle.apply(this, arguments) - halfPi,\r\n                da = abs(a1 - a0),\r\n                cw = a1 > a0;\r\n\r\n            if (!context) context = buffer = path();\r\n\r\n            // Ensure that the outer radius is always larger than the inner radius.\r\n            if (r1 < r0) r = r1, r1 = r0, r0 = r;\r\n\r\n            // Is it a point?\r\n            if (!(r1 > epsilon$1)) context.moveTo(0, 0);\r\n\r\n            // Or is it a circle or annulus?\r\n            else if (da > tau$1 - epsilon$1) {\r\n                context.moveTo(r1 * cos(a0), r1 * sin(a0));\r\n                context.arc(0, 0, r1, a0, a1, !cw);\r\n                if (r0 > epsilon$1) {\r\n                    context.moveTo(r0 * cos(a1), r0 * sin(a1));\r\n                    context.arc(0, 0, r0, a1, a0, cw);\r\n                }\r\n            }\r\n\r\n            // Or is it a circular or annular sector?\r\n            else {\r\n                var a01 = a0,\r\n                    a11 = a1,\r\n                    a00 = a0,\r\n                    a10 = a1,\r\n                    da0 = da,\r\n                    da1 = da,\r\n                    ap = padAngle.apply(this, arguments) / 2,\r\n                    rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$1(r0 * r0 + r1 * r1)),\r\n                    rc = min$1(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\r\n                    rc0 = rc,\r\n                    rc1 = rc,\r\n                    t0,\r\n                    t1;\r\n\r\n                // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\r\n                if (rp > epsilon$1) {\r\n                    var p0 = asin(rp / r0 * sin(ap)),\r\n                        p1 = asin(rp / r1 * sin(ap));\r\n                    if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\r\n                    else da0 = 0, a00 = a10 = (a0 + a1) / 2;\r\n                    if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\r\n                    else da1 = 0, a01 = a11 = (a0 + a1) / 2;\r\n                }\r\n\r\n                var x01 = r1 * cos(a01),\r\n                    y01 = r1 * sin(a01),\r\n                    x10 = r0 * cos(a10),\r\n                    y10 = r0 * sin(a10);\r\n\r\n                // Apply rounded corners?\r\n                if (rc > epsilon$1) {\r\n                    var x11 = r1 * cos(a11),\r\n                        y11 = r1 * sin(a11),\r\n                        x00 = r0 * cos(a00),\r\n                        y00 = r0 * sin(a00);\r\n\r\n                    // Restrict the corner radius according to the sector angle.\r\n                    if (da < pi$1) {\r\n                        var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\r\n                            ax = x01 - oc[0],\r\n                            ay = y01 - oc[1],\r\n                            bx = x11 - oc[0],\r\n                            by = y11 - oc[1],\r\n                            kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt$1(ax * ax + ay * ay) * sqrt$1(bx * bx + by * by))) / 2),\r\n                            lc = sqrt$1(oc[0] * oc[0] + oc[1] * oc[1]);\r\n                        rc0 = min$1(rc, (r0 - lc) / (kc - 1));\r\n                        rc1 = min$1(rc, (r1 - lc) / (kc + 1));\r\n                    }\r\n                }\r\n\r\n                // Is the sector collapsed to a line?\r\n                if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\r\n\r\n                // Does the sector’s outer ring have rounded corners?\r\n                else if (rc1 > epsilon$1) {\r\n                    t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\r\n                    t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\r\n\r\n                    context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\r\n\r\n                    // Have the corners merged?\r\n                    if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\r\n\r\n                    // Otherwise, draw the two corners and the ring.\r\n                    else {\r\n                        context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\r\n                        context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\r\n                        context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\r\n                    }\r\n                }\r\n\r\n                // Or is the outer ring just a circular arc?\r\n                else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\r\n\r\n                // Is there no inner ring, and it’s a circular sector?\r\n                // Or perhaps it’s an annular sector collapsed due to padding?\r\n                if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\r\n\r\n                // Does the sector’s inner ring (or point) have rounded corners?\r\n                else if (rc0 > epsilon$1) {\r\n                    t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\r\n                    t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\r\n\r\n                    context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\r\n\r\n                    // Have the corners merged?\r\n                    if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\r\n\r\n                    // Otherwise, draw the two corners and the ring.\r\n                    else {\r\n                        context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\r\n                        context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\r\n                        context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\r\n                    }\r\n                }\r\n\r\n                // Or is the inner ring just a circular arc?\r\n                else context.arc(0, 0, r0, a10, a00, cw);\r\n            }\r\n\r\n            context.closePath();\r\n\r\n            if (buffer) return context = null, buffer + \"\" || null;\r\n        }\r\n\r\n        arc.centroid = function() {\r\n            var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\r\n                a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$1 / 2;\r\n            return [cos(a) * r, sin(a) * r];\r\n        };\r\n\r\n        arc.innerRadius = function(_) {\r\n            return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$4(+_), arc) : innerRadius;\r\n        };\r\n\r\n        arc.outerRadius = function(_) {\r\n            return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$4(+_), arc) : outerRadius;\r\n        };\r\n\r\n        arc.cornerRadius = function(_) {\r\n            return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$4(+_), arc) : cornerRadius;\r\n        };\r\n\r\n        arc.padRadius = function(_) {\r\n            return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$4(+_), arc) : padRadius;\r\n        };\r\n\r\n        arc.startAngle = function(_) {\r\n            return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$4(+_), arc) : startAngle;\r\n        };\r\n\r\n        arc.endAngle = function(_) {\r\n            return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$4(+_), arc) : endAngle;\r\n        };\r\n\r\n        arc.padAngle = function(_) {\r\n            return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$4(+_), arc) : padAngle;\r\n        };\r\n\r\n        arc.context = function(_) {\r\n            return arguments.length ? ((context = _ == null ? null : _), arc) : context;\r\n        };\r\n\r\n        return arc;\r\n    }\r\n\r\n    function Linear(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    Linear.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n                case 1: this._point = 2; // proceed\r\n                default: this._context.lineTo(x, y); break;\r\n            }\r\n        }\r\n    };\r\n\r\n    function curveLinear(context) {\r\n        return new Linear(context);\r\n    }\r\n\r\n    function pointX(p) {\r\n        return p[0];\r\n    }\r\n\r\n    function pointY(p) {\r\n        return p[1];\r\n    }\r\n\r\n    function line() {\r\n        var x = pointX,\r\n            y = pointY,\r\n            defined = constant$4(true),\r\n            context = null,\r\n            curve = curveLinear,\r\n            output = null;\r\n\r\n        function line(data) {\r\n            var i,\r\n                n = data.length,\r\n                d,\r\n                defined0 = false,\r\n                buffer;\r\n\r\n            if (context == null) output = curve(buffer = path());\r\n\r\n            for (i = 0; i <= n; ++i) {\r\n                if (!(i < n && defined(d = data[i], i, data)) === defined0) {\r\n                    if (defined0 = !defined0) output.lineStart();\r\n                    else output.lineEnd();\r\n                }\r\n                if (defined0) output.point(+x(d, i, data), +y(d, i, data));\r\n            }\r\n\r\n            if (buffer) return output = null, buffer + \"\" || null;\r\n        }\r\n\r\n        line.x = function(_) {\r\n            return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$4(+_), line) : x;\r\n        };\r\n\r\n        line.y = function(_) {\r\n            return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$4(+_), line) : y;\r\n        };\r\n\r\n        line.defined = function(_) {\r\n            return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$4(!!_), line) : defined;\r\n        };\r\n\r\n        line.curve = function(_) {\r\n            return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\r\n        };\r\n\r\n        line.context = function(_) {\r\n            return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\r\n        };\r\n\r\n        return line;\r\n    }\r\n\r\n    function area() {\r\n        var x0 = pointX,\r\n            x1 = null,\r\n            y0 = constant$4(0),\r\n            y1 = pointY,\r\n            defined = constant$4(true),\r\n            context = null,\r\n            curve = curveLinear,\r\n            output = null;\r\n\r\n        function area(data) {\r\n            var i,\r\n                j,\r\n                k,\r\n                n = data.length,\r\n                d,\r\n                defined0 = false,\r\n                buffer,\r\n                x0z = new Array(n),\r\n                y0z = new Array(n);\r\n\r\n            if (context == null) output = curve(buffer = path());\r\n\r\n            for (i = 0; i <= n; ++i) {\r\n                if (!(i < n && defined(d = data[i], i, data)) === defined0) {\r\n                    if (defined0 = !defined0) {\r\n                        j = i;\r\n                        output.areaStart();\r\n                        output.lineStart();\r\n                    } else {\r\n                        output.lineEnd();\r\n                        output.lineStart();\r\n                        for (k = i - 1; k >= j; --k) {\r\n                            output.point(x0z[k], y0z[k]);\r\n                        }\r\n                        output.lineEnd();\r\n                        output.areaEnd();\r\n                    }\r\n                }\r\n                if (defined0) {\r\n                    x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\r\n                    output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\r\n                }\r\n            }\r\n\r\n            if (buffer) return output = null, buffer + \"\" || null;\r\n        }\r\n\r\n        function arealine() {\r\n            return line().defined(defined).curve(curve).context(context);\r\n        }\r\n\r\n        area.x = function(_) {\r\n            return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$4(+_), x1 = null, area) : x0;\r\n        };\r\n\r\n        area.x0 = function(_) {\r\n            return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$4(+_), area) : x0;\r\n        };\r\n\r\n        area.x1 = function(_) {\r\n            return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$4(+_), area) : x1;\r\n        };\r\n\r\n        area.y = function(_) {\r\n            return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$4(+_), y1 = null, area) : y0;\r\n        };\r\n\r\n        area.y0 = function(_) {\r\n            return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$4(+_), area) : y0;\r\n        };\r\n\r\n        area.y1 = function(_) {\r\n            return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$4(+_), area) : y1;\r\n        };\r\n\r\n        area.lineX0 =\r\n            area.lineY0 = function() {\r\n                return arealine().x(x0).y(y0);\r\n            };\r\n\r\n        area.lineY1 = function() {\r\n            return arealine().x(x0).y(y1);\r\n        };\r\n\r\n        area.lineX1 = function() {\r\n            return arealine().x(x1).y(y0);\r\n        };\r\n\r\n        area.defined = function(_) {\r\n            return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$4(!!_), area) : defined;\r\n        };\r\n\r\n        area.curve = function(_) {\r\n            return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\r\n        };\r\n\r\n        area.context = function(_) {\r\n            return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\r\n        };\r\n\r\n        return area;\r\n    }\r\n\r\n    function descending$1(a, b) {\r\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n    }\r\n\r\n    function identity$4(d) {\r\n        return d;\r\n    }\r\n\r\n    function pie() {\r\n        var value = identity$4,\r\n            sortValues = descending$1,\r\n            sort = null,\r\n            startAngle = constant$4(0),\r\n            endAngle = constant$4(tau$1),\r\n            padAngle = constant$4(0);\r\n\r\n        function pie(data) {\r\n            var i,\r\n                n = data.length,\r\n                j,\r\n                k,\r\n                sum = 0,\r\n                index = new Array(n),\r\n                arcs = new Array(n),\r\n                a0 = +startAngle.apply(this, arguments),\r\n                da = Math.min(tau$1, Math.max(-tau$1, endAngle.apply(this, arguments) - a0)),\r\n                a1,\r\n                p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\r\n                pa = p * (da < 0 ? -1 : 1),\r\n                v;\r\n\r\n            for (i = 0; i < n; ++i) {\r\n                if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\r\n                    sum += v;\r\n                }\r\n            }\r\n\r\n            // Optionally sort the arcs by previously-computed values or by data.\r\n            if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\r\n            else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\r\n\r\n            // Compute the arcs! They are stored in the original data's order.\r\n            for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\r\n                j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\r\n                    data: data[j],\r\n                    index: i,\r\n                    value: v,\r\n                    startAngle: a0,\r\n                    endAngle: a1,\r\n                    padAngle: p\r\n                };\r\n            }\r\n\r\n            return arcs;\r\n        }\r\n\r\n        pie.value = function(_) {\r\n            return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$4(+_), pie) : value;\r\n        };\r\n\r\n        pie.sortValues = function(_) {\r\n            return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\r\n        };\r\n\r\n        pie.sort = function(_) {\r\n            return arguments.length ? (sort = _, sortValues = null, pie) : sort;\r\n        };\r\n\r\n        pie.startAngle = function(_) {\r\n            return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$4(+_), pie) : startAngle;\r\n        };\r\n\r\n        pie.endAngle = function(_) {\r\n            return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$4(+_), pie) : endAngle;\r\n        };\r\n\r\n        pie.padAngle = function(_) {\r\n            return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$4(+_), pie) : padAngle;\r\n        };\r\n\r\n        return pie;\r\n    }\r\n\r\n    var curveRadialLinear = curveRadial(curveLinear);\r\n\r\n    function Radial(curve) {\r\n        this._curve = curve;\r\n    }\r\n\r\n    Radial.prototype = {\r\n        areaStart: function() {\r\n            this._curve.areaStart();\r\n        },\r\n        areaEnd: function() {\r\n            this._curve.areaEnd();\r\n        },\r\n        lineStart: function() {\r\n            this._curve.lineStart();\r\n        },\r\n        lineEnd: function() {\r\n            this._curve.lineEnd();\r\n        },\r\n        point: function(a, r) {\r\n            this._curve.point(r * Math.sin(a), r * -Math.cos(a));\r\n        }\r\n    };\r\n\r\n    function curveRadial(curve) {\r\n\r\n        function radial(context) {\r\n            return new Radial(curve(context));\r\n        }\r\n\r\n        radial._curve = curve;\r\n\r\n        return radial;\r\n    }\r\n\r\n    function lineRadial(l) {\r\n        var c = l.curve;\r\n\r\n        l.angle = l.x, delete l.x;\r\n        l.radius = l.y, delete l.y;\r\n\r\n        l.curve = function(_) {\r\n            return arguments.length ? c(curveRadial(_)) : c()._curve;\r\n        };\r\n\r\n        return l;\r\n    }\r\n\r\n    function lineRadial$1() {\r\n        return lineRadial(line().curve(curveRadialLinear));\r\n    }\r\n\r\n    function areaRadial() {\r\n        var a = area().curve(curveRadialLinear),\r\n            c = a.curve,\r\n            x0 = a.lineX0,\r\n            x1 = a.lineX1,\r\n            y0 = a.lineY0,\r\n            y1 = a.lineY1;\r\n\r\n        a.angle = a.x, delete a.x;\r\n        a.startAngle = a.x0, delete a.x0;\r\n        a.endAngle = a.x1, delete a.x1;\r\n        a.radius = a.y, delete a.y;\r\n        a.innerRadius = a.y0, delete a.y0;\r\n        a.outerRadius = a.y1, delete a.y1;\r\n        a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\r\n        a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\r\n        a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\r\n        a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\r\n\r\n        a.curve = function(_) {\r\n            return arguments.length ? c(curveRadial(_)) : c()._curve;\r\n        };\r\n\r\n        return a;\r\n    }\r\n\r\n    function pointRadial(x, y) {\r\n        return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\r\n    }\r\n\r\n    var slice$2 = Array.prototype.slice;\r\n\r\n    function linkSource(d) {\r\n        return d.source;\r\n    }\r\n\r\n    function linkTarget(d) {\r\n        return d.target;\r\n    }\r\n\r\n    function link(curve) {\r\n        var source = linkSource,\r\n            target = linkTarget,\r\n            x = pointX,\r\n            y = pointY,\r\n            context = null;\r\n\r\n        function link() {\r\n            var buffer, argv = slice$2.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\r\n            if (!context) context = buffer = path();\r\n            curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\r\n            if (buffer) return context = null, buffer + \"\" || null;\r\n        }\r\n\r\n        link.source = function(_) {\r\n            return arguments.length ? (source = _, link) : source;\r\n        };\r\n\r\n        link.target = function(_) {\r\n            return arguments.length ? (target = _, link) : target;\r\n        };\r\n\r\n        link.x = function(_) {\r\n            return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$4(+_), link) : x;\r\n        };\r\n\r\n        link.y = function(_) {\r\n            return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$4(+_), link) : y;\r\n        };\r\n\r\n        link.context = function(_) {\r\n            return arguments.length ? ((context = _ == null ? null : _), link) : context;\r\n        };\r\n\r\n        return link;\r\n    }\r\n\r\n    function curveHorizontal(context, x0, y0, x1, y1) {\r\n        context.moveTo(x0, y0);\r\n        context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\r\n    }\r\n\r\n    function curveVertical(context, x0, y0, x1, y1) {\r\n        context.moveTo(x0, y0);\r\n        context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\r\n    }\r\n\r\n    function curveRadial$1(context, x0, y0, x1, y1) {\r\n        var p0 = pointRadial(x0, y0),\r\n            p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\r\n            p2 = pointRadial(x1, y0),\r\n            p3 = pointRadial(x1, y1);\r\n        context.moveTo(p0[0], p0[1]);\r\n        context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\r\n    }\r\n\r\n    function linkHorizontal() {\r\n        return link(curveHorizontal);\r\n    }\r\n\r\n    function linkVertical() {\r\n        return link(curveVertical);\r\n    }\r\n\r\n    function linkRadial() {\r\n        var l = link(curveRadial$1);\r\n        l.angle = l.x, delete l.x;\r\n        l.radius = l.y, delete l.y;\r\n        return l;\r\n    }\r\n\r\n    var circle = {\r\n        draw: function(context, size) {\r\n            var r = Math.sqrt(size / pi$1);\r\n            context.moveTo(r, 0);\r\n            context.arc(0, 0, r, 0, tau$1);\r\n        }\r\n    };\r\n\r\n    var cross$1 = {\r\n        draw: function(context, size) {\r\n            var r = Math.sqrt(size / 5) / 2;\r\n            context.moveTo(-3 * r, -r);\r\n            context.lineTo(-r, -r);\r\n            context.lineTo(-r, -3 * r);\r\n            context.lineTo(r, -3 * r);\r\n            context.lineTo(r, -r);\r\n            context.lineTo(3 * r, -r);\r\n            context.lineTo(3 * r, r);\r\n            context.lineTo(r, r);\r\n            context.lineTo(r, 3 * r);\r\n            context.lineTo(-r, 3 * r);\r\n            context.lineTo(-r, r);\r\n            context.lineTo(-3 * r, r);\r\n            context.closePath();\r\n        }\r\n    };\r\n\r\n    var tan30 = Math.sqrt(1 / 3);\r\n    var tan30_2 = tan30 * 2;\r\n    var diamond = {\r\n        draw: function(context, size) {\r\n            var y = Math.sqrt(size / tan30_2),\r\n                x = y * tan30;\r\n            context.moveTo(0, -y);\r\n            context.lineTo(x, 0);\r\n            context.lineTo(0, y);\r\n            context.lineTo(-x, 0);\r\n            context.closePath();\r\n        }\r\n    };\r\n\r\n    var ka = 0.89081309152928522810;\r\n    var kr = Math.sin(pi$1 / 10) / Math.sin(7 * pi$1 / 10);\r\n    var kx = Math.sin(tau$1 / 10) * kr;\r\n    var ky = -Math.cos(tau$1 / 10) * kr;\r\n    var star = {\r\n        draw: function(context, size) {\r\n            var r = Math.sqrt(size * ka),\r\n                x = kx * r,\r\n                y = ky * r;\r\n            context.moveTo(0, -r);\r\n            context.lineTo(x, y);\r\n            for (var i = 1; i < 5; ++i) {\r\n                var a = tau$1 * i / 5,\r\n                    c = Math.cos(a),\r\n                    s = Math.sin(a);\r\n                context.lineTo(s * r, -c * r);\r\n                context.lineTo(c * x - s * y, s * x + c * y);\r\n            }\r\n            context.closePath();\r\n        }\r\n    };\r\n\r\n    var square = {\r\n        draw: function(context, size) {\r\n            var w = Math.sqrt(size),\r\n                x = -w / 2;\r\n            context.rect(x, x, w, w);\r\n        }\r\n    };\r\n\r\n    var sqrt3 = Math.sqrt(3);\r\n\r\n    var triangle = {\r\n        draw: function(context, size) {\r\n            var y = -Math.sqrt(size / (sqrt3 * 3));\r\n            context.moveTo(0, y * 2);\r\n            context.lineTo(-sqrt3 * y, -y);\r\n            context.lineTo(sqrt3 * y, -y);\r\n            context.closePath();\r\n        }\r\n    };\r\n\r\n    var c = -0.5;\r\n    var s = Math.sqrt(3) / 2;\r\n    var k = 1 / Math.sqrt(12);\r\n    var a = (k / 2 + 1) * 3;\r\n    var wye = {\r\n        draw: function(context, size) {\r\n            var r = Math.sqrt(size / a),\r\n                x0 = r / 2,\r\n                y0 = r * k,\r\n                x1 = x0,\r\n                y1 = r * k + r,\r\n                x2 = -x1,\r\n                y2 = y1;\r\n            context.moveTo(x0, y0);\r\n            context.lineTo(x1, y1);\r\n            context.lineTo(x2, y2);\r\n            context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\r\n            context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\r\n            context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\r\n            context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\r\n            context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\r\n            context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\r\n            context.closePath();\r\n        }\r\n    };\r\n\r\n    var symbols = [\r\n        circle,\r\n        cross$1,\r\n        diamond,\r\n        square,\r\n        star,\r\n        triangle,\r\n        wye\r\n    ];\r\n\r\n    function symbol() {\r\n        var type = constant$4(circle),\r\n            size = constant$4(64),\r\n            context = null;\r\n\r\n        function symbol() {\r\n            var buffer;\r\n            if (!context) context = buffer = path();\r\n            type.apply(this, arguments).draw(context, +size.apply(this, arguments));\r\n            if (buffer) return context = null, buffer + \"\" || null;\r\n        }\r\n\r\n        symbol.type = function(_) {\r\n            return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$4(_), symbol) : type;\r\n        };\r\n\r\n        symbol.size = function(_) {\r\n            return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$4(+_), symbol) : size;\r\n        };\r\n\r\n        symbol.context = function(_) {\r\n            return arguments.length ? (context = _ == null ? null : _, symbol) : context;\r\n        };\r\n\r\n        return symbol;\r\n    }\r\n\r\n    function noop() {}\r\n\r\n    function point$2(that, x, y) {\r\n        that._context.bezierCurveTo(\r\n            (2 * that._x0 + that._x1) / 3,\r\n            (2 * that._y0 + that._y1) / 3,\r\n            (that._x0 + 2 * that._x1) / 3,\r\n            (that._y0 + 2 * that._y1) / 3,\r\n            (that._x0 + 4 * that._x1 + x) / 6,\r\n            (that._y0 + 4 * that._y1 + y) / 6\r\n        );\r\n    }\r\n\r\n    function Basis(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    Basis.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 =\r\n                this._y0 = this._y1 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 3: point$2(this, this._x1, this._y1); // proceed\r\n                case 2: this._context.lineTo(this._x1, this._y1); break;\r\n            }\r\n            if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n                case 1: this._point = 2; break;\r\n                case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\r\n                default: point$2(this, x, y); break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = x;\r\n            this._y0 = this._y1, this._y1 = y;\r\n        }\r\n    };\r\n\r\n    function basis$2(context) {\r\n        return new Basis(context);\r\n    }\r\n\r\n    function BasisClosed(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    BasisClosed.prototype = {\r\n        areaStart: noop,\r\n        areaEnd: noop,\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\r\n                this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 1: {\r\n                    this._context.moveTo(this._x2, this._y2);\r\n                    this._context.closePath();\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\r\n                    this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\r\n                    this._context.closePath();\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    this.point(this._x2, this._y2);\r\n                    this.point(this._x3, this._y3);\r\n                    this.point(this._x4, this._y4);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\r\n                case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\r\n                case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\r\n                default: point$2(this, x, y); break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = x;\r\n            this._y0 = this._y1, this._y1 = y;\r\n        }\r\n    };\r\n\r\n    function basisClosed$1(context) {\r\n        return new BasisClosed(context);\r\n    }\r\n\r\n    function BasisOpen(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    BasisOpen.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 =\r\n                this._y0 = this._y1 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; break;\r\n                case 1: this._point = 2; break;\r\n                case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\r\n                case 3: this._point = 4; // proceed\r\n                default: point$2(this, x, y); break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = x;\r\n            this._y0 = this._y1, this._y1 = y;\r\n        }\r\n    };\r\n\r\n    function basisOpen(context) {\r\n        return new BasisOpen(context);\r\n    }\r\n\r\n    function Bundle(context, beta) {\r\n        this._basis = new Basis(context);\r\n        this._beta = beta;\r\n    }\r\n\r\n    Bundle.prototype = {\r\n        lineStart: function() {\r\n            this._x = [];\r\n            this._y = [];\r\n            this._basis.lineStart();\r\n        },\r\n        lineEnd: function() {\r\n            var x = this._x,\r\n                y = this._y,\r\n                j = x.length - 1;\r\n\r\n            if (j > 0) {\r\n                var x0 = x[0],\r\n                    y0 = y[0],\r\n                    dx = x[j] - x0,\r\n                    dy = y[j] - y0,\r\n                    i = -1,\r\n                    t;\r\n\r\n                while (++i <= j) {\r\n                    t = i / j;\r\n                    this._basis.point(\r\n                        this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\r\n                        this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\r\n                    );\r\n                }\r\n            }\r\n\r\n            this._x = this._y = null;\r\n            this._basis.lineEnd();\r\n        },\r\n        point: function(x, y) {\r\n            this._x.push(+x);\r\n            this._y.push(+y);\r\n        }\r\n    };\r\n\r\n    var bundle = (function custom(beta) {\r\n\r\n        function bundle(context) {\r\n            return beta === 1 ? new Basis(context) : new Bundle(context, beta);\r\n        }\r\n\r\n        bundle.beta = function(beta) {\r\n            return custom(+beta);\r\n        };\r\n\r\n        return bundle;\r\n    })(0.85);\r\n\r\n    function point$3(that, x, y) {\r\n        that._context.bezierCurveTo(\r\n            that._x1 + that._k * (that._x2 - that._x0),\r\n            that._y1 + that._k * (that._y2 - that._y0),\r\n            that._x2 + that._k * (that._x1 - x),\r\n            that._y2 + that._k * (that._y1 - y),\r\n            that._x2,\r\n            that._y2\r\n        );\r\n    }\r\n\r\n    function Cardinal(context, tension) {\r\n        this._context = context;\r\n        this._k = (1 - tension) / 6;\r\n    }\r\n\r\n    Cardinal.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 =\r\n                this._y0 = this._y1 = this._y2 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 2: this._context.lineTo(this._x2, this._y2); break;\r\n                case 3: point$3(this, this._x1, this._y1); break;\r\n            }\r\n            if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n                case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\r\n                case 2: this._point = 3; // proceed\r\n                default: point$3(this, x, y); break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n            this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n        }\r\n    };\r\n\r\n    var cardinal = (function custom(tension) {\r\n\r\n        function cardinal(context) {\r\n            return new Cardinal(context, tension);\r\n        }\r\n\r\n        cardinal.tension = function(tension) {\r\n            return custom(+tension);\r\n        };\r\n\r\n        return cardinal;\r\n    })(0);\r\n\r\n    function CardinalClosed(context, tension) {\r\n        this._context = context;\r\n        this._k = (1 - tension) / 6;\r\n    }\r\n\r\n    CardinalClosed.prototype = {\r\n        areaStart: noop,\r\n        areaEnd: noop,\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\r\n                this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 1: {\r\n                    this._context.moveTo(this._x3, this._y3);\r\n                    this._context.closePath();\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    this._context.lineTo(this._x3, this._y3);\r\n                    this._context.closePath();\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    this.point(this._x3, this._y3);\r\n                    this.point(this._x4, this._y4);\r\n                    this.point(this._x5, this._y5);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\r\n                case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\r\n                case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\r\n                default: point$3(this, x, y); break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n            this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n        }\r\n    };\r\n\r\n    var cardinalClosed = (function custom(tension) {\r\n\r\n        function cardinal(context) {\r\n            return new CardinalClosed(context, tension);\r\n        }\r\n\r\n        cardinal.tension = function(tension) {\r\n            return custom(+tension);\r\n        };\r\n\r\n        return cardinal;\r\n    })(0);\r\n\r\n    function CardinalOpen(context, tension) {\r\n        this._context = context;\r\n        this._k = (1 - tension) / 6;\r\n    }\r\n\r\n    CardinalOpen.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 =\r\n                this._y0 = this._y1 = this._y2 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; break;\r\n                case 1: this._point = 2; break;\r\n                case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\r\n                case 3: this._point = 4; // proceed\r\n                default: point$3(this, x, y); break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n            this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n        }\r\n    };\r\n\r\n    var cardinalOpen = (function custom(tension) {\r\n\r\n        function cardinal(context) {\r\n            return new CardinalOpen(context, tension);\r\n        }\r\n\r\n        cardinal.tension = function(tension) {\r\n            return custom(+tension);\r\n        };\r\n\r\n        return cardinal;\r\n    })(0);\r\n\r\n    function point$4(that, x, y) {\r\n        var x1 = that._x1,\r\n            y1 = that._y1,\r\n            x2 = that._x2,\r\n            y2 = that._y2;\r\n\r\n        if (that._l01_a > epsilon$1) {\r\n            var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\r\n                n = 3 * that._l01_a * (that._l01_a + that._l12_a);\r\n            x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\r\n            y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\r\n        }\r\n\r\n        if (that._l23_a > epsilon$1) {\r\n            var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\r\n                m = 3 * that._l23_a * (that._l23_a + that._l12_a);\r\n            x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\r\n            y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\r\n        }\r\n\r\n        that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\r\n    }\r\n\r\n    function CatmullRom(context, alpha) {\r\n        this._context = context;\r\n        this._alpha = alpha;\r\n    }\r\n\r\n    CatmullRom.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 =\r\n                this._y0 = this._y1 = this._y2 = NaN;\r\n            this._l01_a = this._l12_a = this._l23_a =\r\n                this._l01_2a = this._l12_2a = this._l23_2a =\r\n                    this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 2: this._context.lineTo(this._x2, this._y2); break;\r\n                case 3: this.point(this._x2, this._y2); break;\r\n            }\r\n            if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n\r\n            if (this._point) {\r\n                var x23 = this._x2 - x,\r\n                    y23 = this._y2 - y;\r\n                this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n            }\r\n\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n                case 1: this._point = 2; break;\r\n                case 2: this._point = 3; // proceed\r\n                default: point$4(this, x, y); break;\r\n            }\r\n\r\n            this._l01_a = this._l12_a, this._l12_a = this._l23_a;\r\n            this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\r\n            this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n            this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n        }\r\n    };\r\n\r\n    var catmullRom = (function custom(alpha) {\r\n\r\n        function catmullRom(context) {\r\n            return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\r\n        }\r\n\r\n        catmullRom.alpha = function(alpha) {\r\n            return custom(+alpha);\r\n        };\r\n\r\n        return catmullRom;\r\n    })(0.5);\r\n\r\n    function CatmullRomClosed(context, alpha) {\r\n        this._context = context;\r\n        this._alpha = alpha;\r\n    }\r\n\r\n    CatmullRomClosed.prototype = {\r\n        areaStart: noop,\r\n        areaEnd: noop,\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\r\n                this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\r\n            this._l01_a = this._l12_a = this._l23_a =\r\n                this._l01_2a = this._l12_2a = this._l23_2a =\r\n                    this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 1: {\r\n                    this._context.moveTo(this._x3, this._y3);\r\n                    this._context.closePath();\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    this._context.lineTo(this._x3, this._y3);\r\n                    this._context.closePath();\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    this.point(this._x3, this._y3);\r\n                    this.point(this._x4, this._y4);\r\n                    this.point(this._x5, this._y5);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n\r\n            if (this._point) {\r\n                var x23 = this._x2 - x,\r\n                    y23 = this._y2 - y;\r\n                this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n            }\r\n\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\r\n                case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\r\n                case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\r\n                default: point$4(this, x, y); break;\r\n            }\r\n\r\n            this._l01_a = this._l12_a, this._l12_a = this._l23_a;\r\n            this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\r\n            this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n            this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n        }\r\n    };\r\n\r\n    var catmullRomClosed = (function custom(alpha) {\r\n\r\n        function catmullRom(context) {\r\n            return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\r\n        }\r\n\r\n        catmullRom.alpha = function(alpha) {\r\n            return custom(+alpha);\r\n        };\r\n\r\n        return catmullRom;\r\n    })(0.5);\r\n\r\n    function CatmullRomOpen(context, alpha) {\r\n        this._context = context;\r\n        this._alpha = alpha;\r\n    }\r\n\r\n    CatmullRomOpen.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 = this._x2 =\r\n                this._y0 = this._y1 = this._y2 = NaN;\r\n            this._l01_a = this._l12_a = this._l23_a =\r\n                this._l01_2a = this._l12_2a = this._l23_2a =\r\n                    this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n\r\n            if (this._point) {\r\n                var x23 = this._x2 - x,\r\n                    y23 = this._y2 - y;\r\n                this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n            }\r\n\r\n            switch (this._point) {\r\n                case 0: this._point = 1; break;\r\n                case 1: this._point = 2; break;\r\n                case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\r\n                case 3: this._point = 4; // proceed\r\n                default: point$4(this, x, y); break;\r\n            }\r\n\r\n            this._l01_a = this._l12_a, this._l12_a = this._l23_a;\r\n            this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\r\n            this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n            this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n        }\r\n    };\r\n\r\n    var catmullRomOpen = (function custom(alpha) {\r\n\r\n        function catmullRom(context) {\r\n            return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\r\n        }\r\n\r\n        catmullRom.alpha = function(alpha) {\r\n            return custom(+alpha);\r\n        };\r\n\r\n        return catmullRom;\r\n    })(0.5);\r\n\r\n    function LinearClosed(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    LinearClosed.prototype = {\r\n        areaStart: noop,\r\n        areaEnd: noop,\r\n        lineStart: function() {\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            if (this._point) this._context.closePath();\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            if (this._point) this._context.lineTo(x, y);\r\n            else this._point = 1, this._context.moveTo(x, y);\r\n        }\r\n    };\r\n\r\n    function linearClosed(context) {\r\n        return new LinearClosed(context);\r\n    }\r\n\r\n    function sign(x) {\r\n        return x < 0 ? -1 : 1;\r\n    }\r\n\r\n    // Calculate the slopes of the tangents (Hermite-type interpolation) based on\r\n    // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\r\n    // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\r\n    // NOV(II), P. 443, 1990.\r\n    function slope3(that, x2, y2) {\r\n        var h0 = that._x1 - that._x0,\r\n            h1 = x2 - that._x1,\r\n            s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\r\n            s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\r\n            p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n        return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n    }\r\n\r\n    // Calculate a one-sided slope.\r\n    function slope2(that, t) {\r\n        var h = that._x1 - that._x0;\r\n        return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n    }\r\n\r\n    // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\r\n    // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\r\n    // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\r\n    function point$5(that, t0, t1) {\r\n        var x0 = that._x0,\r\n            y0 = that._y0,\r\n            x1 = that._x1,\r\n            y1 = that._y1,\r\n            dx = (x1 - x0) / 3;\r\n        that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n    }\r\n\r\n    function MonotoneX(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    MonotoneX.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x0 = this._x1 =\r\n                this._y0 = this._y1 =\r\n                    this._t0 = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            switch (this._point) {\r\n                case 2: this._context.lineTo(this._x1, this._y1); break;\r\n                case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\r\n            }\r\n            if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            var t1 = NaN;\r\n\r\n            x = +x, y = +y;\r\n            if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n                case 1: this._point = 2; break;\r\n                case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\r\n                default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\r\n            }\r\n\r\n            this._x0 = this._x1, this._x1 = x;\r\n            this._y0 = this._y1, this._y1 = y;\r\n            this._t0 = t1;\r\n        }\r\n    }\r\n\r\n    function MonotoneY(context) {\r\n        this._context = new ReflectContext(context);\r\n    }\r\n\r\n    (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\r\n        MonotoneX.prototype.point.call(this, y, x);\r\n    };\r\n\r\n    function ReflectContext(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    ReflectContext.prototype = {\r\n        moveTo: function(x, y) { this._context.moveTo(y, x); },\r\n        closePath: function() { this._context.closePath(); },\r\n        lineTo: function(x, y) { this._context.lineTo(y, x); },\r\n        bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\r\n    };\r\n\r\n    function monotoneX(context) {\r\n        return new MonotoneX(context);\r\n    }\r\n\r\n    function monotoneY(context) {\r\n        return new MonotoneY(context);\r\n    }\r\n\r\n    function Natural(context) {\r\n        this._context = context;\r\n    }\r\n\r\n    Natural.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x = [];\r\n            this._y = [];\r\n        },\r\n        lineEnd: function() {\r\n            var x = this._x,\r\n                y = this._y,\r\n                n = x.length;\r\n\r\n            if (n) {\r\n                this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\r\n                if (n === 2) {\r\n                    this._context.lineTo(x[1], y[1]);\r\n                } else {\r\n                    var px = controlPoints(x),\r\n                        py = controlPoints(y);\r\n                    for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\r\n                        this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\r\n            this._line = 1 - this._line;\r\n            this._x = this._y = null;\r\n        },\r\n        point: function(x, y) {\r\n            this._x.push(+x);\r\n            this._y.push(+y);\r\n        }\r\n    };\r\n\r\n    // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\r\n    function controlPoints(x) {\r\n        var i,\r\n            n = x.length - 1,\r\n            m,\r\n            a = new Array(n),\r\n            b = new Array(n),\r\n            r = new Array(n);\r\n        a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\r\n        for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\r\n        a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\r\n        for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\r\n        a[n - 1] = r[n - 1] / b[n - 1];\r\n        for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\r\n        b[n - 1] = (x[n] + a[n - 1]) / 2;\r\n        for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\r\n        return [a, b];\r\n    }\r\n\r\n    function natural(context) {\r\n        return new Natural(context);\r\n    }\r\n\r\n    function Step(context, t) {\r\n        this._context = context;\r\n        this._t = t;\r\n    }\r\n\r\n    Step.prototype = {\r\n        areaStart: function() {\r\n            this._line = 0;\r\n        },\r\n        areaEnd: function() {\r\n            this._line = NaN;\r\n        },\r\n        lineStart: function() {\r\n            this._x = this._y = NaN;\r\n            this._point = 0;\r\n        },\r\n        lineEnd: function() {\r\n            if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\r\n            if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n            if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\r\n        },\r\n        point: function(x, y) {\r\n            x = +x, y = +y;\r\n            switch (this._point) {\r\n                case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n                case 1: this._point = 2; // proceed\r\n                default: {\r\n                    if (this._t <= 0) {\r\n                        this._context.lineTo(this._x, y);\r\n                        this._context.lineTo(x, y);\r\n                    } else {\r\n                        var x1 = this._x * (1 - this._t) + x * this._t;\r\n                        this._context.lineTo(x1, this._y);\r\n                        this._context.lineTo(x1, y);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this._x = x, this._y = y;\r\n        }\r\n    };\r\n\r\n    function step(context) {\r\n        return new Step(context, 0.5);\r\n    }\r\n\r\n    function stepBefore(context) {\r\n        return new Step(context, 0);\r\n    }\r\n\r\n    function stepAfter(context) {\r\n        return new Step(context, 1);\r\n    }\r\n\r\n    function none$1(series, order) {\r\n        if (!((n = series.length) > 1)) return;\r\n        for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\r\n            s0 = s1, s1 = series[order[i]];\r\n            for (j = 0; j < m; ++j) {\r\n                s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\r\n            }\r\n        }\r\n    }\r\n\r\n    function none$2(series) {\r\n        var n = series.length, o = new Array(n);\r\n        while (--n >= 0) o[n] = n;\r\n        return o;\r\n    }\r\n\r\n    function stackValue(d, key) {\r\n        return d[key];\r\n    }\r\n\r\n    function stack() {\r\n        var keys = constant$4([]),\r\n            order = none$2,\r\n            offset = none$1,\r\n            value = stackValue;\r\n\r\n        function stack(data) {\r\n            var kz = keys.apply(this, arguments),\r\n                i,\r\n                m = data.length,\r\n                n = kz.length,\r\n                sz = new Array(n),\r\n                oz;\r\n\r\n            for (i = 0; i < n; ++i) {\r\n                for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\r\n                    si[j] = sij = [0, +value(data[j], ki, j, data)];\r\n                    sij.data = data[j];\r\n                }\r\n                si.key = ki;\r\n            }\r\n\r\n            for (i = 0, oz = order(sz); i < n; ++i) {\r\n                sz[oz[i]].index = i;\r\n            }\r\n\r\n            offset(sz, oz);\r\n            return sz;\r\n        }\r\n\r\n        stack.keys = function(_) {\r\n            return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$4(slice$2.call(_)), stack) : keys;\r\n        };\r\n\r\n        stack.value = function(_) {\r\n            return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$4(+_), stack) : value;\r\n        };\r\n\r\n        stack.order = function(_) {\r\n            return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$4(slice$2.call(_)), stack) : order;\r\n        };\r\n\r\n        stack.offset = function(_) {\r\n            return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\r\n        };\r\n\r\n        return stack;\r\n    }\r\n\r\n    function expand(series, order) {\r\n        if (!((n = series.length) > 0)) return;\r\n        for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\r\n            for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\r\n            if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\r\n        }\r\n        none$1(series, order);\r\n    }\r\n\r\n    function diverging(series, order) {\r\n        if (!((n = series.length) > 1)) return;\r\n        for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\r\n            for (yp = yn = 0, i = 0; i < n; ++i) {\r\n                if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\r\n                    d[0] = yp, d[1] = yp += dy;\r\n                } else if (dy < 0) {\r\n                    d[1] = yn, d[0] = yn += dy;\r\n                } else {\r\n                    d[0] = yp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function silhouette(series, order) {\r\n        if (!((n = series.length) > 0)) return;\r\n        for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\r\n            for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\r\n            s0[j][1] += s0[j][0] = -y / 2;\r\n        }\r\n        none$1(series, order);\r\n    }\r\n\r\n    function wiggle(series, order) {\r\n        if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\r\n        for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\r\n            for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\r\n                var si = series[order[i]],\r\n                    sij0 = si[j][1] || 0,\r\n                    sij1 = si[j - 1][1] || 0,\r\n                    s3 = (sij0 - sij1) / 2;\r\n                for (var k = 0; k < i; ++k) {\r\n                    var sk = series[order[k]],\r\n                        skj0 = sk[j][1] || 0,\r\n                        skj1 = sk[j - 1][1] || 0;\r\n                    s3 += skj0 - skj1;\r\n                }\r\n                s1 += sij0, s2 += s3 * sij0;\r\n            }\r\n            s0[j - 1][1] += s0[j - 1][0] = y;\r\n            if (s1) y -= s2 / s1;\r\n        }\r\n        s0[j - 1][1] += s0[j - 1][0] = y;\r\n        none$1(series, order);\r\n    }\r\n\r\n    function ascending$2(series) {\r\n        var sums = series.map(sum$1);\r\n        return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\r\n    }\r\n\r\n    function sum$1(series) {\r\n        var s = 0, i = -1, n = series.length, v;\r\n        while (++i < n) if (v = +series[i][1]) s += v;\r\n        return s;\r\n    }\r\n\r\n    function descending$2(series) {\r\n        return ascending$2(series).reverse();\r\n    }\r\n\r\n    function insideOut(series) {\r\n        var n = series.length,\r\n            i,\r\n            j,\r\n            sums = series.map(sum$1),\r\n            order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\r\n            top = 0,\r\n            bottom = 0,\r\n            tops = [],\r\n            bottoms = [];\r\n\r\n        for (i = 0; i < n; ++i) {\r\n            j = order[i];\r\n            if (top < bottom) {\r\n                top += sums[j];\r\n                tops.push(j);\r\n            } else {\r\n                bottom += sums[j];\r\n                bottoms.push(j);\r\n            }\r\n        }\r\n\r\n        return bottoms.reverse().concat(tops);\r\n    }\r\n\r\n    function reverse(series) {\r\n        return none$2(series).reverse();\r\n    }\r\n\r\n    var slice$3 = Array.prototype.slice;\r\n\r\n    function identity$5(x) {\r\n        return x;\r\n    }\r\n\r\n    var top = 1;\r\n    var right = 2;\r\n    var bottom = 3;\r\n    var left = 4;\r\n    var epsilon$2 = 1e-6;\r\n    function translateX(x) {\r\n        return \"translate(\" + (x + 0.5) + \",0)\";\r\n    }\r\n\r\n    function translateY(y) {\r\n        return \"translate(0,\" + (y + 0.5) + \")\";\r\n    }\r\n\r\n    function number$3(scale) {\r\n        return function(d) {\r\n            return +scale(d);\r\n        };\r\n    }\r\n\r\n    function center(scale) {\r\n        var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\r\n        if (scale.round()) offset = Math.round(offset);\r\n        return function(d) {\r\n            return +scale(d) + offset;\r\n        };\r\n    }\r\n\r\n    function entering() {\r\n        return !this.__axis;\r\n    }\r\n\r\n    function axis(orient, scale) {\r\n        var tickArguments = [],\r\n            tickValues = null,\r\n            tickFormat = null,\r\n            tickSizeInner = 6,\r\n            tickSizeOuter = 6,\r\n            tickPadding = 3,\r\n            k = orient === top || orient === left ? -1 : 1,\r\n            x = orient === left || orient === right ? \"x\" : \"y\",\r\n            transform = orient === top || orient === bottom ? translateX : translateY;\r\n\r\n        function axis(context) {\r\n            var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\r\n                format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\r\n                spacing = Math.max(tickSizeInner, 0) + tickPadding,\r\n                range = scale.range(),\r\n                range0 = +range[0] + 0.5,\r\n                range1 = +range[range.length - 1] + 0.5,\r\n                position = (scale.bandwidth ? center : number$3)(scale.copy()),\r\n                selection = context.selection ? context.selection() : context,\r\n                path = selection.selectAll(\".domain\").data([null]),\r\n                tick = selection.selectAll(\".tick\").data(values, scale).order(),\r\n                tickExit = tick.exit(),\r\n                tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\r\n                line = tick.select(\"line\"),\r\n                text = tick.select(\"text\");\r\n\r\n            path = path.merge(path.enter().insert(\"path\", \".tick\")\r\n                .attr(\"class\", \"domain\")\r\n                .attr(\"stroke\", \"#000\"));\r\n\r\n            tick = tick.merge(tickEnter);\r\n\r\n            line = line.merge(tickEnter.append(\"line\")\r\n                .attr(\"stroke\", \"#000\")\r\n                .attr(x + \"2\", k * tickSizeInner));\r\n\r\n            text = text.merge(tickEnter.append(\"text\")\r\n                .attr(\"fill\", \"#000\")\r\n                .attr(x, k * spacing)\r\n                .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\r\n\r\n            if (context !== selection) {\r\n                path = path.transition(context);\r\n                tick = tick.transition(context);\r\n                line = line.transition(context);\r\n                text = text.transition(context);\r\n\r\n                tickExit = tickExit.transition(context)\r\n                    .attr(\"opacity\", epsilon$2)\r\n                    .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\r\n\r\n                tickEnter\r\n                    .attr(\"opacity\", epsilon$2)\r\n                    .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\r\n            }\r\n\r\n            tickExit.remove();\r\n\r\n            path\r\n                .attr(\"d\", orient === left || orient == right\r\n                    ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\r\n                    : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\r\n\r\n            tick\r\n                .attr(\"opacity\", 1)\r\n                .attr(\"transform\", function(d) { return transform(position(d)); });\r\n\r\n            line\r\n                .attr(x + \"2\", k * tickSizeInner);\r\n\r\n            text\r\n                .attr(x, k * spacing)\r\n                .text(format);\r\n\r\n            selection.filter(entering)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"font-size\", 10)\r\n                .attr(\"font-family\", \"sans-serif\")\r\n                .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\r\n\r\n            selection\r\n                .each(function() { this.__axis = position; });\r\n        }\r\n\r\n        axis.scale = function(_) {\r\n            return arguments.length ? (scale = _, axis) : scale;\r\n        };\r\n\r\n        axis.ticks = function() {\r\n            return tickArguments = slice$3.call(arguments), axis;\r\n        };\r\n\r\n        axis.tickArguments = function(_) {\r\n            return arguments.length ? (tickArguments = _ == null ? [] : slice$3.call(_), axis) : tickArguments.slice();\r\n        };\r\n\r\n        axis.tickValues = function(_) {\r\n            return arguments.length ? (tickValues = _ == null ? null : slice$3.call(_), axis) : tickValues && tickValues.slice();\r\n        };\r\n\r\n        axis.tickFormat = function(_) {\r\n            return arguments.length ? (tickFormat = _, axis) : tickFormat;\r\n        };\r\n\r\n        axis.tickSize = function(_) {\r\n            return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\r\n        };\r\n\r\n        axis.tickSizeInner = function(_) {\r\n            return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\r\n        };\r\n\r\n        axis.tickSizeOuter = function(_) {\r\n            return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\r\n        };\r\n\r\n        axis.tickPadding = function(_) {\r\n            return arguments.length ? (tickPadding = +_, axis) : tickPadding;\r\n        };\r\n\r\n        return axis;\r\n    }\r\n\r\n    function axisTop(scale) {\r\n        return axis(top, scale);\r\n    }\r\n\r\n    function axisRight(scale) {\r\n        return axis(right, scale);\r\n    }\r\n\r\n    function axisBottom(scale) {\r\n        return axis(bottom, scale);\r\n    }\r\n\r\n    function axisLeft(scale) {\r\n        return axis(left, scale);\r\n    }\r\n\r\n    var noop$1 = {value: function() {}};\r\n\r\n    function dispatch() {\r\n        for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\r\n            if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\r\n            _[t] = [];\r\n        }\r\n        return new Dispatch(_);\r\n    }\r\n\r\n    function Dispatch(_) {\r\n        this._ = _;\r\n    }\r\n\r\n    function parseTypenames$1(typenames, types) {\r\n        return typenames.trim().split(/^|\\s+/).map(function(t) {\r\n            var name = \"\", i = t.indexOf(\".\");\r\n            if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\r\n            if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\r\n            return {type: t, name: name};\r\n        });\r\n    }\r\n\r\n    Dispatch.prototype = dispatch.prototype = {\r\n        constructor: Dispatch,\r\n        on: function(typename, callback) {\r\n            var _ = this._,\r\n                T = parseTypenames$1(typename + \"\", _),\r\n                t,\r\n                i = -1,\r\n                n = T.length;\r\n\r\n            // If no callback was specified, return the callback of the given type and name.\r\n            if (arguments.length < 2) {\r\n                while (++i < n) if ((t = (typename = T[i]).type) && (t = get$1(_[t], typename.name))) return t;\r\n                return;\r\n            }\r\n\r\n            // If a type was specified, set the callback for the given type and name.\r\n            // Otherwise, if a null callback was specified, remove callbacks of the given name.\r\n            if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\r\n            while (++i < n) {\r\n                if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\r\n                else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        copy: function() {\r\n            var copy = {}, _ = this._;\r\n            for (var t in _) copy[t] = _[t].slice();\r\n            return new Dispatch(copy);\r\n        },\r\n        call: function(type, that) {\r\n            if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\r\n            if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\r\n            for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\r\n        },\r\n        apply: function(type, that, args) {\r\n            if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\r\n            for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\r\n        }\r\n    };\r\n\r\n    function get$1(type, name) {\r\n        for (var i = 0, n = type.length, c; i < n; ++i) {\r\n            if ((c = type[i]).name === name) {\r\n                return c.value;\r\n            }\r\n        }\r\n    }\r\n\r\n    function set$2(type, name, callback) {\r\n        for (var i = 0, n = type.length; i < n; ++i) {\r\n            if (type[i].name === name) {\r\n                type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        if (callback != null) type.push({name: name, value: callback});\r\n        return type;\r\n    }\r\n\r\n    var frame = 0;\r\n    var timeout = 0;\r\n    var interval = 0;\r\n    var pokeDelay = 1000;\r\n    var taskHead;\r\n    var taskTail;\r\n    var clockLast = 0;\r\n    var clockNow = 0;\r\n    var clockSkew = 0;\r\n    var clock = typeof performance === \"object\" && performance.now ? performance : Date;\r\n    var setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\r\n    function now() {\r\n        return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\r\n    }\r\n\r\n    function clearNow() {\r\n        clockNow = 0;\r\n    }\r\n\r\n    function Timer() {\r\n        this._call =\r\n            this._time =\r\n                this._next = null;\r\n    }\r\n\r\n    Timer.prototype = timer.prototype = {\r\n        constructor: Timer,\r\n        restart: function(callback, delay, time) {\r\n            if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\r\n            time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\r\n            if (!this._next && taskTail !== this) {\r\n                if (taskTail) taskTail._next = this;\r\n                else taskHead = this;\r\n                taskTail = this;\r\n            }\r\n            this._call = callback;\r\n            this._time = time;\r\n            sleep();\r\n        },\r\n        stop: function() {\r\n            if (this._call) {\r\n                this._call = null;\r\n                this._time = Infinity;\r\n                sleep();\r\n            }\r\n        }\r\n    };\r\n\r\n    function timer(callback, delay, time) {\r\n        var t = new Timer;\r\n        t.restart(callback, delay, time);\r\n        return t;\r\n    }\r\n\r\n    function timerFlush() {\r\n        now(); // Get the current time, if not already set.\r\n        ++frame; // Pretend we’ve set an alarm, if we haven’t already.\r\n        var t = taskHead, e;\r\n        while (t) {\r\n            if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\r\n            t = t._next;\r\n        }\r\n        --frame;\r\n    }\r\n\r\n    function wake() {\r\n        clockNow = (clockLast = clock.now()) + clockSkew;\r\n        frame = timeout = 0;\r\n        try {\r\n            timerFlush();\r\n        } finally {\r\n            frame = 0;\r\n            nap();\r\n            clockNow = 0;\r\n        }\r\n    }\r\n\r\n    function poke() {\r\n        var now = clock.now(), delay = now - clockLast;\r\n        if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\r\n    }\r\n\r\n    function nap() {\r\n        var t0, t1 = taskHead, t2, time = Infinity;\r\n        while (t1) {\r\n            if (t1._call) {\r\n                if (time > t1._time) time = t1._time;\r\n                t0 = t1, t1 = t1._next;\r\n            } else {\r\n                t2 = t1._next, t1._next = null;\r\n                t1 = t0 ? t0._next = t2 : taskHead = t2;\r\n            }\r\n        }\r\n        taskTail = t0;\r\n        sleep(time);\r\n    }\r\n\r\n    function sleep(time) {\r\n        if (frame) return; // Soonest alarm already set, or will be.\r\n        if (timeout) timeout = clearTimeout(timeout);\r\n        var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\r\n        if (delay > 24) {\r\n            if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\r\n            if (interval) interval = clearInterval(interval);\r\n        } else {\r\n            if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\r\n            frame = 1, setFrame(wake);\r\n        }\r\n    }\r\n\r\n    function timeout$1(callback, delay, time) {\r\n        var t = new Timer;\r\n        delay = delay == null ? 0 : +delay;\r\n        t.restart(function(elapsed) {\r\n            t.stop();\r\n            callback(elapsed + delay);\r\n        }, delay, time);\r\n        return t;\r\n    }\r\n\r\n    var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\r\n    var emptyTween = [];\r\n\r\n    var CREATED = 0;\r\n    var SCHEDULED = 1;\r\n    var STARTING = 2;\r\n    var STARTED = 3;\r\n    var RUNNING = 4;\r\n    var ENDING = 5;\r\n    var ENDED = 6;\r\n\r\n    function schedule(node, name, id, index, group, timing) {\r\n        var schedules = node.__transition;\r\n        if (!schedules) node.__transition = {};\r\n        else if (id in schedules) return;\r\n        create(node, id, {\r\n            name: name,\r\n            index: index, // For context during callback.\r\n            group: group, // For context during callback.\r\n            on: emptyOn,\r\n            tween: emptyTween,\r\n            time: timing.time,\r\n            delay: timing.delay,\r\n            duration: timing.duration,\r\n            ease: timing.ease,\r\n            timer: null,\r\n            state: CREATED\r\n        });\r\n    }\r\n\r\n    function init(node, id) {\r\n        var schedule = node.__transition;\r\n        if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\r\n        return schedule;\r\n    }\r\n\r\n    function set$1(node, id) {\r\n        var schedule = node.__transition;\r\n        if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\r\n        return schedule;\r\n    }\r\n\r\n    function get(node, id) {\r\n        var schedule = node.__transition;\r\n        if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\r\n        return schedule;\r\n    }\r\n\r\n    function create(node, id, self) {\r\n        var schedules = node.__transition,\r\n            tween;\r\n\r\n        // Initialize the self timer when the transition is created.\r\n        // Note the actual delay is not known until the first callback!\r\n        schedules[id] = self;\r\n        self.timer = timer(schedule, 0, self.time);\r\n\r\n        function schedule(elapsed) {\r\n            self.state = SCHEDULED;\r\n            self.timer.restart(start, self.delay, self.time);\r\n\r\n            // If the elapsed delay is less than our first sleep, start immediately.\r\n            if (self.delay <= elapsed) start(elapsed - self.delay);\r\n        }\r\n\r\n        function start(elapsed) {\r\n            var i, j, n, o;\r\n\r\n            // If the state is not SCHEDULED, then we previously errored on start.\r\n            if (self.state !== SCHEDULED) return stop();\r\n\r\n            for (i in schedules) {\r\n                o = schedules[i];\r\n                if (o.name !== self.name) continue;\r\n\r\n                // While this element already has a starting transition during this frame,\r\n                // defer starting an interrupting transition until that transition has a\r\n                // chance to tick (and possibly end); see d3/d3-transition#54!\r\n                if (o.state === STARTED) return timeout$1(start);\r\n\r\n                // Interrupt the active transition, if any.\r\n                // Dispatch the interrupt event.\r\n                if (o.state === RUNNING) {\r\n                    o.state = ENDED;\r\n                    o.timer.stop();\r\n                    o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\r\n                    delete schedules[i];\r\n                }\r\n\r\n                // Cancel any pre-empted transitions. No interrupt event is dispatched\r\n                // because the cancelled transitions never started. Note that this also\r\n                // removes this transition from the pending list!\r\n                else if (+i < id) {\r\n                    o.state = ENDED;\r\n                    o.timer.stop();\r\n                    delete schedules[i];\r\n                }\r\n            }\r\n\r\n            // Defer the first tick to end of the current frame; see d3/d3#1576.\r\n            // Note the transition may be canceled after start and before the first tick!\r\n            // Note this must be scheduled before the start event; see d3/d3-transition#16!\r\n            // Assuming this is successful, subsequent callbacks go straight to tick.\r\n            timeout$1(function() {\r\n                if (self.state === STARTED) {\r\n                    self.state = RUNNING;\r\n                    self.timer.restart(tick, self.delay, self.time);\r\n                    tick(elapsed);\r\n                }\r\n            });\r\n\r\n            // Dispatch the start event.\r\n            // Note this must be done before the tween are initialized.\r\n            self.state = STARTING;\r\n            self.on.call(\"start\", node, node.__data__, self.index, self.group);\r\n            if (self.state !== STARTING) return; // interrupted\r\n            self.state = STARTED;\r\n\r\n            // Initialize the tween, deleting null tween.\r\n            tween = new Array(n = self.tween.length);\r\n            for (i = 0, j = -1; i < n; ++i) {\r\n                if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\r\n                    tween[++j] = o;\r\n                }\r\n            }\r\n            tween.length = j + 1;\r\n        }\r\n\r\n        function tick(elapsed) {\r\n            var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\r\n                i = -1,\r\n                n = tween.length;\r\n\r\n            while (++i < n) {\r\n                tween[i].call(null, t);\r\n            }\r\n\r\n            // Dispatch the end event.\r\n            if (self.state === ENDING) {\r\n                self.on.call(\"end\", node, node.__data__, self.index, self.group);\r\n                stop();\r\n            }\r\n        }\r\n\r\n        function stop() {\r\n            self.state = ENDED;\r\n            self.timer.stop();\r\n            delete schedules[id];\r\n            for (var i in schedules) return; // eslint-disable-line no-unused-vars\r\n            delete node.__transition;\r\n        }\r\n    }\r\n\r\n    function interrupt(node, name) {\r\n        var schedules = node.__transition,\r\n            schedule,\r\n            active,\r\n            empty = true,\r\n            i;\r\n\r\n        if (!schedules) return;\r\n\r\n        name = name == null ? null : name + \"\";\r\n\r\n        for (i in schedules) {\r\n            if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\r\n            active = schedule.state > STARTING && schedule.state < ENDING;\r\n            schedule.state = ENDED;\r\n            schedule.timer.stop();\r\n            if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\r\n            delete schedules[i];\r\n        }\r\n\r\n        if (empty) delete node.__transition;\r\n    }\r\n\r\n    function selection_interrupt(name) {\r\n        return this.each(function() {\r\n            interrupt(this, name);\r\n        });\r\n    }\r\n\r\n    function tweenRemove(id, name) {\r\n        var tween0, tween1;\r\n        return function() {\r\n            var schedule = set$1(this, id),\r\n                tween = schedule.tween;\r\n\r\n            // If this node shared tween with the previous node,\r\n            // just assign the updated shared tween and we’re done!\r\n            // Otherwise, copy-on-write.\r\n            if (tween !== tween0) {\r\n                tween1 = tween0 = tween;\r\n                for (var i = 0, n = tween1.length; i < n; ++i) {\r\n                    if (tween1[i].name === name) {\r\n                        tween1 = tween1.slice();\r\n                        tween1.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            schedule.tween = tween1;\r\n        };\r\n    }\r\n\r\n    function tweenFunction(id, name, value) {\r\n        var tween0, tween1;\r\n        if (typeof value !== \"function\") throw new Error;\r\n        return function() {\r\n            var schedule = set$1(this, id),\r\n                tween = schedule.tween;\r\n\r\n            // If this node shared tween with the previous node,\r\n            // just assign the updated shared tween and we’re done!\r\n            // Otherwise, copy-on-write.\r\n            if (tween !== tween0) {\r\n                tween1 = (tween0 = tween).slice();\r\n                for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\r\n                    if (tween1[i].name === name) {\r\n                        tween1[i] = t;\r\n                        break;\r\n                    }\r\n                }\r\n                if (i === n) tween1.push(t);\r\n            }\r\n\r\n            schedule.tween = tween1;\r\n        };\r\n    }\r\n\r\n    function transition_tween(name, value) {\r\n        var id = this._id;\r\n\r\n        name += \"\";\r\n\r\n        if (arguments.length < 2) {\r\n            var tween = get(this.node(), id).tween;\r\n            for (var i = 0, n = tween.length, t; i < n; ++i) {\r\n                if ((t = tween[i]).name === name) {\r\n                    return t.value;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\r\n    }\r\n\r\n    function tweenValue(transition, name, value) {\r\n        var id = transition._id;\r\n\r\n        transition.each(function() {\r\n            var schedule = set$1(this, id);\r\n            (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\r\n        });\r\n\r\n        return function(node) {\r\n            return get(node, id).value[name];\r\n        };\r\n    }\r\n\r\n    function csuiDefine$2(constructor, factory, prototype) {\r\n        constructor.prototype = factory.prototype = prototype;\r\n        prototype.constructor = constructor;\r\n    }\r\n\r\n    function extend$2(parent, definition) {\r\n        var prototype = Object.create(parent.prototype);\r\n        for (var key in definition) prototype[key] = definition[key];\r\n        return prototype;\r\n    }\r\n\r\n    function Color$2() {}\r\n\r\n    var darker$2 = 0.7;\r\n    var brighter$2 = 1 / darker$2;\r\n\r\n    var reI$2 = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\r\n    var reN$2 = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\r\n    var reP$2 = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\r\n    var reHex3$2 = /^#([0-9a-f]{3})$/;\r\n    var reHex6$2 = /^#([0-9a-f]{6})$/;\r\n    var reRgbInteger$2 = new RegExp(\"^rgb\\\\(\" + [reI$2, reI$2, reI$2] + \"\\\\)$\");\r\n    var reRgbPercent$2 = new RegExp(\"^rgb\\\\(\" + [reP$2, reP$2, reP$2] + \"\\\\)$\");\r\n    var reRgbaInteger$2 = new RegExp(\"^rgba\\\\(\" + [reI$2, reI$2, reI$2, reN$2] + \"\\\\)$\");\r\n    var reRgbaPercent$2 = new RegExp(\"^rgba\\\\(\" + [reP$2, reP$2, reP$2, reN$2] + \"\\\\)$\");\r\n    var reHslPercent$2 = new RegExp(\"^hsl\\\\(\" + [reN$2, reP$2, reP$2] + \"\\\\)$\");\r\n    var reHslaPercent$2 = new RegExp(\"^hsla\\\\(\" + [reN$2, reP$2, reP$2, reN$2] + \"\\\\)$\");\r\n    var named$2 = {\r\n        aliceblue: 0xf0f8ff,\r\n        antiquewhite: 0xfaebd7,\r\n        aqua: 0x00ffff,\r\n        aquamarine: 0x7fffd4,\r\n        azure: 0xf0ffff,\r\n        beige: 0xf5f5dc,\r\n        bisque: 0xffe4c4,\r\n        black: 0x000000,\r\n        blanchedalmond: 0xffebcd,\r\n        blue: 0x0000ff,\r\n        blueviolet: 0x8a2be2,\r\n        brown: 0xa52a2a,\r\n        burlywood: 0xdeb887,\r\n        cadetblue: 0x5f9ea0,\r\n        chartreuse: 0x7fff00,\r\n        chocolate: 0xd2691e,\r\n        coral: 0xff7f50,\r\n        cornflowerblue: 0x6495ed,\r\n        cornsilk: 0xfff8dc,\r\n        crimson: 0xdc143c,\r\n        cyan: 0x00ffff,\r\n        darkblue: 0x00008b,\r\n        darkcyan: 0x008b8b,\r\n        darkgoldenrod: 0xb8860b,\r\n        darkgray: 0xa9a9a9,\r\n        darkgreen: 0x006400,\r\n        darkgrey: 0xa9a9a9,\r\n        darkkhaki: 0xbdb76b,\r\n        darkmagenta: 0x8b008b,\r\n        darkolivegreen: 0x556b2f,\r\n        darkorange: 0xff8c00,\r\n        darkorchid: 0x9932cc,\r\n        darkred: 0x8b0000,\r\n        darksalmon: 0xe9967a,\r\n        darkseagreen: 0x8fbc8f,\r\n        darkslateblue: 0x483d8b,\r\n        darkslategray: 0x2f4f4f,\r\n        darkslategrey: 0x2f4f4f,\r\n        darkturquoise: 0x00ced1,\r\n        darkviolet: 0x9400d3,\r\n        deeppink: 0xff1493,\r\n        deepskyblue: 0x00bfff,\r\n        dimgray: 0x696969,\r\n        dimgrey: 0x696969,\r\n        dodgerblue: 0x1e90ff,\r\n        firebrick: 0xb22222,\r\n        floralwhite: 0xfffaf0,\r\n        forestgreen: 0x228b22,\r\n        fuchsia: 0xff00ff,\r\n        gainsboro: 0xdcdcdc,\r\n        ghostwhite: 0xf8f8ff,\r\n        gold: 0xffd700,\r\n        goldenrod: 0xdaa520,\r\n        gray: 0x808080,\r\n        green: 0x008000,\r\n        greenyellow: 0xadff2f,\r\n        grey: 0x808080,\r\n        honeydew: 0xf0fff0,\r\n        hotpink: 0xff69b4,\r\n        indianred: 0xcd5c5c,\r\n        indigo: 0x4b0082,\r\n        ivory: 0xfffff0,\r\n        khaki: 0xf0e68c,\r\n        lavender: 0xe6e6fa,\r\n        lavenderblush: 0xfff0f5,\r\n        lawngreen: 0x7cfc00,\r\n        lemonchiffon: 0xfffacd,\r\n        lightblue: 0xadd8e6,\r\n        lightcoral: 0xf08080,\r\n        lightcyan: 0xe0ffff,\r\n        lightgoldenrodyellow: 0xfafad2,\r\n        lightgray: 0xd3d3d3,\r\n        lightgreen: 0x90ee90,\r\n        lightgrey: 0xd3d3d3,\r\n        lightpink: 0xffb6c1,\r\n        lightsalmon: 0xffa07a,\r\n        lightseagreen: 0x20b2aa,\r\n        lightskyblue: 0x87cefa,\r\n        lightslategray: 0x778899,\r\n        lightslategrey: 0x778899,\r\n        lightsteelblue: 0xb0c4de,\r\n        lightyellow: 0xffffe0,\r\n        lime: 0x00ff00,\r\n        limegreen: 0x32cd32,\r\n        linen: 0xfaf0e6,\r\n        magenta: 0xff00ff,\r\n        maroon: 0x800000,\r\n        mediumaquamarine: 0x66cdaa,\r\n        mediumblue: 0x0000cd,\r\n        mediumorchid: 0xba55d3,\r\n        mediumpurple: 0x9370db,\r\n        mediumseagreen: 0x3cb371,\r\n        mediumslateblue: 0x7b68ee,\r\n        mediumspringgreen: 0x00fa9a,\r\n        mediumturquoise: 0x48d1cc,\r\n        mediumvioletred: 0xc71585,\r\n        midnightblue: 0x191970,\r\n        mintcream: 0xf5fffa,\r\n        mistyrose: 0xffe4e1,\r\n        moccasin: 0xffe4b5,\r\n        navajowhite: 0xffdead,\r\n        navy: 0x000080,\r\n        oldlace: 0xfdf5e6,\r\n        olive: 0x808000,\r\n        olivedrab: 0x6b8e23,\r\n        orange: 0xffa500,\r\n        orangered: 0xff4500,\r\n        orchid: 0xda70d6,\r\n        palegoldenrod: 0xeee8aa,\r\n        palegreen: 0x98fb98,\r\n        paleturquoise: 0xafeeee,\r\n        palevioletred: 0xdb7093,\r\n        papayawhip: 0xffefd5,\r\n        peachpuff: 0xffdab9,\r\n        peru: 0xcd853f,\r\n        pink: 0xffc0cb,\r\n        plum: 0xdda0dd,\r\n        powderblue: 0xb0e0e6,\r\n        purple: 0x800080,\r\n        rebeccapurple: 0x663399,\r\n        red: 0xff0000,\r\n        rosybrown: 0xbc8f8f,\r\n        royalblue: 0x4169e1,\r\n        saddlebrown: 0x8b4513,\r\n        salmon: 0xfa8072,\r\n        sandybrown: 0xf4a460,\r\n        seagreen: 0x2e8b57,\r\n        seashell: 0xfff5ee,\r\n        sienna: 0xa0522d,\r\n        silver: 0xc0c0c0,\r\n        skyblue: 0x87ceeb,\r\n        slateblue: 0x6a5acd,\r\n        slategray: 0x708090,\r\n        slategrey: 0x708090,\r\n        snow: 0xfffafa,\r\n        springgreen: 0x00ff7f,\r\n        steelblue: 0x4682b4,\r\n        tan: 0xd2b48c,\r\n        teal: 0x008080,\r\n        thistle: 0xd8bfd8,\r\n        tomato: 0xff6347,\r\n        turquoise: 0x40e0d0,\r\n        violet: 0xee82ee,\r\n        wheat: 0xf5deb3,\r\n        white: 0xffffff,\r\n        whitesmoke: 0xf5f5f5,\r\n        yellow: 0xffff00,\r\n        yellowgreen: 0x9acd32\r\n    };\r\n\r\n    csuiDefine$2(Color$2, color$2, {\r\n        displayable: function() {\r\n            return this.rgb().displayable();\r\n        },\r\n        toString: function() {\r\n            return this.rgb() + \"\";\r\n        }\r\n    });\r\n\r\n    function color$2(format) {\r\n        var m;\r\n        format = (format + \"\").trim().toLowerCase();\r\n        return (m = reHex3$2.exec(format)) ? (m = parseInt(m[1], 16), new Rgb$2((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\r\n            : (m = reHex6$2.exec(format)) ? rgbn$2(parseInt(m[1], 16)) // #ff0000\r\n                : (m = reRgbInteger$2.exec(format)) ? new Rgb$2(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\r\n                    : (m = reRgbPercent$2.exec(format)) ? new Rgb$2(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\r\n                        : (m = reRgbaInteger$2.exec(format)) ? rgba$2(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\r\n                            : (m = reRgbaPercent$2.exec(format)) ? rgba$2(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\r\n                                : (m = reHslPercent$2.exec(format)) ? hsla$2(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\r\n                                    : (m = reHslaPercent$2.exec(format)) ? hsla$2(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\r\n                                        : named$2.hasOwnProperty(format) ? rgbn$2(named$2[format])\r\n                                            : format === \"transparent\" ? new Rgb$2(NaN, NaN, NaN, 0)\r\n                                                : null;\r\n    }\r\n\r\n    function rgbn$2(n) {\r\n        return new Rgb$2(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\r\n    }\r\n\r\n    function rgba$2(r, g, b, a) {\r\n        if (a <= 0) r = g = b = NaN;\r\n        return new Rgb$2(r, g, b, a);\r\n    }\r\n\r\n    function rgbConvert$2(o) {\r\n        if (!(o instanceof Color$2)) o = color$2(o);\r\n        if (!o) return new Rgb$2;\r\n        o = o.rgb();\r\n        return new Rgb$2(o.r, o.g, o.b, o.opacity);\r\n    }\r\n\r\n    function rgb$1(r, g, b, opacity) {\r\n        return arguments.length === 1 ? rgbConvert$2(r) : new Rgb$2(r, g, b, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Rgb$2(r, g, b, opacity) {\r\n        this.r = +r;\r\n        this.g = +g;\r\n        this.b = +b;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$2(Rgb$2, rgb$1, extend$2(Color$2, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter$2 : Math.pow(brighter$2, k);\r\n            return new Rgb$2(this.r * k, this.g * k, this.b * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker$2 : Math.pow(darker$2, k);\r\n            return new Rgb$2(this.r * k, this.g * k, this.b * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            return this;\r\n        },\r\n        displayable: function() {\r\n            return (0 <= this.r && this.r <= 255)\r\n                && (0 <= this.g && this.g <= 255)\r\n                && (0 <= this.b && this.b <= 255)\r\n                && (0 <= this.opacity && this.opacity <= 1);\r\n        },\r\n        toString: function() {\r\n            var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\r\n            return (a === 1 ? \"rgb(\" : \"rgba(\")\r\n                + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\r\n                + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\r\n                + Math.max(0, Math.min(255, Math.round(this.b) || 0))\r\n                + (a === 1 ? \")\" : \", \" + a + \")\");\r\n        }\r\n    }));\r\n\r\n    function hsla$2(h, s, l, a) {\r\n        if (a <= 0) h = s = l = NaN;\r\n        else if (l <= 0 || l >= 1) h = s = NaN;\r\n        else if (s <= 0) h = NaN;\r\n        return new Hsl$2(h, s, l, a);\r\n    }\r\n\r\n    function hslConvert$2(o) {\r\n        if (o instanceof Hsl$2) return new Hsl$2(o.h, o.s, o.l, o.opacity);\r\n        if (!(o instanceof Color$2)) o = color$2(o);\r\n        if (!o) return new Hsl$2;\r\n        if (o instanceof Hsl$2) return o;\r\n        o = o.rgb();\r\n        var r = o.r / 255,\r\n            g = o.g / 255,\r\n            b = o.b / 255,\r\n            min = Math.min(r, g, b),\r\n            max = Math.max(r, g, b),\r\n            h = NaN,\r\n            s = max - min,\r\n            l = (max + min) / 2;\r\n        if (s) {\r\n            if (r === max) h = (g - b) / s + (g < b) * 6;\r\n            else if (g === max) h = (b - r) / s + 2;\r\n            else h = (r - g) / s + 4;\r\n            s /= l < 0.5 ? max + min : 2 - max - min;\r\n            h *= 60;\r\n        } else {\r\n            s = l > 0 && l < 1 ? 0 : h;\r\n        }\r\n        return new Hsl$2(h, s, l, o.opacity);\r\n    }\r\n\r\n    function hsl$3(h, s, l, opacity) {\r\n        return arguments.length === 1 ? hslConvert$2(h) : new Hsl$2(h, s, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Hsl$2(h, s, l, opacity) {\r\n        this.h = +h;\r\n        this.s = +s;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$2(Hsl$2, hsl$3, extend$2(Color$2, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter$2 : Math.pow(brighter$2, k);\r\n            return new Hsl$2(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker$2 : Math.pow(darker$2, k);\r\n            return new Hsl$2(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var h = this.h % 360 + (this.h < 0) * 360,\r\n                s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\r\n                l = this.l,\r\n                m2 = l + (l < 0.5 ? l : 1 - l) * s,\r\n                m1 = 2 * l - m2;\r\n            return new Rgb$2(\r\n                hsl2rgb$2(h >= 240 ? h - 240 : h + 120, m1, m2),\r\n                hsl2rgb$2(h, m1, m2),\r\n                hsl2rgb$2(h < 120 ? h + 240 : h - 120, m1, m2),\r\n                this.opacity\r\n            );\r\n        },\r\n        displayable: function() {\r\n            return (0 <= this.s && this.s <= 1 || isNaN(this.s))\r\n                && (0 <= this.l && this.l <= 1)\r\n                && (0 <= this.opacity && this.opacity <= 1);\r\n        }\r\n    }));\r\n\r\n    /* From FvD 13.37, CSS Color Module Level 3 */\r\n    function hsl2rgb$2(h, m1, m2) {\r\n        return (h < 60 ? m1 + (m2 - m1) * h / 60\r\n                : h < 180 ? m2\r\n                    : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\r\n                        : m1) * 255;\r\n    }\r\n\r\n    var deg2rad$2 = Math.PI / 180;\r\n    var rad2deg$2 = 180 / Math.PI;\r\n\r\n    var Kn$2 = 18;\r\n    var Xn$2 = 0.950470;\r\n    var Yn$2 = 1;\r\n    var Zn$2 = 1.088830;\r\n    var t0$3 = 4 / 29;\r\n    var t1$3 = 6 / 29;\r\n    var t2$2 = 3 * t1$3 * t1$3;\r\n    var t3$2 = t1$3 * t1$3 * t1$3;\r\n    function labConvert$2(o) {\r\n        if (o instanceof Lab$2) return new Lab$2(o.l, o.a, o.b, o.opacity);\r\n        if (o instanceof Hcl$2) {\r\n            var h = o.h * deg2rad$2;\r\n            return new Lab$2(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\r\n        }\r\n        if (!(o instanceof Rgb$2)) o = rgbConvert$2(o);\r\n        var b = rgb2xyz$2(o.r),\r\n            a = rgb2xyz$2(o.g),\r\n            l = rgb2xyz$2(o.b),\r\n            x = xyz2lab$2((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn$2),\r\n            y = xyz2lab$2((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn$2),\r\n            z = xyz2lab$2((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn$2);\r\n        return new Lab$2(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\r\n    }\r\n\r\n    function lab$3(l, a, b, opacity) {\r\n        return arguments.length === 1 ? labConvert$2(l) : new Lab$2(l, a, b, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Lab$2(l, a, b, opacity) {\r\n        this.l = +l;\r\n        this.a = +a;\r\n        this.b = +b;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$2(Lab$2, lab$3, extend$2(Color$2, {\r\n        brighter: function(k) {\r\n            return new Lab$2(this.l + Kn$2 * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            return new Lab$2(this.l - Kn$2 * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var y = (this.l + 16) / 116,\r\n                x = isNaN(this.a) ? y : y + this.a / 500,\r\n                z = isNaN(this.b) ? y : y - this.b / 200;\r\n            y = Yn$2 * lab2xyz$2(y);\r\n            x = Xn$2 * lab2xyz$2(x);\r\n            z = Zn$2 * lab2xyz$2(z);\r\n            return new Rgb$2(\r\n                xyz2rgb$2( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\r\n                xyz2rgb$2(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\r\n                xyz2rgb$2( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\r\n                this.opacity\r\n            );\r\n        }\r\n    }));\r\n\r\n    function xyz2lab$2(t) {\r\n        return t > t3$2 ? Math.pow(t, 1 / 3) : t / t2$2 + t0$3;\r\n    }\r\n\r\n    function lab2xyz$2(t) {\r\n        return t > t1$3 ? t * t * t : t2$2 * (t - t0$3);\r\n    }\r\n\r\n    function xyz2rgb$2(x) {\r\n        return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\r\n    }\r\n\r\n    function rgb2xyz$2(x) {\r\n        return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\r\n    }\r\n\r\n    function hclConvert$2(o) {\r\n        if (o instanceof Hcl$2) return new Hcl$2(o.h, o.c, o.l, o.opacity);\r\n        if (!(o instanceof Lab$2)) o = labConvert$2(o);\r\n        var h = Math.atan2(o.b, o.a) * rad2deg$2;\r\n        return new Hcl$2(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\r\n    }\r\n\r\n    function hcl$3(h, c, l, opacity) {\r\n        return arguments.length === 1 ? hclConvert$2(h) : new Hcl$2(h, c, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Hcl$2(h, c, l, opacity) {\r\n        this.h = +h;\r\n        this.c = +c;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$2(Hcl$2, hcl$3, extend$2(Color$2, {\r\n        brighter: function(k) {\r\n            return new Hcl$2(this.h, this.c, this.l + Kn$2 * (k == null ? 1 : k), this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            return new Hcl$2(this.h, this.c, this.l - Kn$2 * (k == null ? 1 : k), this.opacity);\r\n        },\r\n        rgb: function() {\r\n            return labConvert$2(this).rgb();\r\n        }\r\n    }));\r\n\r\n    var A$2 = -0.14861;\r\n    var B$2 = +1.78277;\r\n    var C$2 = -0.29227;\r\n    var D$2 = -0.90649;\r\n    var E$2 = +1.97294;\r\n    var ED$2 = E$2 * D$2;\r\n    var EB$2 = E$2 * B$2;\r\n    var BC_DA$2 = B$2 * C$2 - D$2 * A$2;\r\n    function cubehelixConvert$2(o) {\r\n        if (o instanceof Cubehelix$2) return new Cubehelix$2(o.h, o.s, o.l, o.opacity);\r\n        if (!(o instanceof Rgb$2)) o = rgbConvert$2(o);\r\n        var r = o.r / 255,\r\n            g = o.g / 255,\r\n            b = o.b / 255,\r\n            l = (BC_DA$2 * b + ED$2 * r - EB$2 * g) / (BC_DA$2 + ED$2 - EB$2),\r\n            bl = b - l,\r\n            k = (E$2 * (g - l) - C$2 * bl) / D$2,\r\n            s = Math.sqrt(k * k + bl * bl) / (E$2 * l * (1 - l)), // NaN if l=0 or l=1\r\n            h = s ? Math.atan2(k, bl) * rad2deg$2 - 120 : NaN;\r\n        return new Cubehelix$2(h < 0 ? h + 360 : h, s, l, o.opacity);\r\n    }\r\n\r\n    function cubehelix$5(h, s, l, opacity) {\r\n        return arguments.length === 1 ? cubehelixConvert$2(h) : new Cubehelix$2(h, s, l, opacity == null ? 1 : opacity);\r\n    }\r\n\r\n    function Cubehelix$2(h, s, l, opacity) {\r\n        this.h = +h;\r\n        this.s = +s;\r\n        this.l = +l;\r\n        this.opacity = +opacity;\r\n    }\r\n\r\n    csuiDefine$2(Cubehelix$2, cubehelix$5, extend$2(Color$2, {\r\n        brighter: function(k) {\r\n            k = k == null ? brighter$2 : Math.pow(brighter$2, k);\r\n            return new Cubehelix$2(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        darker: function(k) {\r\n            k = k == null ? darker$2 : Math.pow(darker$2, k);\r\n            return new Cubehelix$2(this.h, this.s, this.l * k, this.opacity);\r\n        },\r\n        rgb: function() {\r\n            var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad$2,\r\n                l = +this.l,\r\n                a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\r\n                cosh = Math.cos(h),\r\n                sinh = Math.sin(h);\r\n            return new Rgb$2(\r\n                255 * (l + a * (A$2 * cosh + B$2 * sinh)),\r\n                255 * (l + a * (C$2 * cosh + D$2 * sinh)),\r\n                255 * (l + a * (E$2 * cosh)),\r\n                this.opacity\r\n            );\r\n        }\r\n    }));\r\n\r\n    function interpolate(a, b) {\r\n        var c;\r\n        return (typeof b === \"number\" ? interpolateNumber\r\n            : b instanceof color$2 ? interpolateRgb\r\n                : (c = color$2(b)) ? (b = c, interpolateRgb)\r\n                    : interpolateString)(a, b);\r\n    }\r\n\r\n    function attrRemove$1(name) {\r\n        return function() {\r\n            this.removeAttribute(name);\r\n        };\r\n    }\r\n\r\n    function attrRemoveNS$1(fullname) {\r\n        return function() {\r\n            this.removeAttributeNS(fullname.space, fullname.local);\r\n        };\r\n    }\r\n\r\n    function attrConstant$1(name, interpolate, value1) {\r\n        var value00,\r\n            interpolate0;\r\n        return function() {\r\n            var value0 = this.getAttribute(name);\r\n            return value0 === value1 ? null\r\n                : value0 === value00 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value1);\r\n        };\r\n    }\r\n\r\n    function attrConstantNS$1(fullname, interpolate, value1) {\r\n        var value00,\r\n            interpolate0;\r\n        return function() {\r\n            var value0 = this.getAttributeNS(fullname.space, fullname.local);\r\n            return value0 === value1 ? null\r\n                : value0 === value00 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value1);\r\n        };\r\n    }\r\n\r\n    function attrFunction$1(name, interpolate, value) {\r\n        var value00,\r\n            value10,\r\n            interpolate0;\r\n        return function() {\r\n            var value0, value1 = value(this);\r\n            if (value1 == null) return void this.removeAttribute(name);\r\n            value0 = this.getAttribute(name);\r\n            return value0 === value1 ? null\r\n                : value0 === value00 && value1 === value10 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value10 = value1);\r\n        };\r\n    }\r\n\r\n    function attrFunctionNS$1(fullname, interpolate, value) {\r\n        var value00,\r\n            value10,\r\n            interpolate0;\r\n        return function() {\r\n            var value0, value1 = value(this);\r\n            if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\r\n            value0 = this.getAttributeNS(fullname.space, fullname.local);\r\n            return value0 === value1 ? null\r\n                : value0 === value00 && value1 === value10 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value10 = value1);\r\n        };\r\n    }\r\n\r\n    function transition_attr(name, value) {\r\n        var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate;\r\n        return this.attrTween(name, typeof value === \"function\"\r\n            ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\r\n            : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\r\n                : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\r\n    }\r\n\r\n    function attrTweenNS(fullname, value) {\r\n        function tween() {\r\n            var node = this, i = value.apply(node, arguments);\r\n            return i && function(t) {\r\n                    node.setAttributeNS(fullname.space, fullname.local, i(t));\r\n                };\r\n        }\r\n        tween._value = value;\r\n        return tween;\r\n    }\r\n\r\n    function attrTween(name, value) {\r\n        function tween() {\r\n            var node = this, i = value.apply(node, arguments);\r\n            return i && function(t) {\r\n                    node.setAttribute(name, i(t));\r\n                };\r\n        }\r\n        tween._value = value;\r\n        return tween;\r\n    }\r\n\r\n    function transition_attrTween(name, value) {\r\n        var key = \"attr.\" + name;\r\n        if (arguments.length < 2) return (key = this.tween(key)) && key._value;\r\n        if (value == null) return this.tween(key, null);\r\n        if (typeof value !== \"function\") throw new Error;\r\n        var fullname = namespace(name);\r\n        return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\r\n    }\r\n\r\n    function delayFunction(id, value) {\r\n        return function() {\r\n            init(this, id).delay = +value.apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    function delayConstant(id, value) {\r\n        return value = +value, function() {\r\n            init(this, id).delay = value;\r\n        };\r\n    }\r\n\r\n    function transition_delay(value) {\r\n        var id = this._id;\r\n\r\n        return arguments.length\r\n            ? this.each((typeof value === \"function\"\r\n                ? delayFunction\r\n                : delayConstant)(id, value))\r\n            : get(this.node(), id).delay;\r\n    }\r\n\r\n    function durationFunction(id, value) {\r\n        return function() {\r\n            set$1(this, id).duration = +value.apply(this, arguments);\r\n        };\r\n    }\r\n\r\n    function durationConstant(id, value) {\r\n        return value = +value, function() {\r\n            set$1(this, id).duration = value;\r\n        };\r\n    }\r\n\r\n    function transition_duration(value) {\r\n        var id = this._id;\r\n\r\n        return arguments.length\r\n            ? this.each((typeof value === \"function\"\r\n                ? durationFunction\r\n                : durationConstant)(id, value))\r\n            : get(this.node(), id).duration;\r\n    }\r\n\r\n    function easeConstant(id, value) {\r\n        if (typeof value !== \"function\") throw new Error;\r\n        return function() {\r\n            set$1(this, id).ease = value;\r\n        };\r\n    }\r\n\r\n    function transition_ease(value) {\r\n        var id = this._id;\r\n\r\n        return arguments.length\r\n            ? this.each(easeConstant(id, value))\r\n            : get(this.node(), id).ease;\r\n    }\r\n\r\n    function transition_filter(match) {\r\n        if (typeof match !== \"function\") match = matcher$1(match);\r\n\r\n        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\r\n                if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\r\n                    subgroup.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Transition(subgroups, this._parents, this._name, this._id);\r\n    }\r\n\r\n    function transition_merge(transition) {\r\n        if (transition._id !== this._id) throw new Error;\r\n\r\n        for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\r\n            for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\r\n                if (node = group0[i] || group1[i]) {\r\n                    merge[i] = node;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (; j < m0; ++j) {\r\n            merges[j] = groups0[j];\r\n        }\r\n\r\n        return new Transition(merges, this._parents, this._name, this._id);\r\n    }\r\n\r\n    function start(name) {\r\n        return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\r\n            var i = t.indexOf(\".\");\r\n            if (i >= 0) t = t.slice(0, i);\r\n            return !t || t === \"start\";\r\n        });\r\n    }\r\n\r\n    function onFunction(id, name, listener) {\r\n        var on0, on1, sit = start(name) ? init : set$1;\r\n        return function() {\r\n            var schedule = sit(this, id),\r\n                on = schedule.on;\r\n\r\n            // If this node shared a dispatch with the previous node,\r\n            // just assign the updated shared dispatch and we’re done!\r\n            // Otherwise, copy-on-write.\r\n            if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\r\n\r\n            schedule.on = on1;\r\n        };\r\n    }\r\n\r\n    function transition_on(name, listener) {\r\n        var id = this._id;\r\n\r\n        return arguments.length < 2\r\n            ? get(this.node(), id).on.on(name)\r\n            : this.each(onFunction(id, name, listener));\r\n    }\r\n\r\n    function removeFunction(id) {\r\n        return function() {\r\n            var parent = this.parentNode;\r\n            for (var i in this.__transition) if (+i !== id) return;\r\n            if (parent) parent.removeChild(this);\r\n        };\r\n    }\r\n\r\n    function transition_remove() {\r\n        return this.on(\"end.remove\", removeFunction(this._id));\r\n    }\r\n\r\n    function transition_select(select) {\r\n        var name = this._name,\r\n            id = this._id;\r\n\r\n        if (typeof select !== \"function\") select = selector(select);\r\n\r\n        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\r\n                if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\r\n                    if (\"__data__\" in node) subnode.__data__ = node.__data__;\r\n                    subgroup[i] = subnode;\r\n                    schedule(subgroup[i], name, id, i, subgroup, get(node, id));\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Transition(subgroups, this._parents, name, id);\r\n    }\r\n\r\n    function transition_selectAll(select) {\r\n        var name = this._name,\r\n            id = this._id;\r\n\r\n        if (typeof select !== \"function\") select = selectorAll(select);\r\n\r\n        for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n                if (node = group[i]) {\r\n                    for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\r\n                        if (child = children[k]) {\r\n                            schedule(child, name, id, k, children, inherit);\r\n                        }\r\n                    }\r\n                    subgroups.push(children);\r\n                    parents.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Transition(subgroups, parents, name, id);\r\n    }\r\n\r\n    var Selection$1 = selection.prototype.constructor;\r\n\r\n    function transition_selection() {\r\n        return new Selection$1(this._groups, this._parents);\r\n    }\r\n\r\n    function styleRemove$1(name, interpolate) {\r\n        var value00,\r\n            value10,\r\n            interpolate0;\r\n        return function() {\r\n            var value0 = style(this, name),\r\n                value1 = (this.style.removeProperty(name), style(this, name));\r\n            return value0 === value1 ? null\r\n                : value0 === value00 && value1 === value10 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value10 = value1);\r\n        };\r\n    }\r\n\r\n    function styleRemoveEnd(name) {\r\n        return function() {\r\n            this.style.removeProperty(name);\r\n        };\r\n    }\r\n\r\n    function styleConstant$1(name, interpolate, value1) {\r\n        var value00,\r\n            interpolate0;\r\n        return function() {\r\n            var value0 = style(this, name);\r\n            return value0 === value1 ? null\r\n                : value0 === value00 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value1);\r\n        };\r\n    }\r\n\r\n    function styleFunction$1(name, interpolate, value) {\r\n        var value00,\r\n            value10,\r\n            interpolate0;\r\n        return function() {\r\n            var value0 = style(this, name),\r\n                value1 = value(this);\r\n            if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\r\n            return value0 === value1 ? null\r\n                : value0 === value00 && value1 === value10 ? interpolate0\r\n                    : interpolate0 = interpolate(value00 = value0, value10 = value1);\r\n        };\r\n    }\r\n\r\n    function transition_style(name, value, priority) {\r\n        var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate;\r\n        return value == null ? this\r\n            .styleTween(name, styleRemove$1(name, i))\r\n            .on(\"end.style.\" + name, styleRemoveEnd(name))\r\n            : this.styleTween(name, typeof value === \"function\"\r\n                ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\r\n                : styleConstant$1(name, i, value + \"\"), priority);\r\n    }\r\n\r\n    function styleTween(name, value, priority) {\r\n        function tween() {\r\n            var node = this, i = value.apply(node, arguments);\r\n            return i && function(t) {\r\n                    node.style.setProperty(name, i(t), priority);\r\n                };\r\n        }\r\n        tween._value = value;\r\n        return tween;\r\n    }\r\n\r\n    function transition_styleTween(name, value, priority) {\r\n        var key = \"style.\" + (name += \"\");\r\n        if (arguments.length < 2) return (key = this.tween(key)) && key._value;\r\n        if (value == null) return this.tween(key, null);\r\n        if (typeof value !== \"function\") throw new Error;\r\n        return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\r\n    }\r\n\r\n    function textConstant$1(value) {\r\n        return function() {\r\n            this.textContent = value;\r\n        };\r\n    }\r\n\r\n    function textFunction$1(value) {\r\n        return function() {\r\n            var value1 = value(this);\r\n            this.textContent = value1 == null ? \"\" : value1;\r\n        };\r\n    }\r\n\r\n    function transition_text(value) {\r\n        return this.tween(\"text\", typeof value === \"function\"\r\n            ? textFunction$1(tweenValue(this, \"text\", value))\r\n            : textConstant$1(value == null ? \"\" : value + \"\"));\r\n    }\r\n\r\n    function transition_transition() {\r\n        var name = this._name,\r\n            id0 = this._id,\r\n            id1 = newId();\r\n\r\n        for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n                if (node = group[i]) {\r\n                    var inherit = get(node, id0);\r\n                    schedule(node, name, id1, i, group, {\r\n                        time: inherit.time + inherit.delay + inherit.duration,\r\n                        delay: 0,\r\n                        duration: inherit.duration,\r\n                        ease: inherit.ease\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Transition(groups, this._parents, name, id1);\r\n    }\r\n\r\n    var id = 0;\r\n\r\n    function Transition(groups, parents, name, id) {\r\n        this._groups = groups;\r\n        this._parents = parents;\r\n        this._name = name;\r\n        this._id = id;\r\n    }\r\n\r\n    function transition(name) {\r\n        return selection().transition(name);\r\n    }\r\n\r\n    function newId() {\r\n        return ++id;\r\n    }\r\n\r\n    var selection_prototype = selection.prototype;\r\n\r\n    Transition.prototype = transition.prototype = {\r\n        constructor: Transition,\r\n        select: transition_select,\r\n        selectAll: transition_selectAll,\r\n        filter: transition_filter,\r\n        merge: transition_merge,\r\n        selection: transition_selection,\r\n        transition: transition_transition,\r\n        call: selection_prototype.call,\r\n        nodes: selection_prototype.nodes,\r\n        node: selection_prototype.node,\r\n        size: selection_prototype.size,\r\n        empty: selection_prototype.empty,\r\n        each: selection_prototype.each,\r\n        on: transition_on,\r\n        attr: transition_attr,\r\n        attrTween: transition_attrTween,\r\n        style: transition_style,\r\n        styleTween: transition_styleTween,\r\n        text: transition_text,\r\n        remove: transition_remove,\r\n        tween: transition_tween,\r\n        delay: transition_delay,\r\n        duration: transition_duration,\r\n        ease: transition_ease\r\n    };\r\n\r\n    function cubicInOut(t) {\r\n        return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n    }\r\n\r\n    var exponent$1 = 3;\r\n\r\n    var polyIn = (function custom(e) {\r\n        e = +e;\r\n\r\n        function polyIn(t) {\r\n            return Math.pow(t, e);\r\n        }\r\n\r\n        polyIn.exponent = custom;\r\n\r\n        return polyIn;\r\n    })(exponent$1);\r\n\r\n    var polyOut = (function custom(e) {\r\n        e = +e;\r\n\r\n        function polyOut(t) {\r\n            return 1 - Math.pow(1 - t, e);\r\n        }\r\n\r\n        polyOut.exponent = custom;\r\n\r\n        return polyOut;\r\n    })(exponent$1);\r\n\r\n    var polyInOut = (function custom(e) {\r\n        e = +e;\r\n\r\n        function polyInOut(t) {\r\n            return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n        }\r\n\r\n        polyInOut.exponent = custom;\r\n\r\n        return polyInOut;\r\n    })(exponent$1);\r\n\r\n    var overshoot = 1.70158;\r\n\r\n    var backIn = (function custom(s) {\r\n        s = +s;\r\n\r\n        function backIn(t) {\r\n            return t * t * ((s + 1) * t - s);\r\n        }\r\n\r\n        backIn.overshoot = custom;\r\n\r\n        return backIn;\r\n    })(overshoot);\r\n\r\n    var backOut = (function custom(s) {\r\n        s = +s;\r\n\r\n        function backOut(t) {\r\n            return --t * t * ((s + 1) * t + s) + 1;\r\n        }\r\n\r\n        backOut.overshoot = custom;\r\n\r\n        return backOut;\r\n    })(overshoot);\r\n\r\n    var backInOut = (function custom(s) {\r\n        s = +s;\r\n\r\n        function backInOut(t) {\r\n            return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\r\n        }\r\n\r\n        backInOut.overshoot = custom;\r\n\r\n        return backInOut;\r\n    })(overshoot);\r\n\r\n    var tau$2 = 2 * Math.PI;\r\n    var amplitude = 1;\r\n    var period = 0.3;\r\n    var elasticIn = (function custom(a, p) {\r\n        var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$2);\r\n\r\n        function elasticIn(t) {\r\n            return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\r\n        }\r\n\r\n        elasticIn.amplitude = function(a) { return custom(a, p * tau$2); };\r\n        elasticIn.period = function(p) { return custom(a, p); };\r\n\r\n        return elasticIn;\r\n    })(amplitude, period);\r\n\r\n    var elasticOut = (function custom(a, p) {\r\n        var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$2);\r\n\r\n        function elasticOut(t) {\r\n            return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\r\n        }\r\n\r\n        elasticOut.amplitude = function(a) { return custom(a, p * tau$2); };\r\n        elasticOut.period = function(p) { return custom(a, p); };\r\n\r\n        return elasticOut;\r\n    })(amplitude, period);\r\n\r\n    var elasticInOut = (function custom(a, p) {\r\n        var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau$2);\r\n\r\n        function elasticInOut(t) {\r\n            return ((t = t * 2 - 1) < 0\r\n                    ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\r\n                    : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\r\n        }\r\n\r\n        elasticInOut.amplitude = function(a) { return custom(a, p * tau$2); };\r\n        elasticInOut.period = function(p) { return custom(a, p); };\r\n\r\n        return elasticInOut;\r\n    })(amplitude, period);\r\n\r\n    var defaultTiming = {\r\n        time: null, // Set on use.\r\n        delay: 0,\r\n        duration: 250,\r\n        ease: cubicInOut\r\n    };\r\n\r\n    function inherit(node, id) {\r\n        var timing;\r\n        while (!(timing = node.__transition) || !(timing = timing[id])) {\r\n            if (!(node = node.parentNode)) {\r\n                return defaultTiming.time = now(), defaultTiming;\r\n            }\r\n        }\r\n        return timing;\r\n    }\r\n\r\n    function selection_transition(name) {\r\n        var id,\r\n            timing;\r\n\r\n        if (name instanceof Transition) {\r\n            id = name._id, name = name._name;\r\n        } else {\r\n            id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\r\n        }\r\n\r\n        for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\r\n            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n                if (node = group[i]) {\r\n                    schedule(node, name, id, i, group, timing || inherit(node, id));\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Transition(groups, this._parents, name, id);\r\n    }\r\n\r\n    selection.prototype.interrupt = selection_interrupt;\r\n    selection.prototype.transition = selection_transition;\r\n\r\n    var root$1 = [null];\r\n\r\n    function active(node, name) {\r\n        var schedules = node.__transition,\r\n            schedule,\r\n            i;\r\n\r\n        if (schedules) {\r\n            name = name == null ? null : name + \"\";\r\n            for (i in schedules) {\r\n                if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\r\n                    return new Transition([[node]], root$1, name, +i);\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    exports.creator = creator;\r\n    exports.local = local;\r\n    exports.matcher = matcher$1;\r\n    exports.mouse = mouse;\r\n    exports.namespace = namespace;\r\n    exports.namespaces = namespaces;\r\n    exports.select = select;\r\n    exports.selectAll = selectAll;\r\n    exports.selection = selection;\r\n    exports.selector = selector;\r\n    exports.selectorAll = selectorAll;\r\n    exports.style = style;\r\n    exports.touch = touch;\r\n    exports.touches = touches;\r\n    exports.window = defaultView;\r\n    exports.customEvent = customEvent;\r\n    exports.bisect = bisectRight;\r\n    exports.bisectRight = bisectRight;\r\n    exports.bisectLeft = bisectLeft;\r\n    exports.ascending = ascending$1;\r\n    exports.bisector = bisector;\r\n    exports.cross = cross;\r\n    exports.descending = descending;\r\n    exports.deviation = deviation;\r\n    exports.extent = extent;\r\n    exports.histogram = histogram;\r\n    exports.thresholdFreedmanDiaconis = freedmanDiaconis;\r\n    exports.thresholdScott = scott;\r\n    exports.thresholdSturges = sturges;\r\n    exports.max = max;\r\n    exports.mean = mean;\r\n    exports.median = median;\r\n    exports.merge = merge;\r\n    exports.min = min;\r\n    exports.pairs = pairs;\r\n    exports.permute = permute;\r\n    exports.quantile = threshold;\r\n    exports.range = sequence;\r\n    exports.scan = scan;\r\n    exports.shuffle = shuffle;\r\n    exports.sum = sum;\r\n    exports.ticks = ticks;\r\n    exports.tickIncrement = tickIncrement;\r\n    exports.tickStep = tickStep;\r\n    exports.transpose = transpose;\r\n    exports.variance = variance;\r\n    exports.zip = zip;\r\n    exports.scaleBand = band;\r\n    exports.scalePoint = point$1;\r\n    exports.scaleIdentity = identity$1;\r\n    exports.scaleLinear = linear;\r\n    exports.scaleLog = log;\r\n    exports.scaleOrdinal = ordinal;\r\n    exports.scaleImplicit = implicit;\r\n    exports.scalePow = pow;\r\n    exports.scaleSqrt = sqrt;\r\n    exports.scaleQuantile = quantile;\r\n    exports.scaleQuantize = quantize$1;\r\n    exports.scaleThreshold = threshold$1;\r\n    exports.scaleTime = time;\r\n    exports.scaleUtc = utcTime;\r\n    exports.schemeCategory10 = category10;\r\n    exports.schemeCategory20b = category20b;\r\n    exports.schemeCategory20c = category20c;\r\n    exports.schemeCategory20 = category20;\r\n    exports.interpolateCubehelixDefault = cubehelix$3;\r\n    exports.interpolateRainbow = rainbow$1;\r\n    exports.interpolateWarm = warm;\r\n    exports.interpolateCool = cool;\r\n    exports.interpolateViridis = viridis;\r\n    exports.interpolateMagma = magma;\r\n    exports.interpolateInferno = inferno;\r\n    exports.interpolatePlasma = plasma;\r\n    exports.scaleSequential = sequential;\r\n    exports.arc = arc;\r\n    exports.area = area;\r\n    exports.line = line;\r\n    exports.pie = pie;\r\n    exports.areaRadial = areaRadial;\r\n    exports.radialArea = areaRadial;\r\n    exports.lineRadial = lineRadial$1;\r\n    exports.radialLine = lineRadial$1;\r\n    exports.pointRadial = pointRadial;\r\n    exports.linkHorizontal = linkHorizontal;\r\n    exports.linkVertical = linkVertical;\r\n    exports.linkRadial = linkRadial;\r\n    exports.symbol = symbol;\r\n    exports.symbols = symbols;\r\n    exports.symbolCircle = circle;\r\n    exports.symbolCross = cross$1;\r\n    exports.symbolDiamond = diamond;\r\n    exports.symbolSquare = square;\r\n    exports.symbolStar = star;\r\n    exports.symbolTriangle = triangle;\r\n    exports.symbolWye = wye;\r\n    exports.curveBasisClosed = basisClosed$1;\r\n    exports.curveBasisOpen = basisOpen;\r\n    exports.curveBasis = basis$2;\r\n    exports.curveBundle = bundle;\r\n    exports.curveCardinalClosed = cardinalClosed;\r\n    exports.curveCardinalOpen = cardinalOpen;\r\n    exports.curveCardinal = cardinal;\r\n    exports.curveCatmullRomClosed = catmullRomClosed;\r\n    exports.curveCatmullRomOpen = catmullRomOpen;\r\n    exports.curveCatmullRom = catmullRom;\r\n    exports.curveLinearClosed = linearClosed;\r\n    exports.curveLinear = curveLinear;\r\n    exports.curveMonotoneX = monotoneX;\r\n    exports.curveMonotoneY = monotoneY;\r\n    exports.curveNatural = natural;\r\n    exports.curveStep = step;\r\n    exports.curveStepAfter = stepAfter;\r\n    exports.curveStepBefore = stepBefore;\r\n    exports.stack = stack;\r\n    exports.stackOffsetExpand = expand;\r\n    exports.stackOffsetDiverging = diverging;\r\n    exports.stackOffsetNone = none$1;\r\n    exports.stackOffsetSilhouette = silhouette;\r\n    exports.stackOffsetWiggle = wiggle;\r\n    exports.stackOrderAscending = ascending$2;\r\n    exports.stackOrderDescending = descending$2;\r\n    exports.stackOrderInsideOut = insideOut;\r\n    exports.stackOrderNone = none$2;\r\n    exports.stackOrderReverse = reverse;\r\n    exports.axisTop = axisTop;\r\n    exports.axisRight = axisRight;\r\n    exports.axisBottom = axisBottom;\r\n    exports.axisLeft = axisLeft;\r\n    exports.nest = nest;\r\n    exports.set = set;\r\n    exports.map = map$1;\r\n    exports.keys = keys;\r\n    exports.values = values;\r\n    exports.entries = entries;\r\n    exports.transition = transition;\r\n    exports.active = active;\r\n    exports.interrupt = interrupt;\r\n    exports.interpolate = interpolateValue;\r\n    exports.interpolateArray = array$2;\r\n    exports.interpolateBasis = basis$1;\r\n    exports.interpolateBasisClosed = basisClosed;\r\n    exports.interpolateDate = date;\r\n    exports.interpolateNumber = interpolateNumber;\r\n    exports.interpolateObject = object;\r\n    exports.interpolateRound = interpolateRound;\r\n    exports.interpolateString = interpolateString;\r\n    exports.interpolateTransformCss = interpolateTransform$1;\r\n    exports.interpolateTransformSvg = interpolateTransform$2;\r\n    exports.interpolateZoom = zoom;\r\n    exports.interpolateRgb = interpolateRgb;\r\n    exports.interpolateRgbBasis = rgbBasis;\r\n    exports.interpolateRgbBasisClosed = rgbBasisClosed;\r\n    exports.interpolateHsl = hsl$1;\r\n    exports.interpolateHslLong = hslLong;\r\n    exports.interpolateLab = lab$1;\r\n    exports.interpolateHcl = hcl$1;\r\n    exports.interpolateHclLong = hclLong;\r\n    exports.interpolateCubehelix = cubehelix$2;\r\n    exports.interpolateCubehelixLong = interpolateCubehelixLong;\r\n    exports.quantize = quantize;\r\n    exports.formatDefaultLocale = defaultLocale;\r\n    exports.formatLocale = formatLocale;\r\n    exports.formatSpecifier = formatSpecifier;\r\n    exports.precisionFixed = precisionFixed;\r\n    exports.precisionPrefix = precisionPrefix;\r\n    exports.precisionRound = precisionRound;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n    // [OT] Return exports variable\r\n    return exports;\r\n\r\n});\n","csui.define('csui/controls/charts/visual.count/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/controls/charts/visual.count/impl/nls/root/lang',{\r\n    TotalCount: ' Total count',\r\n    Total: 'Total',\r\n    OTPrimary: 'OpenText primary',\r\n    OTSecondary: 'OpenText secondary',\r\n    OTTertiary: 'OpenText tertiary',\r\n    DataClarity: 'Data clarity',\r\n    NodataDefaultText: 'No data was returned',\r\n    A11yTableCaption: 'Categorical items and their item count.'\r\n});\r\n\n","\ncsui.define('css!csui/controls/charts/visual.count/impl/visual.count',[],function(){});\n","csui.define('csui/controls/charts/visual.count/impl/visual.count.chart.view',[\r\n    'csui/lib/backbone', 'csui/lib/marionette3', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/d3', 'csui/lib/numeral', // 3rd party libraries\r\n    'i18n!csui/controls/charts/visual.count/impl/nls/lang',\r\n    'css!csui/controls/charts/visual.count/impl/visual.count'\r\n], function(Backbone, Marionette, _, $, d3, numeral, lang){\r\n    'use strict';\r\n\r\n    var VisualCountChartView = Marionette.View.extend({\r\n\r\n        defaults: {\r\n            marginTop: 20,\r\n            marginRight: 20,\r\n            marginBottom: 20,\r\n            marginLeft: 20,\r\n            xAxisLabelMargin: 0,\r\n            maxCategoryLabelLength: 18,\r\n            transitionDuration: 600,\r\n            chartOptions: {\r\n                // these default chart options may be passed in as a backbone modal. See markdown.\r\n                showAsPercentage: false,\r\n                animate: true,\r\n                chartTitle: '',\r\n                showAxisLabels: true,\r\n                showValueLabels: true,\r\n                showCountAxis: true,\r\n                countAxisTicks: 6,\r\n                showLegend: true,\r\n                themeName: 'dataClarity',\r\n                showTotal: true,\r\n                showGridLines: true\r\n            },\r\n            // Warning - adjusting these ratios may make charts unreadable at certain screen sizes\r\n            labelTypes: {\r\n                default: {\r\n                    heightRatio: 0.02,\r\n                    min: 11,\r\n                    max: 18\r\n                },\r\n                'tick': {\r\n                    heightRatio: 0.025\r\n                },\r\n                'value': {\r\n                    heightRatio: 0.025\r\n                },\r\n                'radial': {\r\n                    heightRatio: 0.025\r\n                },\r\n                'legend': {\r\n                    heightRatio: 0.05,\r\n                    min: 8,\r\n                    max: 18\r\n                },\r\n                'legendTitle': {\r\n                    heightRatio: 0.06,\r\n                    min: 14,\r\n                    max: 24\r\n                },\r\n                'axis': {\r\n                    heightRatio: 0.04,\r\n                    min: 14,\r\n                    max: 20\r\n                },\r\n                'total': {\r\n                    heightRatio: 0.03,\r\n                    min: 12,\r\n                    max: 20\r\n                },\r\n                'title': {\r\n                    heightRatio: 0.06,\r\n                    min: 16,\r\n                    max: 28\r\n                }\r\n            }\r\n        },\r\n\r\n        themes: [\r\n            {\r\n                name: 'otPrimary',\r\n                label: lang.OTPrimary,\r\n                palette: ['#111b58','#00b8ba','#2E3D98','#09bcef','#4f3690','#7e929f','#5d0026','#055e78','#f05822','#090e2c'],\r\n                opacity: 1\r\n            },\r\n            {\r\n                name: 'otSecondary',\r\n                label: lang.OTSecondary,\r\n                palette: ['#006353','#4f3690','#003B4D','#0084ce','#4f3690','#067d14','#111b58','#00b8ba','#232e72','#775909'],\r\n                opacity: 1\r\n            },\r\n            {\r\n                name: 'otTertiary',\r\n                label: lang.OTTertiary,\r\n                palette: ['#4f3690','#004267','#7e929f','#111b58','#00b8ba','#4f3690','#a7261b','#a0006b','#e00051','#5d0026'],\r\n                opacity: 1\r\n            },\r\n            {\r\n                name: 'dataClarity',\r\n                label: lang.DataClarity,\r\n                palette: ['#1f77b4','#ff7f0e','#2ca02c','#d62728','#9467bd','#7f7f7f','#bcbd22','#17becf','#e377c2','#8c564b','#aec7e8','#ffbb78','#98df8a','#ff9896','#c5b0d5','#c7c7c7','#dbdb8d','#9edae5','#f7b6d2','#c49c94'],\r\n                opacity: 0.9\r\n            }\r\n        ],\r\n\r\n        className: 'csui-visual-count-chart-container',\r\n\r\n        template: false,\r\n\r\n        constructor: function VisualCountChartView(options){\r\n\r\n            var optionsToApply = _.clone(this.defaults.chartOptions);\r\n\r\n            // apply chartOptions as combination of defaults and those supplied\r\n            if (options.chartOptions) {\r\n                this.chartOptions = options.chartOptions; // Note: Backbone.Model, not object\r\n                optionsToApply = _.defaults(options.chartOptions.toJSON(),optionsToApply);\r\n                this.chartOptions.set(optionsToApply);\r\n            }\r\n            else {\r\n                this.chartOptions = new Backbone.Model(this.defaults.chartOptions);\r\n            }\r\n\r\n            this.columns = options.columns;\r\n\r\n            this.listenTo(options.collection, 'update', this._updateChart);\r\n\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        chartType: null, // Define a unique name in extended objects to identify your visualization type\r\n\r\n        onDomRefresh: function () {\r\n            var chartContext = this.getChartContext(),\r\n                d3Chart = (chartContext) ? chartContext.d3Chart : undefined;\r\n\r\n            // Only draw the chart if it doesn't already exist\r\n            if (!d3Chart) {\r\n                this.draw();\r\n            }\r\n        },\r\n\r\n        create: function (chartContext) {\r\n            // override this stub to implement the code to create your visualization\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        appendChartTitle: function(chartContext) {\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            d3Chart.append('g')\r\n                .attr('transform', 'translate(' + chartContext.containerWidth / 2 + ',20)')\r\n                .attr('class', 'csui-visual-count-chart-title')\r\n                .append('text')\r\n                .style('text-anchor', 'middle')\r\n                .style('font-size', this.getScaledFontSize(chartContext,'title'))\r\n                .text(this.chartOptions.get('chartTitle'));\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        appendGroups: function(chartContext){\r\n            // override this stub to append any group elements elements of your visualization\r\n            // underneath the root element\r\n            var d3Chart = chartContext.d3Chart;\r\n            return d3Chart;\r\n        },\r\n\r\n        update: function (chartContext) {\r\n            // override this stub to implement the code to update your visualization\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        draw: function () {\r\n            var chartContext = this.chartContext || {};\r\n\r\n            if (!this.collection.isEmpty()) {\r\n                this.appendRootElement(chartContext);\r\n                chartContext.chartData = this.getChartDataJSON();\r\n                chartContext.height = this.getChartHeight(chartContext);\r\n                chartContext.width = this.getChartWidth(chartContext);\r\n                chartContext.pieCenter = {\r\n                    x: (this.chartOptions.get('showLegend')) ? chartContext.width / 3 : chartContext.width / 2, // center pie at 1/3 width of legend is shown\r\n                    y: chartContext.height / 2\r\n                };\r\n                chartContext.activeColumn = this.getActiveColumn();\r\n                chartContext.countColumn = this.getCountColumn();\r\n                // assign unique and persistent colors to each category\r\n                chartContext.colorMap = _.pluck(chartContext.chartData,this.getActiveColumnName(chartContext));\r\n                chartContext.transitionDuration = 0;\r\n                if (this.chartOptions.get('showChartTitle')) {\r\n                    chartContext.height -= 100;\r\n                }\r\n                this.chartContext = chartContext;\r\n\r\n                chartContext.d3Chart = this.appendChartTitle(chartContext);\r\n                chartContext.d3Chart = this.appendGroups(chartContext);\r\n                chartContext.d3Chart = this.create(chartContext);\r\n            }\r\n        },\r\n\r\n        activeColumnChanged: function() {\r\n\r\n            var activeColumn = this.getActiveColumn();\r\n\r\n            return activeColumn.hasChanged('active_column');\r\n        },\r\n\r\n        getChartContext: function(){\r\n            return this.chartContext;\r\n        },\r\n\r\n        checkSign: function (x) {\r\n            //TODO: move to a utils script\r\n            if (!Math.sign) {\r\n                // polyfill for older browsers\r\n                Math.sign = function (x) {\r\n                    return ((x > 0) - (x < 0)) || +x;\r\n                };\r\n            }\r\n            return Math.sign(x);\r\n        },\r\n\r\n        shortenText: function(t) {\r\n            //TODO: move to a utils script\r\n\r\n            t = t || '';\r\n            var maxLength = this.defaults.maxCategoryLabelLength;\r\n            t = (t.length >= maxLength) ? t.substr(0, maxLength) + '\\u2026' : t;\r\n            return t;\r\n        },\r\n\r\n        formatCount: function(n){\r\n            //TODO: move to a utils script\r\n            //TODO: Add units more suited to business - i.e. B for billion, currency prefix/suffix\r\n\r\n            var formattedValue, formatTemplate,\r\n                countColumn = this.getCountColumn(),\r\n                format = countColumn.get('client_format').type;\r\n\r\n            switch(format) {\r\n                case \"si\":\r\n                    formattedValue = this.formatSi(n);\r\n                    break;\r\n                case \"bytes\":\r\n                    // determine which format we want:\r\n                    formatTemplate = (n < 1024) ? '0b' : '0.0b';\r\n                    // call the function to format it:\r\n                    formattedValue = numeral(n).format( formatTemplate );\r\n                    break;\r\n                case \"business\":\r\n                    formattedValue = this.formatBusiness(n).replace('G','B'); // change Giga to Billion\r\n                    break;\r\n                default:\r\n                    formattedValue = n.toString();\r\n            }\r\n            return formattedValue;\r\n        },\r\n\r\n        formatSi: function(n) {\r\n            //TODO: move to a utils script\r\n            //TODO: add locale relevant suffix. This requires a d3.locale instance definition for each country we support\r\n\r\n            var formatNumber = d3.format('.3s'),\r\n                displayNumber = formatNumber(n);\r\n\r\n            n = n.toPrecision(3) || 0;\r\n            n = Number(n); // remove precision decimal places for integers\r\n\r\n            if (n === 0 || (n >= 1 && n < 1000) || (n <= -1 && n > -1000)) {\r\n                // for numbers that have no suffix, remove unwanted trailing zeros that d3.format leaves when using SI notation. This is an issue with d3.format that the author has no intention of fixing: see https://github.com/d3/d3-format/issues/44\r\n                displayNumber = n.toString();\r\n            }\r\n\r\n            return displayNumber;\r\n        },\r\n\r\n        formatBusiness: function(n) {\r\n            //TODO: add currency prefix $. This requires a d3.locale instance definition for each country we support\r\n            var formatNumber = d3.format('.3s');\r\n\r\n            return formatNumber(n);\r\n        },\r\n\r\n        getChartData: function(){\r\n//            return this.collection;\r\n        },\r\n\r\n        getChartDataJSON: function(){\r\n            return this.collection.toJSON();\r\n        },\r\n\r\n        getActiveColumn: function(){\r\n            return this.columns.findWhere(function(column){\r\n                return column.get('active_column');\r\n            });\r\n        },\r\n\r\n        getCountColumn: function(){\r\n            return this.columns.findWhere(function(column){\r\n                return column.get('count_column');\r\n            });\r\n        },\r\n\r\n        getTotalCount: function(chartData){\r\n            return chartData.reduce(_.bind(function (memo, value) {\r\n                return memo + this.getCountValue(this.getChartContext(),value);\r\n            }, this), 0);\r\n        },\r\n\r\n        getTransitionDuration: function() {\r\n            if (this.chartOptions.get('animate') && !this.skipAnimation) {\r\n                return this.defaults.transitionDuration;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        },\r\n\r\n        getMarginTop: function () {\r\n            return this.defaults.marginTop;\r\n        },\r\n\r\n        getMarginBottom: function () {\r\n            return this.defaults.marginBottom;\r\n        },\r\n\r\n        getMarginLeft: function () {\r\n            var marginLeft = this.defaults.marginLeft;\r\n            if (this.chartOptions.get('showAxisLabels')) {\r\n                marginLeft = this.defaults.marginLeft + this.defaults.xAxisLabelMargin;\r\n            }\r\n            return marginLeft;\r\n        },\r\n\r\n        getMarginRight: function () {\r\n            return this.defaults.marginRight;\r\n        },\r\n\r\n        getChartWidth: function (chartContext) {\r\n            return chartContext.containerWidth - this.getMarginLeft() - this.getMarginRight();\r\n        },\r\n\r\n        getChartHeight: function (chartContext) {\r\n            return chartContext.containerHeight - this.getMarginTop() - this.getMarginBottom();\r\n        },\r\n\r\n        appendRootElement: function(chartContext){\r\n            var containerDimensions = this.getContainerDimensions(),\r\n\r\n                // Append a root element for the SVG\r\n                d3Chart = d3.select(this.el)\r\n                            .append('svg')\r\n                            .attr('aria-hidden', 'true')\r\n                            .attr('width', containerDimensions.width)\r\n                            .attr('height', containerDimensions.height),\r\n\r\n                // Append a root element for a screen-reader friendly tabular version of the data\r\n                a11yTable = d3.select(this.el)\r\n                    .append('div')\r\n                    .attr('class','csui-visual-count-a11y-table-wrapper');\r\n\r\n            chartContext.containerHeight = containerDimensions.height;\r\n            chartContext.containerWidth = containerDimensions.width;\r\n            chartContext.d3Chart = d3Chart;\r\n            chartContext.a11yTable = a11yTable;\r\n            this.initA11yTable(chartContext);\r\n        },\r\n\r\n        updateRootElement: function(chartContext){\r\n            var containerDimensions = this.getContainerDimensions(),\r\n                d3Chart = chartContext.d3Chart;\r\n\r\n            d3Chart.select('svg')\r\n                    .attr('width', containerDimensions.width)\r\n                    .attr('height', containerDimensions.height);\r\n\r\n            chartContext.containerHeight = containerDimensions.height;\r\n            chartContext.containerWidth = containerDimensions.width;\r\n            chartContext.d3Chart = d3Chart;\r\n\r\n            return chartContext;\r\n        },\r\n\r\n        initA11yTable: function(chartContext) {\r\n            // create the table structure for an accessibility (a11y) table aimed at screen-readers.\r\n            var a11yTable = chartContext.a11yTable\r\n                    .append('table');\r\n\r\n            a11yTable.append('caption')\r\n                .html(this.chartOptions.get('chartTitle') || lang.A11yTableCaption);\r\n\r\n            a11yTable.append('thead'); // THEAD is not actually needed for screen readers\r\n            a11yTable.append('tbody');\r\n\r\n            return chartContext;\r\n        },\r\n\r\n        updateA11yTable: function(chartContext) {\r\n            var chartView = this,\r\n                chartData = chartContext.chartData,\r\n                a11yTable = chartContext.a11yTable.select('tbody'),\r\n                a11yTableRows;\r\n\r\n            a11yTableRows = a11yTable\r\n                .selectAll('tr')\r\n                .data(chartData, function (d) {\r\n                    return chartView.getDataValue(chartContext, d);\r\n                });\r\n\r\n            //TODO: This standard D3 update pattern only adds new items to the DOM - existing items have their content modified. Consequently, DOM order of data does not always reflect visual chart sort order.\r\n\r\n            // remove old data\r\n            a11yTableRows.exit().remove();\r\n\r\n            // update existing data\r\n            a11yTableRows.select('th')\r\n                .text(function (d) {\r\n                    return chartView.getDataLabel(chartContext, d);\r\n                });\r\n            a11yTableRows.select('td')\r\n                .text(function (d) {\r\n                    var uiValue = chartView.getCountValue(chartContext, d);\r\n                    if (chartView.chartOptions.get('showAsPercentage')) {\r\n                        uiValue = ((chartView.getCountValue(chartContext, d) / chartView.getTotalCount(chartData)) * 100).toFixed(1) + '%';\r\n                    }\r\n                    return uiValue ;\r\n                });\r\n\r\n            // add new data\r\n            a11yTableRows = a11yTableRows.enter()\r\n                .append('tr');\r\n\r\n            a11yTableRows\r\n                .append('th')\r\n                .attr('scope','row')\r\n                .text(function (d) {\r\n                    return chartView.getDataLabel(chartContext, d);\r\n                });\r\n\r\n            a11yTableRows\r\n                .append('td')\r\n                .text(function (d) {\r\n                    var uiValue = chartView.getCountValue(chartContext, d);\r\n                    if (chartView.chartOptions.get('showAsPercentage')) {\r\n                        uiValue = ((chartView.getCountValue(chartContext, d) / chartView.getTotalCount(chartData)) * 100).toFixed(1) + '%';\r\n                    }\r\n                    return uiValue ;\r\n                });\r\n\r\n            return chartContext;\r\n        },\r\n\r\n        getContainerDimensions: function(){\r\n            var boundingRect = this.el.getBoundingClientRect(),\r\n                width = boundingRect.width,\r\n                height = boundingRect.height;\r\n\r\n            return {\r\n                height: height,\r\n                width: width\r\n            };\r\n        },\r\n\r\n        getCountValue: function(chartContext,d){\r\n            var countColumnName = this.getCountColumnName(chartContext);\r\n            return this.getCaseInsensitiveProperty(d,countColumnName);\r\n        },\r\n\r\n        getCountLabel: function(chartContext,d){\r\n            var countColumnName = this.getCountColumnName(chartContext);\r\n            return this.getCaseInsensitiveProperty(d,countColumnName + '_formatted');\r\n        },\r\n\r\n        getDataValue: function(chartContext,d){\r\n            var activeColumnName = this.getActiveColumnName(chartContext);\r\n            return this.getCaseInsensitiveProperty(d,activeColumnName);\r\n        },\r\n\r\n        getDataLabel: function(chartContext,d){\r\n            var activeColumnName = this.getActiveColumnName(chartContext);\r\n            return this.getCaseInsensitiveProperty(d,activeColumnName + '_formatted');\r\n\r\n        },\r\n\r\n        getActiveColumnName: function(chartContext){\r\n            return chartContext.activeColumn.get('column_key');\r\n        },\r\n\r\n        getActiveColumnLabel: function(chartContext){\r\n            return chartContext.activeColumn.get('name_formatted');\r\n        },\r\n\r\n        getCountColumnName: function(chartContext){\r\n            return chartContext.countColumn.get('name');\r\n        },\r\n\r\n        getTheme: function(name) {\r\n            var theme = this.themes[0];\r\n\r\n            if (!_.isUndefined(name)) {\r\n                theme = _.findWhere(this.themes,{ name: name } ) || theme;\r\n            }\r\n\r\n            return theme;\r\n        },\r\n\r\n        getCategoryColor: function(chartContext,d) {\r\n            // maps a theme color to a category's unique ID, so that colors are consistent when data changes\r\n            var colorMap = chartContext.colorMap,\r\n                palette = chartContext.theme.palette,\r\n                uid = this.getDataValue(chartContext, d);\r\n\r\n            if (colorMap.indexOf(uid) === -1) {\r\n                // new category\r\n                colorMap.push(uid);\r\n            }\r\n\r\n            // get index of next available color in the theme via modulus\r\n            var colorIndex = chartContext.colorMap.indexOf(uid) % palette.length;\r\n\r\n            return palette[colorIndex];\r\n        },\r\n\r\n        getScaledFontSize: function(chartContext,type) {\r\n\r\n            type = type || 'default';\r\n            \r\n            var labelTypes = this.defaults.labelTypes,\r\n            labelType = labelTypes[type],\r\n            fontSize = chartContext.height * labelType.heightRatio,\r\n            minSize = labelType.min || labelTypes['default'].min,\r\n            maxSize = labelType.max || labelTypes['default'].max;\r\n\r\n            if (fontSize < minSize) {\r\n                return minSize;\r\n            }\r\n            else if (fontSize > maxSize) {\r\n                return maxSize;\r\n            }\r\n\r\n            return fontSize;\r\n        },\r\n\r\n        getCaseInsensitiveProperty: function(obj, name) {\r\n            if (obj && name){\r\n                return obj[name] || obj[_.find(_.keys(obj), function(key){\r\n                    return key.toLowerCase() === name.toLowerCase();\r\n                })];\r\n            } else {\r\n                return undefined;\r\n            }\r\n        },\r\n\r\n        _updateChart: function(updatedCollection) {\r\n\r\n            var chartContext = this.getChartContext();\r\n\r\n            if (chartContext) {\r\n\r\n                if (this.activeColumnChanged() || updatedCollection.length === 0) {\r\n                    this.trigger('redraw:chart');\r\n                } else {\r\n                    chartContext.transitionDuration = this.getTransitionDuration();\r\n                    chartContext.chartData = this.getChartDataJSON();\r\n                    this.updateRootElement(chartContext);\r\n                    this.updateA11yTable(chartContext);\r\n                    chartContext.height = this.getChartHeight(chartContext);\r\n                    chartContext.width = this.getChartWidth(chartContext);\r\n                    this.update(chartContext);\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountChartView;\r\n\r\n});\n","csui.define('csui/controls/charts/visual.count/impl/chart.types/visual.count.bar.view',[\r\n    'csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/d3', // 3rd party libraries\r\n    'csui/controls/charts/visual.count/impl/visual.count.chart.view',\r\n    'i18n!csui/controls/charts/visual.count/impl/nls/lang'\r\n], function (_, $, d3, VisualCountChartView, lang) {\r\n\r\n    var VisualCountBarView = VisualCountChartView.extend({\r\n\r\n        constructor: function VisualCountBarView(options) {\r\n            VisualCountChartView.prototype.constructor.apply(this, arguments);\r\n\r\n            this.defaults = _.defaults({\r\n                // override any defaults set in VisualCountChartView\r\n                marginTop: 30,\r\n                marginRight: 30,\r\n                marginBottom: 30,\r\n                marginLeft: 30,\r\n                marginLeftMax: 300,\r\n                categoryAxisLabelMargin: 20,\r\n                barValueLabelsOffset: 10,\r\n                isVerticalOrientation: true\r\n            },VisualCountChartView.prototype.defaults);\r\n        },\r\n\r\n        chartType: null, // Define a unique name in extended objects to identify your visualization type\r\n\r\n        create: function (chartContext) {\r\n            // For a vertical bar chart countAxis is the Y axis, for a horizontal chart countAxis is the X axis\r\n            chartContext.countScale = this.getCountScale(chartContext);\r\n            chartContext.countAxis = this.getCountAxis(chartContext);\r\n\r\n            chartContext.categoryScale = this.getCategoryScale(chartContext);\r\n            chartContext.categoryAxis = this.getCategoryAxis(chartContext);\r\n\r\n            chartContext.XAxisGroup = this.appendXAxisGroup(chartContext);\r\n            chartContext.YAxisGroup = this.appendYAxisGroup(chartContext);\r\n\r\n            chartContext.gridlinesGroup = this.appendGridlinesGroup(chartContext);\r\n            chartContext.zeroLine = this.appendZeroLine(chartContext);\r\n            chartContext.barGroup = this.appendBarGroup(chartContext);\r\n            chartContext.valueLabels = this.appendBarValueLabels(chartContext);\r\n\r\n            chartContext.theme = this.getTheme(this.chartOptions.get('themeName'));\r\n\r\n            if (this.chartOptions.get('showAxisLabels')) {\r\n                this.appendXAxisLabel(chartContext);\r\n                this.appendYAxisLabel(chartContext);\r\n            }\r\n\r\n            if (this.chartOptions.get('showTotal')) {\r\n                this.appendTotalCount(chartContext);\r\n            }\r\n            this.update(chartContext);\r\n\r\n            return chartContext.d3Chart;\r\n        },\r\n\r\n        update: function (chartContext) {\r\n\r\n            var genericBarView = this,\r\n                chartData = chartContext.chartData,\r\n                categoryScale = chartContext.categoryScale,\r\n                countScale = chartContext.countScale,\r\n                limits = (this.defaults.isVerticalOrientation) ? [chartContext.height,0] : [0,chartContext.width], //TODO: for RTL, swap the horizontal limits\r\n                extent = d3.extent(chartData.map(function (d) {\r\n                    return genericBarView.getCountValue(chartContext, d);\r\n                }));\r\n\r\n            // update the domain of the data (range)\r\n            categoryScale.domain(chartData.map(function (d) {\r\n                return genericBarView.getDataLabel(chartContext, d);\r\n            }));\r\n\r\n            // generally the yaxis should start from 0, unless it has negative values\r\n            // multiplying extents by 1.1 increases the chart area by 10% to accomodate bar annotations\r\n            extent = (extent[0] > 0) ? [0, extent[1]*1.1] : [extent[0] * 1.1, extent[1] * 1.1];\r\n\r\n            countScale.domain(extent)\r\n                .range(limits)\r\n                .nice(); // extend range to nearest nice value\r\n\r\n            genericBarView.updateAxes(chartContext);\r\n            genericBarView.updateBars(chartContext);\r\n\r\n            genericBarView.updateA11yTable(chartContext);\r\n\r\n\r\n            if (!this.chartOptions.get('showCountAxis') || this.chartOptions.get('showValueLabels')) {\r\n                // value labels are shown when countAxis is hidden\r\n                genericBarView.updateValueLabels(chartContext);\r\n            }\r\n\r\n            if (this.chartOptions.get('showTotal')) {\r\n                genericBarView.updateTotal(chartContext);\r\n            }\r\n\r\n            _.delay(function() {\r\n                //TODO: consider replacing this with a promise/callback rather than a timeout\r\n                //Ticklabels need to be rendered before we can get their width\r\n                genericBarView.updateTickLabelOrientation(chartContext);\r\n            },20);\r\n\r\n        },\r\n\r\n        updateAxes: function(chartContext) {\r\n\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                countScale = chartContext.countScale,\r\n                lineLength = -chartContext.width,\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms),\r\n                translation = '0,' + countScale(0),\r\n                xAxis = this.getCategoryAxis(chartContext),\r\n                yAxis = (this.chartOptions.get('showCountAxis')) ? this.getCountAxis(chartContext) : null,\r\n                memo;\r\n\r\n            if (!this.defaults.isVerticalOrientation) {\r\n                lineLength = chartContext.height;\r\n                translation = countScale(0) + ',0';\r\n                // swap axes;\r\n                memo = xAxis;\r\n                xAxis = yAxis; // intentional\r\n                yAxis = memo;\r\n            }\r\n\r\n            if (!this.chartOptions.get('showGridLines')) {\r\n                lineLength = 0;\r\n            }\r\n\r\n            // update the category axis\r\n            if (!_.isNull(xAxis)) {\r\n                chartContext.XAxisGroup\r\n                    .transition(t)\r\n                    .call(xAxis)\r\n                    .selectAll('text');\r\n            }\r\n\r\n            // update the count axis\r\n            if (!_.isNull(yAxis)) {\r\n                chartContext.YAxisGroup\r\n                    .transition(t)\r\n                    .call(yAxis);\r\n            }\r\n\r\n            // update gridlines\r\n            chartContext.gridlinesGroup\r\n                .transition(t)\r\n                .call(genericBarView.getCountAxis(chartContext)\r\n                    .tickFormat('')\r\n                    .tickSize(lineLength))\r\n                .selectAll('line')\r\n                .attr('class', 'csui-visual-count-gridline');\r\n\r\n            // zero line\r\n            chartContext.zeroLine\r\n                .transition(t)\r\n                .attr('transform', 'translate(' + translation + ')');\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        updateBars: function(chartContext) {\r\n\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                categoryScale = chartContext.categoryScale,\r\n                countScale = chartContext.countScale,\r\n                colorOpacity = chartContext.theme.opacity,\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms),\r\n                barMagnitudeProp = 'height', // the variable dimension that shows magnitude of data value\r\n                barThicknessProp = 'width',\r\n                xProp = 'x',\r\n                yProp = 'y';\r\n\r\n            if (!this.defaults.isVerticalOrientation) {\r\n                // bars grow horizontally\r\n                barMagnitudeProp = 'width';\r\n                barThicknessProp = 'height';\r\n                xProp = 'y';\r\n                yProp = 'x';\r\n            }\r\n\r\n            // join the new data with the existing\r\n            var bars = chartContext.barGroup\r\n                .selectAll('.csui-visual-count-bar')\r\n                .data(chartData, function (d) {\r\n                    return genericBarView.getDataValue(chartContext, d);\r\n                });\r\n\r\n            // remove any categories that are no longer in data\r\n            bars.exit()\r\n                .attr('fill-opacity', 0.3)\r\n                .style('fill','#000')\r\n                .transition(t)\r\n                .attr('fill-opacity', 0)\r\n                .remove();\r\n\r\n            // add bars for categories that are new in the data\r\n            bars.enter()\r\n                .append('rect')\r\n                .attr('class', 'csui-visual-count-bar')\r\n                .attr('fill-opacity', colorOpacity)\r\n                .style('fill', '#999')\r\n                .attr(xProp, function(d) {\r\n                    return categoryScale(genericBarView.getDataLabel(chartContext, d));\r\n                })\r\n                .attr(yProp, function() {\r\n                    return countScale(0);\r\n                })\r\n                .attr(barThicknessProp, categoryScale.bandwidth())\r\n                .attr(barMagnitudeProp, 0)\r\n\r\n                // update bars that may have changed\r\n                .merge(bars)\r\n                .transition(t)\r\n                .style('fill', function (d, i) {\r\n                    return genericBarView.getCategoryColor(chartContext,d);\r\n                })\r\n                .attr(xProp, function(d) {\r\n                    return categoryScale(genericBarView.getDataLabel(chartContext, d));\r\n                })\r\n                .attr(yProp, function(d) {\r\n                    var countValue = genericBarView.getCountValue(chartContext,d),\r\n                        yPos = (genericBarView.defaults.isVerticalOrientation) ? Math.max(0,countValue) : Math.min(0,countValue);\r\n                    return countScale(yPos);\r\n                })\r\n                .attr(barThicknessProp, categoryScale.bandwidth())\r\n                .attr(barMagnitudeProp, function (d) {\r\n                    var barMagnitude = countScale(genericBarView.getCountValue(chartContext,d));\r\n                    return Math.abs(barMagnitude - countScale(0));\r\n                });\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        updateValueLabels: function(chartContext) {\r\n\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                categoryScale = chartContext.categoryScale,\r\n                countScale = chartContext.countScale,\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms),\r\n                isVertical = this.defaults.isVerticalOrientation,\r\n                fontSize = this.getScaledFontSize(chartContext,'value'),\r\n                barThickness = categoryScale.bandwidth(),\r\n                xProp = 'x',\r\n                yProp = 'y';\r\n\r\n            if (!this.defaults.isVerticalOrientation) {\r\n                xProp = 'y';\r\n                yProp = 'x';\r\n            }\r\n\r\n            function getDisplayValue(d) {\r\n\r\n                var displayValue = '';\r\n\r\n                if ((isVertical && barThickness > 24) || (!isVertical && barThickness >= fontSize)) {\r\n\r\n                    // only show value labels if there is room\r\n                    displayValue = genericBarView.formatCount(genericBarView.getCountValue(chartContext, d));\r\n\r\n                    if (genericBarView.chartOptions.get('showAsPercentage')) {\r\n                        displayValue = ((genericBarView.getCountValue(chartContext, d) / genericBarView.getTotalCount(chartData)) * 100).toFixed(1) + '%';\r\n                    }\r\n                }\r\n\r\n                return displayValue;\r\n            }\r\n\r\n            function getLabelPositionX(d) {\r\n                // Note that X and Y are flipped for horizontal charts\r\n                var dataLabel =  genericBarView.getDataLabel(chartContext, d) || genericBarView.getDataValue(chartContext, d),\r\n                    labelPosition = categoryScale(dataLabel) + (barThickness / 2);\r\n\r\n                if (!isVertical) {\r\n                    labelPosition += (fontSize / 2);\r\n                }\r\n\r\n                return labelPosition;\r\n            }\r\n\r\n            function getLabelPositionY(d) {\r\n                // Note that X and Y are flipped for horizontal charts\r\n                var sign = genericBarView.checkSign(genericBarView.getCountValue(chartContext, d)) || 1, // zero is treated as positive for label offset purposes\r\n                    labelOffset = genericBarView.defaults.barValueLabelsOffset,\r\n                    labelPosition;\r\n\r\n                if (isVertical) {\r\n                    labelOffset += fontSize;\r\n                    labelOffset = (labelOffset * sign) - fontSize;\r\n                    labelPosition = countScale(genericBarView.getCountValue(chartContext,d)) - labelOffset;\r\n                }\r\n                else {\r\n                    labelOffset = (labelOffset * sign);\r\n                    labelPosition = countScale(genericBarView.getCountValue(chartContext,d)) + labelOffset;\r\n                }\r\n\r\n                return labelPosition;\r\n            }\r\n\r\n            function getTextAnchorPosition(d) {\r\n                var anchorPos = 'middle';\r\n                if (!isVertical) {\r\n                    anchorPos = (genericBarView.getCountValue(chartContext, d) < 0) ? 'end' : 'start';\r\n                }\r\n                return anchorPos;\r\n            }\r\n\r\n            // join the new data with the existing\r\n            var valueLabels = chartContext.valueLabels\r\n                .selectAll('.csui-visual-count-value-label')\r\n                .data(chartData, function (d) {\r\n                    return genericBarView.getDataValue(chartContext, d);\r\n                });\r\n\r\n            // remove annotations for bars that are no longer present\r\n            valueLabels\r\n                .exit()\r\n                .transition(t)\r\n                .attr('fill-opacity',0)\r\n                .delay(100)\r\n                .remove();\r\n\r\n            // add annotations for all new bars\r\n            valueLabels\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', 'csui-visual-count-value-label')\r\n                .attr('dy','-0.5em')\r\n                .style('font-size', fontSize)\r\n                .style('text-anchor', function(d) {\r\n                    return getTextAnchorPosition(d);\r\n                })\r\n                .attr(xProp, function (d) {\r\n                    return getLabelPositionX(d);\r\n                })\r\n                .attr(yProp, countScale(0))\r\n                // update annotations for bars that may have changed height or position\r\n                .merge(valueLabels)\r\n                .attr('fill-opacity', 0.2)\r\n                .transition(t)\r\n                .attr('dy','-0.1em')\r\n                .style('text-anchor', function(d) {\r\n                    return getTextAnchorPosition(d);\r\n                })\r\n                .attr(xProp, function (d) {\r\n                    return getLabelPositionX(d);\r\n                })\r\n                .attr(yProp, function (d) {\r\n                    return getLabelPositionY(d);\r\n                })\r\n                .delay(100)\r\n                .attr('fill-opacity', 1)\r\n                .text(function(d) {\r\n                    return getDisplayValue(d);\r\n                });\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        updateTickLabelOrientation: function(chartContext) {\r\n            var d3Chart = chartContext.d3Chart,\r\n                categoryScale = chartContext.categoryScale,\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms),\r\n                longestTickLabelWidth = 0,\r\n                tickLabels = d3Chart.select('.x.axis')\r\n                    .selectAll('text')\r\n                    .style('font-size',this.getScaledFontSize(chartContext,'tick'))\r\n                    .attr('dy', '0.8em');\r\n\r\n            if (!this.defaults.isVerticalOrientation) {\r\n                tickLabels = d3Chart.select('.y.axis')\r\n                    .selectAll('text')\r\n                    .style('font-size',this.getScaledFontSize(chartContext,'tick'))\r\n                    .attr('dx', '-0.5em');\r\n            }\r\n\r\n            // iterate the categoryAxis tick labels and find the longest label\r\n            _.each(tickLabels._groups[0],function(item) {\r\n                var tickLabelWidth = item.getComputedTextLength();\r\n                longestTickLabelWidth = (tickLabelWidth > longestTickLabelWidth) ? tickLabelWidth : longestTickLabelWidth;\r\n            });\r\n\r\n            // perform a 2nd pass now that we have the width\r\n            if (this.defaults.isVerticalOrientation) {\r\n                // category labels on the X axis\r\n                // note: rotation should be applied to all elements or none - not on a per label basis.\r\n                if (longestTickLabelWidth > categoryScale.bandwidth()) {\r\n                    tickLabels\r\n                        .style('text-anchor', 'end')\r\n                        .transition(t)\r\n                        .attr('transform', function () {\r\n                            return 'rotate(-30)';\r\n                        });\r\n                } else {\r\n                    tickLabels\r\n                        .style('text-anchor', 'middle')\r\n                        .transition(t)\r\n                        .attr('transform', function () {\r\n                            return 'rotate(0)';\r\n                        });\r\n                }\r\n            }\r\n            else {\r\n                // category labels on the Y axis\r\n                if (longestTickLabelWidth > this.defaults.marginLeft) {\r\n                    this.defaults.marginLeft = Math.min(this.defaults.marginLeftMax, longestTickLabelWidth);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        updateTotal: function(chartContext){\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                totalCount = this.getTotalCount(chartData),\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms);\r\n\r\n            d3Chart.select('.csui-visual-count-total')\r\n                .attr('fill-opacity',0)\r\n                .transition(t)\r\n                .attr('fill-opacity',1)\r\n                .text(lang.Total+': ' + genericBarView.formatCount(totalCount));\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        getCategoryScale: function(chartContext){\r\n            var genericBarView = this,\r\n                chartData = chartContext.chartData,\r\n                limit = (this.defaults.isVerticalOrientation) ? chartContext.width : chartContext.height;\r\n\r\n            return d3.scaleBand()\r\n                .range([0, limit])\r\n                .round(true)\r\n                .padding(0.1)\r\n                .domain(chartData.map(function (d) {\r\n                    return genericBarView.getDataLabel(chartContext, d);\r\n                }));\r\n        },\r\n\r\n        getCategoryAxis: function(chartContext){\r\n            var categoryScale = chartContext.categoryScale,\r\n                axisGenerator = (this.defaults.isVerticalOrientation) ? d3.axisBottom : d3.axisLeft;\r\n\r\n            return axisGenerator(categoryScale).tickFormat(_.bind(this.shortenText,this));\r\n        },\r\n\r\n        getCountScale: function(){\r\n            return d3.scaleLinear();\r\n        },\r\n\r\n        getCountAxis: function(chartContext){\r\n            var genericBarView = this,\r\n                countScale = chartContext.countScale,\r\n                axisGenerator = (this.defaults.isVerticalOrientation) ? d3.axisLeft : d3.axisBottom,\r\n                countAxisTicks =this.chartOptions.get('countAxisTicks');\r\n\r\n            //return axisGenerator(countScale).ticks(countAxisTicks).tickFormat(_.bind(genericBarView.formatCount, genericBarView));\r\n            return axisGenerator(countScale);\r\n\r\n        },\r\n\r\n        appendGroups: function (chartContext) {\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart.append('g')\r\n                .attr('transform', 'translate(' + genericBarView.getMarginLeft() + ',' + genericBarView.getMarginTop() + ')')\r\n                .attr('class', 'csui-visual-count-bar-chart');\r\n        },\r\n\r\n        appendXAxisGroup: function(chartContext) {\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart.append('g')\r\n                .attr('class', 'x axis')\r\n                .attr('transform', 'translate(0,' + chartContext.height + ')');\r\n        },\r\n\r\n        appendYAxisGroup: function(chartContext) {\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart.append('g')\r\n                .attr('class', 'y axis');\r\n        },\r\n\r\n        appendZeroLine: function(chartContext) {\r\n\r\n            var d3Chart = chartContext.d3Chart,\r\n                zeroLineLimit = chartContext.width,\r\n                zeroLinePos = chartContext.height,\r\n                zeroLineStart = 'x1',\r\n                zeroLineEnd = 'x2';\r\n            // note that 'x1','x2' and 'y1','y2' are expected property names in D3 API.\r\n\r\n            if (!this.defaults.isVerticalOrientation) {\r\n                zeroLinePos = chartContext.width;\r\n                zeroLineStart = 'y1';\r\n                zeroLineEnd = 'y2';\r\n                zeroLineLimit = chartContext.height;\r\n            }\r\n\r\n            return d3Chart.append('g')\r\n                .attr('class', 'csui-visual-count-zero-line')\r\n                .append('line')\r\n                .attr(zeroLineStart,0)\r\n                .attr(zeroLineEnd,zeroLineLimit)\r\n                .attr('transform', 'translate(0,' + zeroLinePos + ')');\r\n        },\r\n\r\n        appendGridlinesGroup: function(chartContext) {\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart.append('g')\r\n                .attr('class', 'csui-visual-count-gridlines');\r\n        },\r\n\r\n        appendXAxisLabel: function(chartContext){\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                width = chartContext.width,\r\n                height = chartContext.height,\r\n                xAxisLabel = (this.defaults.isVerticalOrientation) ? genericBarView.getActiveColumnLabel(chartContext) : lang.TotalCount;\r\n\r\n            return d3Chart.append('text')\r\n                .attr('class', 'csui-visual-count-x-label')\r\n                .text(xAxisLabel)\r\n                .attr('y', height + genericBarView.getMarginBottom() - 15)\r\n                .attr('x', (width / 2))\r\n                .style('text-anchor', 'middle')\r\n                .style('font-size', this.getScaledFontSize(chartContext,'axis'));\r\n        },\r\n\r\n        appendYAxisLabel: function(chartContext){\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                height = chartContext.height,\r\n                yAxisLabel = (this.defaults.isVerticalOrientation) ? lang.TotalCount : genericBarView.getActiveColumnLabel(chartContext);\r\n\r\n            return d3Chart.append('text')\r\n                .attr('class', 'csui-visual-count-y-label')\r\n                .text(yAxisLabel)\r\n                .attr('transform', 'rotate(-90)')\r\n                .attr('y', -genericBarView.getMarginLeft())\r\n                .attr('x', -(height / 2))\r\n                .attr('dy', this.getScaledFontSize(chartContext,'axis'))\r\n                .style('text-anchor', 'middle')\r\n                .style('font-size', this.getScaledFontSize(chartContext,'axis'));\r\n        },\r\n\r\n        appendBarGroup: function(chartContext){\r\n\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart.append('g').attr('class', 'csui-visual-count-bars');\r\n        },\r\n\r\n        appendBarValueLabels: function(chartContext){\r\n\r\n            var d3Chart = chartContext.d3Chart;\r\n\r\n            return d3Chart.append('g').attr('class', 'csui-visual-count-chart-labels');\r\n\r\n        },\r\n\r\n        appendTotalCount: function(chartContext){\r\n            var genericBarView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                height = chartContext.height,\r\n                totalCount = genericBarView.getTotalCount(chartData);\r\n\r\n            d3Chart.append('text')\r\n                .attr('class', 'csui-visual-count-total')\r\n                .attr('text-anchor', 'left')\r\n                .attr('alignment-baseline', 'baseline')\r\n                .attr('y', height + genericBarView.getMarginBottom() - 15)\r\n                .attr('x', 0 - genericBarView.getMarginLeft() + 20)\r\n                .text(lang.Total+': ' + genericBarView.formatCount(totalCount))\r\n                .style('font-size', this.getScaledFontSize(chartContext,'total'));\r\n\r\n        }\r\n    });\r\n\r\n    return VisualCountBarView;\r\n\r\n});\r\n\n","csui.define('csui/controls/charts/visual.count/impl/chart.types/bar/visual.count.verticalbar.view',[\r\n    'csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/d3', // 3rd party libraries\r\n    'csui/controls/charts/visual.count/impl/visual.count.chart.view',\r\n    'csui/controls/charts/visual.count/impl/chart.types/visual.count.bar.view'\r\n], function (_, $, d3, VisualCountChartView, VisualCountBarView) {\r\n\r\n    var VisualCountVerticalBarView = VisualCountBarView.extend({\r\n\r\n        constructor: function VisualCountVerticalBarView(options) {\r\n            VisualCountBarView.prototype.constructor.apply(this, arguments);\r\n\r\n            this.defaults = _.defaults({\r\n                // override any defaults set in VisualCountChartView\r\n                marginTop: (this.chartOptions.get('chartTitle')) ? 50 : 30,\r\n                marginLeft: (this.chartOptions.get('showAxisLabels')) ? 80 : (this.chartOptions.get('showCountAxis')) ? 60 : 30,\r\n                marginBottom: (this.chartOptions.get('showAxisLabels') || this.chartOptions.get('showTotal')) ? 100 : 80,\r\n                marginRight: 30,\r\n                barValueLabelsOffset: 6,\r\n                isVerticalOrientation: true\r\n            }, VisualCountBarView.prototype.defaults);\r\n        },\r\n\r\n        chartType: 'verticalBar'\r\n\r\n    });\r\n\r\n    return VisualCountVerticalBarView;\r\n\r\n});\r\n\n","csui.define('csui/controls/charts/visual.count/impl/chart.types/bar/visual.count.horizontalbar.view',[\r\n    'csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/d3', // 3rd party libraries\r\n    'csui/controls/charts/visual.count/impl/visual.count.chart.view',\r\n    'csui/controls/charts/visual.count/impl/chart.types/visual.count.bar.view'\r\n], function (_, $, d3, VisualCountChartView, VisualCountBarView) {\r\n\r\n    var VisualCountHorizontalBarView = VisualCountBarView.extend({\r\n\r\n        constructor: function VisualCountHorizontalBarView(options) {\r\n            VisualCountBarView.prototype.constructor.apply(this, arguments);\r\n\r\n            var marginBottom = 30;\r\n\r\n            if (this.chartOptions.get('showCountAxis')) {\r\n                marginBottom += 20;\r\n            }\r\n\r\n            if (this.chartOptions.get('showAxisLabels') || this.chartOptions.get('showTotal')) {\r\n                marginBottom += 40;\r\n            }\r\n\r\n            this.defaults = _.defaults({\r\n                // override any defaults set in VisualCountChartView\r\n                marginTop: (this.chartOptions.get('chartTitle')) ? 50 : 30,\r\n                marginLeft: (this.chartOptions.get('showAxisLabels')) ? 140 : 120,\r\n                marginLeftMax: 200,\r\n                marginBottom: marginBottom,\r\n                marginRight: 30,\r\n                barValueLabelsOffset: 8,\r\n                isVerticalOrientation: false\r\n            }, VisualCountBarView.prototype.defaults);\r\n        },\r\n\r\n        chartType: 'horizontalBar'\r\n\r\n    });\r\n\r\n    return VisualCountHorizontalBarView;\r\n\r\n});\r\n\n","csui.define('csui/controls/charts/visual.count/impl/chart.types/pie/visual.count.pie.view',[\r\n    'csui/lib/underscore', 'csui/lib/d3', // 3rd party libraries\r\n    'csui/controls/charts/visual.count/impl/visual.count.chart.view',\r\n    'i18n!csui/controls/charts/visual.count/impl/nls/lang'\r\n], function (_, d3, VisualCountChartView,lang) {\r\n\r\n    var VisualCountPieView = VisualCountChartView.extend({\r\n\r\n        constructor: function VisualCountPieView(options) {\r\n            // Call the parent constructor to ensure the object is built with all the inherited features.\r\n            VisualCountChartView.prototype.constructor.apply(this, arguments);\r\n\r\n            this.defaults = _.defaults({\r\n                // override any defaults set in VisualCountChartView\r\n                marginTop: (this.chartOptions.get('chartTitle')) ? 60 : 40,\r\n                marginRight: 30,\r\n                marginBottom: 30,\r\n                marginLeft: 30,\r\n                innerRadius: 0,\r\n                innerRadiusNudge: function(radius) {\r\n                    return radius / 2;\r\n                },\r\n                outerRadius: function(radius){\r\n                    return radius;\r\n                },\r\n                innerLabelRadius: function(radius){\r\n                    return radius - 10;\r\n                },\r\n                outerLabelRadius: function(radius){\r\n                    return radius + 40;\r\n                }\r\n\r\n            },VisualCountChartView.prototype.defaults);\r\n\r\n        },\r\n\r\n        chartType: 'pie',\r\n\r\n        create: function(chartContext) {\r\n            var pieChartView = this;\r\n\r\n            chartContext.theme = this.getTheme(this.chartOptions.get('themeName'));\r\n            chartContext.pie = d3.pie()\r\n                .sort(null)\r\n                .value(function (d) {\r\n                    return pieChartView.getCountValue(chartContext, d);\r\n                });\r\n\r\n            chartContext.radius = pieChartView.getRadius(chartContext.height, chartContext.width);\r\n            chartContext.arc = d3.arc()\r\n                .innerRadius(pieChartView.getInnerRadius(chartContext.radius))\r\n                .outerRadius(pieChartView.getOuterRadius(chartContext.radius));\r\n            chartContext.labelArc = d3.arc()\r\n                .innerRadius(pieChartView.getInnerLabelRadius(chartContext.radius))\r\n                .outerRadius(pieChartView.getOuterLabelRadius(chartContext.radius));\r\n            chartContext.innerLabelArc = d3.arc()\r\n                .innerRadius(pieChartView.getInnerRadiusNudge(chartContext.radius))\r\n                .outerRadius(pieChartView.getOuterRadius(chartContext.radius));\r\n            chartContext.legendHeightRatio = this.defaults.legendHeightRatio;\r\n\r\n            chartContext.arcTween = function(newSlice) {\r\n                var i = d3.interpolate(this.currentSlice, newSlice);\r\n                this.currentSlice = i(0);\r\n                return function (t) {\r\n                    return chartContext.arc(i(t));\r\n                };\r\n            },\r\n            chartContext.arcCentroid = function(d) {\r\n                // note this function is necessary due to some browsers converting small numbers to scientific notation strings\r\n                // these are not valid in a SVG transform syntax.\r\n                // see the d3 API under d3.interpolateNumber() for more info\r\n                var x = chartContext.arc.centroid(d)[0],\r\n                    y = chartContext.arc.centroid(d)[1],\r\n                    centroid = {\r\n                        x: !isNaN(x) ? x : 0,\r\n                        y: !isNaN(y) ? y : 0\r\n                    };\r\n\r\n                return centroid;\r\n            };\r\n\r\n            if (this.chartOptions.get('showTotal')) {\r\n                pieChartView.appendTotal(chartContext);\r\n            }\r\n            pieChartView.update(chartContext);\r\n\r\n            return chartContext.d3Chart;\r\n        },\r\n\r\n        update: function(chartContext) {\r\n            var pieChartView = this;\r\n\r\n            pieChartView.updateSlices(chartContext);\r\n            if (this.chartOptions.get('showLegend')) {\r\n                pieChartView.updateLegend(chartContext);\r\n            }\r\n            else {\r\n                pieChartView.updateSliceLabelLines(chartContext);\r\n                pieChartView.updateCategoryLabels(chartContext);\r\n            }\r\n            if (this.chartOptions.get('showValueLabels')) {\r\n                pieChartView.updateValueLabels(chartContext);\r\n            }\r\n            if (this.chartOptions.get('showTotal')) {\r\n                pieChartView.updateTotal(chartContext);\r\n            }\r\n\r\n            pieChartView.updateA11yTable(chartContext);\r\n        },\r\n\r\n        updateSlices: function(chartContext) {\r\n\r\n            var pieChartView = this,\r\n                chartData = chartContext.chartData,\r\n                d3Chart = chartContext.d3Chart,\r\n                pie = chartContext.pie,\r\n                arc = chartContext.arc,\r\n                arcTween = chartContext.arcTween,\r\n                arcCentroid = chartContext.arcCentroid,\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms),\r\n                colorOpacity = chartContext.theme.opacity;\r\n\r\n            // join the data with the slices\r\n            var pieSlices = d3Chart.select('.csui-visual-count-pie-chart')\r\n                .selectAll('.csui-visual-count-pie-slice')\r\n                .data(pie(chartData));\r\n\r\n            // remove unwanted slices\r\n            pieSlices\r\n                .exit()\r\n                .attr('fill','#999')\r\n                .transition(t)\r\n                .attr('fill-opacity',0)\r\n                .remove();\r\n\r\n            // update existing slices\r\n            pieSlices\r\n                .transition(t)\r\n                .attr('fill', function (d) {\r\n                    return pieChartView.getCategoryColor(chartContext,d.data);\r\n                })\r\n                .attrTween('d',arcTween);\r\n\r\n            // enter new slices\r\n            pieSlices\r\n                .enter()\r\n                .append('g')\r\n                .attr('class', 'csui-visual-count-pie-slice-group')\r\n                .append('path')\r\n                .attr('class', 'csui-visual-count-pie-slice')\r\n                .attr('fill', '#999')\r\n                .attr('d',arc)\r\n                .attr('transform',function(d) {\r\n                    return 'translate(' + arcCentroid(d).x + ',' + arcCentroid(d).y + ')';\r\n                })\r\n                .attr('fill-opacity',0)\r\n                .transition(t)\r\n                .attr('transform','translate(0,0)')\r\n                .attr('fill-opacity', colorOpacity)\r\n                .attr('fill', function (d) {\r\n                    return pieChartView.getCategoryColor(chartContext,d.data);\r\n                })\r\n                .each(function(d) {\r\n                    this.currentSlice = d;\r\n                });\r\n\r\n            return d3Chart;\r\n\r\n        },\r\n\r\n        updateCategoryLabels: function(chartContext){\r\n\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                pie = chartContext.pie,\r\n                pieLabel = pieChartView.pieLabel,\r\n                labelArc = chartContext.labelArc,\r\n                ms = chartContext.transitionDuration,\r\n                label = false,\r\n                t = d3.transition().duration(ms);\r\n\r\n            function textAnchor(d) {\r\n                // anchor text left or right depending on x position relative to center\r\n                return (labelArc.centroid(d)[0] < 0) ? 'end' : 'start';\r\n            }\r\n\r\n            if (!pieChartView.chartOptions.get('showLegend')) {\r\n                label = true;\r\n            }\r\n\r\n            // join the data with the slices\r\n            var categoryLabels = d3Chart.select('.csui-visual-count-pie-chart')\r\n                .selectAll('.csui-visual-count-chart-label.outside')\r\n                .data(pie(chartData));\r\n\r\n            // update existing labels\r\n            categoryLabels\r\n                .transition(t)\r\n                .attr('transform', function (d) {\r\n                    return 'translate(' + labelArc.centroid(d) + ')';\r\n                })\r\n                .attr('text-anchor', textAnchor)\r\n                .text(function(d) {\r\n                    return pieLabel(chartContext,d,pieChartView,label);\r\n                });\r\n\r\n            categoryLabels\r\n                .exit()\r\n                .transition(t)\r\n                .attr('fill-opacity',0)\r\n                .remove();\r\n\r\n            categoryLabels\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', 'csui-visual-count-chart-label outside')\r\n                .style('font-size', this.getScaledFontSize(chartContext,'radial'))\r\n                .attr('fill-opacity',0)\r\n                .attr('transform', function (d) {\r\n                    return 'translate(' + labelArc.centroid(d) + ')';\r\n                })\r\n                .transition(t)\r\n                .attr('fill-opacity',1)\r\n                .attr('text-anchor', textAnchor)\r\n                .attr('alignment-baseline', 'middle')\r\n                .text(function(d) {\r\n                    return pieLabel(chartContext,d,pieChartView,label);\r\n                });\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        updateValueLabels: function(chartContext){\r\n\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                pie = chartContext.pie,\r\n                pieLabel = pieChartView.pieLabel,\r\n                innnerLabelArc = chartContext.innerLabelArc,\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms);\r\n\r\n            // join the data with the slices\r\n            var valueLabels = d3Chart.select('.csui-visual-count-pie-chart')\r\n                .selectAll('.csui-visual-count-value-label')\r\n                .data(pie(chartData));\r\n\r\n            // update existing labels\r\n            valueLabels\r\n                .transition(t)\r\n                .attr('transform', function (d) {\r\n                    return 'translate(' + innnerLabelArc.centroid(d) + ')';\r\n                })\r\n                .text(function(d) {\r\n                    return pieLabel(chartContext,d,pieChartView);\r\n                });\r\n\r\n            valueLabels\r\n                .exit()\r\n                .transition(t)\r\n                .attr('fill-opacity',0)\r\n                .remove();\r\n\r\n            valueLabels\r\n                .enter()\r\n                .append('text')\r\n                .attr('class', 'csui-visual-count-value-label inside')\r\n                .style('font-size', this.getScaledFontSize(chartContext,'value'))\r\n                .attr('fill-opacity',0)\r\n                .attr('transform', function (d) {\r\n                    return 'translate(' + innnerLabelArc.centroid(d) + ')';\r\n                })\r\n                .transition(t)\r\n                .attr('fill-opacity',1)\r\n                .attr('text-anchor', 'middle')\r\n                .attr('alignment-baseline', 'middle')\r\n                .text(function(d) {\r\n                    return pieLabel(chartContext,d,pieChartView);\r\n                });\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        updateSliceLabelLines: function(chartContext) {\r\n\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                pie = chartContext.pie,\r\n                radius = chartContext.radius,\r\n                lineStartArc = d3.arc()\r\n                    .innerRadius(radius)\r\n                    .outerRadius(pieChartView.getOuterRadius(radius)),\r\n                lineEndArc = d3.arc()\r\n                    .innerRadius(radius)\r\n                    .outerRadius(pieChartView.getOuterLabelRadius(radius) - 20),\r\n                lineGenerator = d3.line(),\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms);\r\n\r\n            // join the data with the slices\r\n            var pieSliceLabelLines = d3Chart.select('.csui-visual-count-pie-chart')\r\n                .selectAll('.csui-visual-count-chart-labelline')\r\n                .data(pie(chartData));\r\n\r\n            pieSliceLabelLines\r\n                .attr('stroke-opacity',0)\r\n                .transition(t)\r\n                .attr('stroke-opacity',1)\r\n                .attr('d', function(d) {\r\n                    var points = [lineStartArc.centroid(d),lineEndArc.centroid(d)];\r\n                    return lineGenerator(points);\r\n                });\r\n\r\n            pieSliceLabelLines.exit()\r\n                .transition(t)\r\n                .attr('stroke-opacity',0)\r\n                .remove();\r\n\r\n            pieSliceLabelLines.enter()\r\n                .append('path')\r\n                .attr('stroke-opacity',0)\r\n                .attr('class','csui-visual-count-chart-labelline')\r\n                .transition(t)\r\n                .attr('stroke-opacity',1)\r\n                .attr('d', function(d) {\r\n                    var points = [lineStartArc.centroid(d),lineEndArc.centroid(d)];\r\n                    return lineGenerator(points);\r\n                });\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        updateLegend: function(chartContext){\r\n\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                pieLegendContainer = d3Chart.select('.csui-visual-count-pie-legend-container'),\r\n                colorOpacity = chartContext.theme.opacity,\r\n                chartHeight = this.getChartHeight(chartContext),\r\n                activeColumn = this.getActiveColumnLabel(chartContext),\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms),\r\n                fontSize = getLegendFontSize();\r\n\r\n            function getLegendFontSize() {\r\n                // provides a variable size according to number of categories\r\n                var fontSize = pieChartView.getScaledFontSize(chartContext,'legend'),\r\n                    maxFontSize = pieChartView.defaults.labelTypes.legend.max,\r\n                    minFontSize = pieChartView.defaults.labelTypes.legend.min;\r\n\r\n                if (fontSize * chartData.length * 1.6 > chartHeight) {\r\n                    fontSize = chartHeight / (chartData.length * 1.6);\r\n                }\r\n\r\n                fontSize = (fontSize > maxFontSize) ? maxFontSize : fontSize;\r\n                fontSize = (fontSize < minFontSize) ? minFontSize : fontSize;\r\n\r\n                return fontSize;\r\n            }\r\n\r\n            function legendYPos(i) {\r\n                var legendHeight = fontSize * 1.6,\r\n                    offset = (legendHeight * chartData.length) / 2;\r\n\r\n                return (i * legendHeight) - offset;\r\n            }\r\n\r\n            function explode(d, offset) {\r\n                var radial = (d.startAngle + d.endAngle) / 2,\r\n                    offsetX = Math.sin(radial) * offset,\r\n                    offsetY = -Math.cos(radial) * offset;\r\n                return {\r\n                    x: offsetX,\r\n                    y: offsetY\r\n                };\r\n            }\r\n\r\n            var legends = pieLegendContainer.selectAll('.csui-visual-count-pie-legend')\r\n                    .data(chartData);\r\n\r\n            // update existing legends\r\n\r\n            legends\r\n                .transition(t)\r\n                .attr('transform', function (d,i) {\r\n                    return 'translate(0,' + legendYPos(i) + ')';\r\n                });\r\n\r\n            legends\r\n                .select('.csui-visual-count-pie-legend-text')\r\n                .style('font-size', fontSize)\r\n                .attr('fill-opacity', 0)\r\n                .transition(t)\r\n                .attr('fill-opacity', 1)\r\n                .attr('dx', fontSize * 1.1)\r\n                .attr('dy', fontSize)\r\n                .text(function (d) {\r\n                    return pieChartView.getDataLabel(chartContext, d);\r\n                });\r\n\r\n            legends\r\n                .select('.csui-visual-count-pie-legend-swatch')\r\n                .attr('r', fontSize / 1.5)\r\n                .attr('cy',fontSize - (fontSize / 3))\r\n                .attr('fill-opacity', colorOpacity);\r\n\r\n\r\n\r\n            // remove unwanted legends\r\n            var legendsExit = legends.exit();\r\n\r\n            legendsExit\r\n                .select('.csui-visual-count-pie-legend-text')\r\n                .transition(t)\r\n                .attr('fill-opacity',0);\r\n\r\n            legendsExit\r\n                .select('.csui-visual-count-pie-legend-swatch')\r\n                .attr('fill','#999')\r\n                .transition(t)\r\n                .attr('fill-opacity',0);\r\n\r\n            legendsExit\r\n                .transition(t)\r\n                .remove();\r\n\r\n            // enter new legends\r\n            var legendsEnter = legends.enter()\r\n                .append('g')\r\n                .attr('class', 'csui-visual-count-pie-legend')\r\n                .on('mousedown', function (target,index) {\r\n                    d3Chart.selectAll('.csui-visual-count-pie-slice,.csui-visual-count-pie-legend-swatch,.csui-visual-count-pie-legend-text')\r\n                        .attr('fill-opacity', 0.3)\r\n                        .filter(function (d,i) {\r\n                            return i === index;\r\n                        })\r\n                        .attr('fill-opacity', 1);\r\n                    d3Chart.selectAll('.csui-visual-count-pie-slice')\r\n                        .filter(function (d,i) {\r\n                            return i === index;\r\n                        })\r\n                        .attr('transform', function(d) {\r\n                            var offset = explode(d,10);\r\n                            return 'translate(' + offset.x + ',' + offset.y + ')';\r\n                        });\r\n                })\r\n                .on('mouseup', function () {\r\n                    d3Chart.selectAll('.csui-visual-count-pie-slice,.csui-visual-count-pie-legend-swatch,.csui-visual-count-pie-legend-text')\r\n                        .attr('fill-opacity', colorOpacity);\r\n                    d3Chart.selectAll('.csui-visual-count-pie-slice')\r\n                        .attr('transform', function() {\r\n                            return 'translate(0,0)';\r\n                        });\r\n                });\r\n\r\n            legendsEnter\r\n                .attr('transform', 'translate(0,0)')\r\n                .transition(t)\r\n                .attr('transform', function (d,i) {\r\n                    return 'translate(0,' + legendYPos(i) + ')';\r\n                });\r\n\r\n            legendsEnter\r\n                .append('circle')\r\n                .attr('class', 'csui-visual-count-pie-legend-swatch')\r\n                .attr('fill-opacity',0)\r\n                .transition(t)\r\n                .attr('fill-opacity', colorOpacity)\r\n                .attr('fill', function (d) {\r\n                    return pieChartView.getCategoryColor(chartContext,d);\r\n                })\r\n                .attr('r', fontSize / 1.5)\r\n                .attr('cx',0)\r\n                .attr('cy',fontSize - (fontSize / 3));\r\n\r\n            legendsEnter\r\n                .append('text')\r\n                .attr('class', 'csui-visual-count-pie-legend-text')\r\n                .style('font-size', fontSize)\r\n                .attr('fill-opacity',0)\r\n                .transition(t)\r\n                .delay(200)\r\n                .attr('fill-opacity',1)\r\n                .attr('dx', fontSize * 1.1)\r\n                .attr('dy', fontSize)\r\n                .text(function (d) {\r\n                    return pieChartView.getDataLabel(chartContext, d);\r\n                });\r\n\r\n            if (this.chartOptions.get('showAxisLabels')) {\r\n                // update the legend title\r\n                var legendTitle = pieLegendContainer;\r\n\r\n                legendTitle\r\n                    .select('.csui-visual-count-pie-legend-active-column')\r\n                    .transition(t)\r\n                    .attr('fill-opacity', 0)\r\n                    .remove();\r\n\r\n                legendTitle\r\n                    .append('text')\r\n                    .attr('class', 'csui-visual-count-pie-legend-active-column')\r\n                    .style('font-size', this.getScaledFontSize(chartContext,'legendTitle'))\r\n                    .attr('fill-opacity', 0)\r\n                    .attr('transform', 'rotate(-90)')\r\n                    .attr('text-anchor', 'middle')\r\n                    .attr('alignment-baseline', 'baseline')\r\n                    .attr('y', 0)\r\n                    .attr('x', 0)\r\n                    .attr('dy', -this.getScaledFontSize(chartContext,'legendTitle') * 1.3)\r\n                    .transition(t)\r\n                    .attr('fill-opacity', 1)\r\n                    .text(activeColumn);\r\n            }\r\n        },\r\n\r\n        updateTotal: function(chartContext){\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                totalCount = this.getTotalCount(chartData),\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms);\r\n\r\n            d3Chart.select('.csui-visual-count-total')\r\n                .attr('fill-opacity',0)\r\n                .transition(t)\r\n                .attr('fill-opacity',1)\r\n                .text(lang.Total + ': ' + pieChartView.formatCount(totalCount));\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        getRadius: function(height, width){\r\n            return Math.min(width / 3, height / 2); // 1/3 of width or half of height\r\n        },\r\n        \r\n        getInnerRadius: function(radius){\r\n            return _.isFunction(this.defaults.innerRadius) ? this.defaults.innerRadius.call(this, radius) : this.defaults.innerRadius;\r\n        },\r\n\r\n        getInnerRadiusNudge: function(radius){\r\n            return _.isFunction(this.defaults.innerRadiusNudge) ? this.defaults.innerRadiusNudge.call(this, radius) : this.defaults.innerRadiusNudge;\r\n        },\r\n        \r\n        getOuterRadius: function(radius){\r\n            return _.isFunction(this.defaults.outerRadius) ? this.defaults.outerRadius.call(this, radius) : this.defaults.outerRadius;\r\n        },\r\n\r\n        getInnerLabelRadius: function(radius){\r\n            return _.isFunction(this.defaults.innerLabelRadius) ? this.defaults.innerLabelRadius.call(this, radius) : this.defaults.innerLabelRadius;\r\n        },\r\n\r\n        getOuterLabelRadius: function(radius){\r\n            return _.isFunction(this.defaults.outerLabelRadius) ? this.defaults.outerLabelRadius.call(this, radius) : this.defaults.outerLabelRadius;\r\n        },\r\n\r\n        appendGroups: function (chartContext) {\r\n            var d3Chart = chartContext.d3Chart,\r\n                minPadding = 60, // minimum padding between chart and legend when widget width is reduced\r\n                pieCenter = chartContext.pieCenter,\r\n                height = chartContext.height;\r\n\r\n            d3Chart.append('g')\r\n                   .attr('transform', 'translate(' + this.getMarginLeft() + ',' + this.getMarginTop() + ')')\r\n                   .attr('class', 'csui-visual-count-vis-wrapper');\r\n\r\n            d3Chart.select('.csui-visual-count-vis-wrapper')\r\n                   .append('g')\r\n                   .attr('class', 'csui-visual-count-pie-chart')\r\n                   .attr('transform', 'translate(' + pieCenter.x + ',' + pieCenter.y + ')');\r\n\r\n            if (this.chartOptions.get('showLegend')) {\r\n                d3Chart.select('.csui-visual-count-vis-wrapper')\r\n                    .append('g')\r\n                    .attr('class', 'csui-visual-count-pie-legend-container')\r\n                    .attr('height', height)\r\n                    .attr('transform', 'translate(' + (pieCenter.x * 2 + minPadding) + ',' + pieCenter.y + ')'); // center at 2/3 + padding\r\n            }\r\n\r\n            return d3Chart;\r\n        },\r\n\r\n        appendTotal: function(chartContext) {\r\n            var d3Chart = chartContext.d3Chart,\r\n                height = chartContext.height;\r\n\r\n            d3Chart.select('.csui-visual-count-vis-wrapper')\r\n                .append('g')\r\n                .attr('class', 'csui-visual-count-pie-total-container')\r\n                .append('text')\r\n                .attr('class', 'csui-visual-count-total')\r\n                .style('font-size', this.getScaledFontSize(chartContext,'total'))\r\n                .attr('text-anchor', 'left')\r\n                .attr('alignment-baseline', 'baseline')\r\n                .attr('y', height + this.getMarginBottom() - 15)\r\n                .attr('x', 0 - this.getMarginLeft() + 20);\r\n        },\r\n\r\n        pieLabel: function(chartContext,d,pieChartView,label) {\r\n            var actual = pieChartView.getCountValue(chartContext, d.data),\r\n                percentage = ((d.endAngle - d.startAngle) / (2 * Math.PI) * 100).toFixed(1),\r\n                radius = chartContext.radius,\r\n                arcSize = d.endAngle - d.startAngle, // in radians\r\n                minRadius = 60, // minimum radius for labels to appear\r\n                minArcLength = 30; // ratio of radius to arcSize to determine if label will appear on this arc (arcSize / minArcSizeRatio)\r\n\r\n            if (label) {\r\n                // show category label\r\n                label = pieChartView.getDataLabel(chartContext, d.data);\r\n            }\r\n            else {\r\n                // numeric value or percentage\r\n                label = (pieChartView.chartOptions.get('showAsPercentage')) ? percentage + ' %' : pieChartView.formatCount(actual);\r\n                // hide label if no room\r\n                label = ((radius * arcSize >= minArcLength) && (radius >= minRadius)) ? label : '';\r\n            }\r\n\r\n            return label;\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountPieView;\r\n\r\n});\r\n\n","csui.define('csui/controls/charts/visual.count/impl/chart.types/pie/visual.count.donut.view',[\r\n    'csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/d3', // 3rd party libraries\r\n    'csui/controls/charts/visual.count/impl/visual.count.chart.view',\r\n    'csui/controls/charts/visual.count/impl/chart.types/pie/visual.count.pie.view',\r\n    'i18n!csui/controls/charts/visual.count/impl/nls/lang'\r\n], function (_, $, d3, VisualCountChartView, VisualCountPieView, lang) {\r\n\r\n    var VisualCountDonutView = VisualCountPieView.extend({\r\n\r\n        constructor: function VisualCountDonutView(options) {\r\n            VisualCountPieView.prototype.constructor.apply(this, arguments);\r\n\r\n            this.defaults = _.defaults({\r\n                marginTop: (this.chartOptions.get('chartTitle')) ? 50 : 40,\r\n                marginRight: 30,\r\n                marginBottom: 30,\r\n                marginLeft: 30,\r\n                donutWidth: 1.5,\r\n                outerRadius: function(radius){\r\n                    return radius;\r\n                },\r\n                innerLabelRadius: function(radius){\r\n                    return radius - 10;\r\n                },\r\n                outerLabelRadius: function(radius){\r\n                    return radius + 50;\r\n                }\r\n            },VisualCountPieView.prototype.defaults);\r\n\r\n            this.defaults.innerRadius = function(radius){\r\n                return radius / this.defaults.donutWidth;\r\n            };\r\n\r\n            this.defaults.innerRadiusNudge = function(radius){\r\n                return radius / this.defaults.donutWidth;\r\n            };\r\n        },\r\n\r\n        chartType: 'donut',\r\n\r\n        appendTotal: function(chartContext){\r\n\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                pieCenter = chartContext.pieCenter,\r\n                height = chartContext.height,\r\n                width = chartContext.width,\r\n                totalCount = this.getTotalCount(chartData);\r\n\r\n            function fontSizeForTotal(innerDiscSize) {\r\n                var stringLength = (pieChartView.formatCount(totalCount).length),\r\n                    fontRatios = [1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8], // a hash is faster than Math ;-)\r\n                    fontRatio = (stringLength <= fontRatios.length) ? fontRatios[stringLength - 1] : 12; // 12 is smallest size possible\r\n                return innerDiscSize / fontRatio;\r\n            }\r\n\r\n            var minFontSize = 10,\r\n                radius = this.getRadius(height, width),\r\n                donutWidth = this.defaults.donutWidth,\r\n                valueFontSize = (fontSizeForTotal(radius / donutWidth) >= minFontSize) ? fontSizeForTotal(radius / donutWidth) : minFontSize,\r\n                labelRatio = 2.8,\r\n                valueOffsetRatio = 10,\r\n                labelOffsetRatio = 1.5,\r\n                innerDiscMargin = 10,\r\n                donutTotal = d3Chart.select('.csui-visual-count-vis-wrapper')\r\n                                .append('g')\r\n                                .attr('class','csui-visual-count-pie-total-roundel')\r\n                                .attr('transform', 'translate(' + pieCenter.x + ',' + pieCenter.y + ')'); // center at 1/3\r\n\r\n            donutTotal.append('g')\r\n                      .attr('class', 'csui-visual-count-pie-total-label-disc')\r\n                      .append('circle')\r\n                       .attr('transform', 'translate(0,0)')\r\n                      .attr('cx', 0)\r\n                      .attr('cy', 0)\r\n                      .attr('r', (radius / donutWidth) - innerDiscMargin);\r\n\r\n            donutTotal.append('text')\r\n                      .attr('transform', 'translate(0,' + (-(valueFontSize / labelOffsetRatio)) + ')')\r\n                      .attr('class', 'csui-visual-count-pie-total-label')\r\n                      .attr('text-anchor', 'middle')\r\n                      .attr('font-size', valueFontSize / labelRatio)\r\n                      .text(function () {\r\n                         // only show label if font is big enough\r\n                         return (valueFontSize / labelRatio >= 8) ? lang.Total : '';\r\n                      });\r\n\r\n            donutTotal.append('text')\r\n                      .attr('class', 'csui-visual-count-total')\r\n                      .attr('transform', 'translate(0,' + (valueFontSize / valueOffsetRatio) + ')')\r\n                      .attr('text-anchor', 'middle')\r\n                      .attr('alignment-baseline', 'middle')\r\n                      .attr('font-size', valueFontSize) // pass in the inner disc radius to get the right font size\r\n                      .text(pieChartView.formatCount(totalCount));\r\n        },\r\n\r\n        updateTotal: function(chartContext){\r\n            var pieChartView = this,\r\n                d3Chart = chartContext.d3Chart,\r\n                chartData = chartContext.chartData,\r\n                totalCount = this.getTotalCount(chartData),\r\n                ms = chartContext.transitionDuration,\r\n                t = d3.transition().duration(ms);\r\n\r\n            d3Chart.select('.csui-visual-count-total')\r\n                .attr('fill-opacity',0)\r\n                .transition(t)\r\n                .duration(ms)\r\n                .attr('fill-opacity',1)\r\n                .text(pieChartView.formatCount(totalCount));\r\n\r\n            return d3Chart;\r\n        }\r\n    });\r\n\r\n    return VisualCountDonutView;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/controls/charts/visual.count/impl/visual.count.empty',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-visual-count-empty\\\"><p class=\\\"csui-visual-count-nodata-message\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.text || (depth0 != null ? depth0.text : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"text\",\"hash\":{}}) : helper)))\n    + \"\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.text || (depth0 != null ? depth0.text : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"text\",\"hash\":{}}) : helper)))\n    + \"</p></div>\";\n}});\nHandlebars.registerPartial('csui_controls_charts_visual.count_impl_visual.count.empty', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/controls/charts/visual.count/impl/visual.count.empty.view',['csui/lib/marionette3',\r\n    'hbs!csui/controls/charts/visual.count/impl/visual.count.empty',\r\n    'i18n!csui/controls/charts/visual.count/impl/nls/lang'\r\n], function (Marionette, template, lang) {\r\n\r\n\r\n    var NoDataView = Marionette.View.extend({\r\n\r\n        constructor: function NoDataView() {\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        className: 'csui-visual-count-empty-container',\r\n\r\n        template: template,\r\n\r\n        templateContext: function() {\r\n            return {\r\n                text: this.options.text || lang.NodataDefaultText\r\n            };\r\n        }\r\n\r\n    });\r\n\r\n    return NoDataView;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/controls/charts/visual.count/impl/visual.count',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-visual-count-chart-container\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_controls_charts_visual.count_impl_visual.count', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/controls/charts/visual.count/visual.count.view',[\r\n    'csui/lib/marionette3',\r\n    'csui/lib/underscore',\r\n    'csui/lib/jquery',\r\n    'csui/controls/progressblocker/blocker',\r\n    'csui/controls/charts/visual.count/impl/chart.types/bar/visual.count.verticalbar.view',\r\n    'csui/controls/charts/visual.count/impl/chart.types/bar/visual.count.horizontalbar.view',\r\n    'csui/controls/charts/visual.count/impl/chart.types/pie/visual.count.donut.view',\r\n    'csui/controls/charts/visual.count/impl/chart.types/pie/visual.count.pie.view',\r\n    'csui/controls/charts/visual.count/impl/visual.count.empty.view',\r\n    'hbs!csui/controls/charts/visual.count/impl/visual.count',\r\n    'css!csui/controls/charts/visual.count/impl/visual.count'\r\n], function(Marionette, _, $,\r\n            BlockingView,\r\n            VerticalBarChartView,\r\n            HorizontalBarChartView,\r\n            DonutChartView,\r\n            PieChartView,\r\n            EmptyView,\r\n            template){\r\n    'use strict';\r\n\r\n    var VisualCountView = Marionette.View.extend({\r\n\r\n        className: 'csui-visual-count-container',\r\n\r\n        template: template,\r\n\r\n        regions: {\r\n            chart: {\r\n                el: '.csui-visual-count-chart-container',\r\n                replaceElement: true\r\n            }\r\n        },\r\n\r\n        constructor: function VisualCountView(options) {\r\n\r\n            BlockingView.imbue({\r\n                parent: this\r\n            });\r\n\r\n            this.chartView = this._getChartView(options);\r\n            Marionette.View.prototype.constructor.apply(this, arguments);\r\n\r\n\r\n            // SVG needs to be redrawn when the container is re-sized\r\n            var self = this;\r\n            this.onWinRefresh = _.debounce(function() {\r\n                self.render();\r\n            },20);\r\n            $(window).on(\"resize.app\", this.onWinRefresh);\r\n\r\n            this.listenTo(options.collection, 'reset', this.render)\r\n                .listenTo(options.collection, 'request', this.blockActions)\r\n                .listenTo(options.collection, 'sync error', this.onCollectionSynced)\r\n                .listenTo(options.chartOptions, 'change', this.render);\r\n        },\r\n\r\n        childViewEvents: {\r\n            'redraw:chart': 'render'\r\n        },\r\n\r\n        onDomRefresh: function(){\r\n            var ChartView = this.chartView;\r\n            this.showChildView('chart', new ChartView(this.options));\r\n        },\r\n\r\n        onCollectionSynced: function(collection) {\r\n\r\n            this.unblockActions();\r\n\r\n            var $chart = $('svg',this.$el);\r\n\r\n            if (collection && collection.isEmpty()) {\r\n                this._renderEmptyView();\r\n            }\r\n            else if ($chart.length === 0) {\r\n                this.render();\r\n            }\r\n        },\r\n\r\n        onDestroy: function () {\r\n            $(window).off(\"resize.app\", this.onWinRefresh);\r\n        },\r\n\r\n        _renderEmptyView: function () {\r\n            this.showChildView('chart', new EmptyView());\r\n        },\r\n\r\n        _getChartView: function (options) {\r\n            var chartType = options && options.chartType,\r\n                chartView = VerticalBarChartView;\r\n\r\n            if (chartType){\r\n                switch(chartType) {\r\n                    case \"donut\":\r\n                        chartView = DonutChartView;\r\n                        break;\r\n                    case \"pie\":\r\n                        chartView = PieChartView;\r\n                        break;\r\n                    case \"horizontalBar\":\r\n                        chartView = HorizontalBarChartView;\r\n                        break;\r\n                    case \"verticalBar\":\r\n                        // although this is the same as the default case, it's more semantic to include it here\r\n                        chartView = VerticalBarChartView;\r\n                        break;\r\n                    default:\r\n                        // VerticalBarChartView\r\n                }\r\n            }\r\n\r\n            return chartView;\r\n        }\r\n\r\n    });\r\n\r\n    return VisualCountView;\r\n\r\n});\n","csui.define('bundles/csui-visualisation',[\r\n\r\n  // d3 visualisation library\r\n  \"csui/lib/d3\",\r\n\r\n  // Controls\r\n  \"csui/controls/charts/visual.count/visual.count.view\"\r\n\r\n], {});\r\n\r\ncsui.require(['require', 'css'], function (require, css) {\r\n  css.styleLoad(require, 'csui/bundles/csui-visualisation', true);\r\n});\r\n\n"]}