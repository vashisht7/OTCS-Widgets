{"version":3,"sources":["../../src/controls/bosearch/bosearch.model.js","../../src/controls/bosearch/searchform/bosearchform.model.js","../../src/controls/property.panels/reference/impl/workspace.reference.model.js","../../src/controls/property.panels/reference/impl/nls/lang.js","../../src/controls/property.panels/reference/impl/nls/root/lang.js","../../src/controls/property.panels/reference/impl/nls/lang!i18n","../../src/controls/property.panels/reference/impl/reference.panel.model.js","../../src/models/boattachmentcontext/attachmentcontext.category.model.js","../../src/models/boattachmentcontext/attachmentcontext.category.factory.js","../../src/widgets/boattachments/impl/nls/lang.js","../../src/widgets/boattachments/impl/nls/root/lang.js","../../src/widgets/boattachments/impl/nls/lang!i18n","../../src/models/boattachmentcontext/attachmentcontext.busobjinfo.model.js","../../src/models/boattachmentcontext/attachmentcontext.node.model.js","../../src/models/boattachmentcontext/attachmentcontext.node.factory.js","../../src/models/boattachmentcontext/attachmentcontext.busobjinfo.factory.js","../../src/models/boattachmentcontext/attachmentcontext.model.js","../../src/widgets/boattachments/impl/boattachmentutil.js","../../src/widgets/boattachments/impl/boattachment.model.js","../../src/widgets/boattachments/impl/boattachments.model.js","../../src/widgets/myattachments/metadata.attachment.model.js","../../src/widgets/myattachments/metadata.attachments.model.js","../../src/widgets/myattachments/metadata.nodeattachments.model.js","../../src/widgets/dossier/impl/dossier.model.js","../../src/widgets/dossier/impl/documentslist/impl/documents.model.js","../../src/widgets/dossier/impl/documentslistitem/impl/metadata.model.js","../../src/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model.js","../../src/widgets/workspaces/models/workspace.collection.js","../../src/widgets/workspaces/models/workspace.types.collection.js","../../src/models/boattachmentcontext/attachmentcontext.factory.js","../../src/widgets/header/impl/completenesscheck/impl/missingdocuments.factory.js","xecmpf-core.js"],"names":["csui","define","_","$","Backbone","BoSearchModel","Model","extend","constructor","attributes","options","prototype","apply","this","arguments","module","log","Url","ResourceModel","BusinessObjectSearchFormModel","defaults","data","schema","call","makeResource","url","path","bo_type_id","get","params","resource","param","baseurl","connector","connection","combine","replace","parse","response","form","results","id","name","bo_type_name","bus_att_metadata_mapping","business_attachments","metadata_mapping","title","NodeConnectableMixin","WorkspaceReferenceModel","makeNodeConnectable","sync","method","model","node_id","bo_id","str","sformat","ext_system_id","queryParams","actions","properties","business","business_properties","business_object_id","business_object_type_id","business_object_type_name","external_system_id","external_system_name","ext_system_name","workspace_type_id","workspace_type_name","change_reference","complete_reference","mixin","root","en-us","en","cannotCompleteBusinessReference","errorUpdatingWorkspaceReference","businessObjectIdLabel","referenceTabTitle","referenceSearchButtonTitle","referenceSearchButtonLabel","referenceRemoveButtonTitle","referenceReplaceButtonTitle","referencePanelOverrideNote","removeBOReferenceAlertTitle","removeBOReferenceAlertDescription","removeBOReferenceSuccessMessage","errorRemovingWorkspaceReference","lang","ReferencePanelModel","set","NodeModel","FetchableMixin","AttachmentContextCategoryModel","node","category_id","fetch","categoryOptions","result","Deferred","resolve","promise","ModelFactory","ConnectorFactory","NodeModelFactory","AttachmentContextFactoryModel","AttachmentContextCategoryFactory","propertyPrefix","context","attachmentContextCategory","getModel","getObject","property","dialogTitle","searchPlaceholder","noResultsPlaceholder","errorFieldFormatTagUnrecognized","errorCustomColumnConfigInvalid","errorCustomColumnMissingBraces","errorOrderByMustNotBeString","errorOrderByMissingBraces","errorFilteringFailed","noAttachmentsFound","businessAttachments","CommandSnapshot","addBusinessAttachment","fileSizeByte","fileSizeKByte","fileSizeMByte","parent_id","reservedBy","snaphotCreated","snaphotFailed","CommandDoneVerbCreated","fileSizeGByte","items","invalidConfigurationNoBusObjDisplay","invalidConfigurationNoBusObjConfigured","invalidConfigurationNoBusObjAvailable","noBusinessObjectFound","invalidConfiguration","ModalAlert","ResourceMixin","AttachmentContextBusinessObjectInfoModel","invalidConfigurationShown","invalidErrorMessage","_logInvalidConfiguration","_isConfigEmpty","busObjectKey","warn","console","last","busObjectType","extSystemId","_logEmptyBusObjKeyConfiguration","_logEmptyBusObjTypeConfiguration","_logEmptyBusAppIDConfiguration","_showInvalidConfigurationError","msg","showError","config","isConfigEmpty","isObject","length","isEmpty","_isConfigValid","isBusKeyEmpty","isBusObjEmpty","isExtSystemEmpty","_isWorkspaceWithoutConfig","_getCategoryInfo","busObjectId","_loadCategories","promises","self","busObjectIdCatInfo","busObjectTypeCatInfo","extSystemIdCatInfo","categoryId","catModelObjectId","push","listenTo","catVal","categoryAttr","responseJSON","error","catModelObjectType","catModelExtSystem","configValue","res","regExp","test","lastIndex","exec","busProps","find","workspace_references","wksp_ref","has_default_display","isUndefined","isEarly","business_object_type","titleIcon","wksp_info","wksp_type_icon","originalFetch","deferred","when","done","AttachmentContextNode","workspaceSpecific","syncToNode","type","nodeId","debug","Fetchable","toString","AttachmentContextNodeModel","AttachmentContextNodeFactory","attachmentContextNode","AttachmentContextBusinessObjectInfoFactory","attachmentContextBusinessObjectInfo","Context","AttachmentContexCategoryFactory","AttachmentContextModel","attachmentSpecific","attachmentSpecificFactories","wkspid","setAttachmentSpecific","Factory","_isAttachmentSpecificFactory","isAttachmentSpecific","found","ii","getOuterContext","_getAttachmentObject","getCollection","methodName","fetched","old_id","then","new_id","factories","getFactories","_factories","obj","f","nodepromise","isWksp","wkspStatus","wksp_id","chain","map","compact","value","unshift","BOAttachmentUtil","formatFilzeSize","size","undefined","container","filesSize","Math","ceil","orderByAsString","orderBy","defCol","defOrd","ret","order","sc","so","sortColumn","sortOrder","parameterPlaceholder","match","NodeAncestorCollection","BOAttachmentModel","collection","idAttribute","size_formatted","version","body","content_type","form_href","href","signature","ancestors","autofetch","ConnectableModel","NodeChildrenColumnModel","NodeChildrenColumnCollection","NodeChildrenCollection","NodeCollection","ExpandableMixin","NodeResourceMixin","BrowsableMixin","BrowsableV1RequestMixin","BrowsableV1ResponseMixin","BrowsableV2ResponseMixin","AttachmentsColumnModel","AttachmentsColumnCollection","dataCollectionName","resetColumns","resetCollection","getColumns","definitions","meta_data","columnKeys","keys","columnModels","getColumnModels","each","persona","BOAttachmentsCollection","models","makeNodeResource","makeExpandable","makeBrowsable","makeBrowsableV1Request","makeBrowsableV1Response","columns","totalCount","next","busobjinfo","businessattachment","query","mergeUrlPaging","mergeUrlSorting","mergeUrlFiltering","getBaseUrl","encodeURIComponent","_cacheCollection","omit","key","metadata","queryParamsToString","df","fetching","fail","trigger","clone","where_name","paging","total_count","businessObjectActions","limit","topCount","defaultPageSize","page","skipCount","floor","sort","_formatSorting","indexOf","slicePosition","lastIndexOf","slice","isEmptyObject","filters","hasOwnProperty","queryParamsStr","ActionCollection","UploadableMixin","AttachmentModel","expand","_setCollectionProperty","makeUploadable","val","attrs","bo_type","isNew","isFetchable","urlBase","attachment","isArray","attachmentActions","attribute","Class","camelize","AttachmentCollection","Collection","assignTo","setOrder","resetOrder","setLimit","skip","top","resetLimit","setFilter","tempKey","base","NodeColumnCollection","NodeAttachmentCollection","filter","deepClone","commands","combineQueryString","getExpandableResourcesUrlQuery","onlyClientSideDefinedColumns","metadata_order","idx","column_key","reset","reduce","colArray","column","shortColumnName","definition_short","definition_formatted","definition","default_action","contextual_menu","editable","filter_key","ConnectableMixin","DossierModel","DossierCollection","pick","makeConnectable","total_documents","item","getUrl","nodeModel","DocumentModel","DocumentsCollection","mergeUrlMetadata","MetadataCollection","hideEmptyFields","catsAndAttrs","_addModels","label","category","itemType","add","split","comparator","MissingDocumentModel","MissingDocumentCollection","wrkspceId","getApiBase","WorkspaceCollection","makeBrowsableV2Response","getBrowsableUrlQuery","early","modifyDate","modify_date","align","width_weight","parseBrowsedState","parseBrowsedItems","WorkspaceTypeModel","templates","WorkspaceTypesCollection","businessworkspacetypes","elem","index","ref","props","businessworkspacetypeAttributes","wksp_type_name","wksp_type_id","rm_enabled","subType","subtype","AttachmentContextFactory","attachmentContext","CollectionFactory","NodeFactory","MissingReportCollection","MissingDocumentsFactory","missingDocumentsCollection","reportType"],"mappings":"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YAAAtd,GAAA4X,YAAA,CACA,GAAA/V,GAAA8E,EAAAG,UAAAR,EAAAhG,GACAuF,EAAAc,EAAAE,SAAAsW,EAAA7c,GACAyJ,EAAApJ,EAAAoJ,QACAuT,GAAA,GAAAF,GAAAE,EAAA5J,OAAA5T,EAAAK,QAEA0B,YAAAA,EACAgE,OAAAA,EACA0X,aAAA,oBACAD,EAAAhd,QAAAyJ,EAAAzJ,SACAyR,aAAA,KAGAtR,KAAAsG,SAAAuW,GAEAvX,QAAA,SAAAzF,GACA,MAAAG,MAAAsG,SAAAhB,MAAAzF,KAGA,OAAA+c,KAGAzd,KAAAC,OAAA,uBC1CA,0CACA,yDACA,2EACA,uEACA,qEACA,uEACA,iEACA,4DACA,uDACA,wDACA,yDACA,0DACA,8DACA,4CACA,iEACA,oEACA,kFACA,wDACA,8DACA,uEACA,yEACA,8DACA,mEACA;A/BtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA,ADkFA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA,ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA,ADuDA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA,AD+BA;AE/BA,ADCA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzpHA,ADqHA;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA,ADsCA;ACrtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA,ADkEA;ACjjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrgLA;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClhvGA,ADwGA;ACvfile":"bundles/xecmpf-core.js","sourcesContent":["csui.define('xecmpf/controls/bosearch/bosearch.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone'\r\n], function (_, $, Backbone) {\r\n  'use strict';\r\n\r\n  var BoSearchModel = Backbone.Model.extend({\r\n\r\n    constructor: function BoSearchModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n  return BoSearchModel;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.05.2016.\r\n */\r\n// Fetches the search form.\r\ncsui.define('xecmpf/controls/bosearch/searchform/bosearchform.model',[\"module\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/url\", \"csui/models/resource\"\r\n], function (module, $, _, Backbone, log, Url, ResourceModel) {\r\n  \"use strict\";\r\n\r\n  var BusinessObjectSearchFormModel = Backbone.Model.extend(\r\n      _.defaults({\r\n\r\n        constructor: function BusinessObjectSearchFormModel(attributes, options) {\r\n          options || (options = {});\r\n\r\n          attributes = _.extend({data:{},options:{},schema:{}},attributes);\r\n          Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n          this.makeResource(options);\r\n\r\n        },\r\n\r\n        url: function () {\r\n          var path = 'forms/businessobjects/search',\r\n              bo_type_id = this.get(\"id\"),\r\n              params = { bo_type_id: bo_type_id },\r\n              resource = path + '?' + $.param(params),\r\n              baseurl = this.connector.connection.url,\r\n              url = Url.combine(baseurl&&baseurl.replace('/v1', '/v2')||baseurl, resource);\r\n          return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n          var form;\r\n          if (response && response.results) {\r\n            form = response.results[1];\r\n            form.id = this.get(\"id\");\r\n            form.name = response.results[0].data.bo_type_name;\r\n            form.bus_att_metadata_mapping = response.results[\"0\"].data.business_attachments && response.results[\"0\"].data.business_attachments.metadata_mapping;\r\n            if (form.schema) {\r\n              delete form.schema.title; // avoid title being displayed by the FormView\r\n            }\r\n          }\r\n          return form;\r\n        }\r\n\r\n      }, ResourceModel(Backbone.Model)));\r\n  \r\n  return BusinessObjectSearchFormModel;\r\n\r\n});\r\n\n","csui.define('xecmpf/controls/property.panels/reference/impl/workspace.reference.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  \"csui/utils/url\",\r\n  \"csui/models/mixins/node.connectable/node.connectable.mixin\"\r\n], function (_, $, Backbone, Url,\r\n    NodeConnectableMixin) {\r\n  'use strict';\r\n\r\n  var WorkspaceReferenceModel = Backbone.Model.extend({\r\n\r\n    constructor: function WorkspaceReferenceModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeNodeConnectable(options);\r\n\r\n    },\r\n\r\n    sync: function (method, model, options) {\r\n      var node_id, path, baseurl, url, bo_id, params, bo_type_id;\r\n      if (method === \"read\") {\r\n        node_id = this.get(\"id\");\r\n        path = _.str.sformat('businessworkspaces/{0}', node_id);\r\n        baseurl = this.connector.connection.url;\r\n        url = Url.combine(baseurl && baseurl.replace('/v1', '/v2') || baseurl, path);\r\n        options.url = url;\r\n      } else if (method === \"update\") {\r\n        node_id = this.get(\"id\");\r\n        path = _.str.sformat('businessworkspaces/{0}/workspacereferences', node_id);\r\n        bo_id = this.get(\"bo_id\");\r\n        bo_type_id = this.get(\"bo_type_id\");\r\n        params = {bo_id: bo_id, bo_type_id: bo_type_id};\r\n        baseurl = this.connector.connection.url;\r\n        url = Url.combine(baseurl && baseurl.replace('/v1', '/v2') || baseurl, path);\r\n        options.url = url;\r\n        options.data = $.param(params);\r\n      } else if (method === \"delete\") {\r\n        var ext_system_id, queryParams;\r\n        node_id = this.get(\"id\");\r\n        bo_id = this.get(\"bo_id\");\r\n        bo_type_id = this.get(\"bo_type_id\");\r\n        ext_system_id = this.get(\"ext_system_id\");\r\n        params = {bo_id: bo_id, bo_type_id: bo_type_id, ext_system_id: ext_system_id};\r\n        queryParams = $.param(params);\r\n        path = _.str.sformat('businessworkspaces/{0}/workspacereferences?{1}', node_id, queryParams);\r\n        baseurl = this.connector.connection.url;\r\n        url = Url.combine(baseurl && baseurl.replace('/v1', '/v2') || baseurl, path);\r\n        options.url = url;\r\n      }\r\n      return Backbone.sync(method, model, options);\r\n    },\r\n\r\n    parse: function (response) {\r\n      var data       = response && response.results && response.results.data || {},\r\n          actions    = response && response.results && response.results.actions &&\r\n                       response.results.actions.data || {},\r\n          properties = data.properties || {},\r\n          business   = data.business_properties || {};\r\n      business.business_object_id && (properties.bo_id = business.business_object_id);\r\n      business.business_object_type_id &&\r\n      (properties.bo_type_id = business.business_object_type_id);\r\n      business.business_object_type_name &&\r\n      (properties.bo_type_name = business.business_object_type_name);\r\n      business.external_system_id && (properties.ext_system_id = business.external_system_id);\r\n      business.external_system_name && (properties.ext_system_name = business.external_system_name);\r\n      business.workspace_type_id && (properties.workspace_type_id = business.workspace_type_id);\r\n      business.workspace_type_name &&\r\n      (properties.workspace_type_name = business.workspace_type_name);\r\n      properties.change_reference = !!actions['change-reference'];\r\n      properties.complete_reference = !!actions['complete-reference'];\r\n\r\n      return properties;\r\n    }\r\n\r\n  });\r\n\r\n  NodeConnectableMixin.mixin(WorkspaceReferenceModel.prototype);\r\n\r\n  return WorkspaceReferenceModel;\r\n\r\n});\r\n\n","csui.define('xecmpf/controls/property.panels/reference/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('xecmpf/controls/property.panels/reference/impl/nls/root/lang',{\r\n  cannotCompleteBusinessReference: \"You do not have permission to complete the business reference\",\r\n  errorUpdatingWorkspaceReference: \"Error updating workspace reference.\",\r\n  businessObjectIdLabel: \"Reference object\",\r\n  referenceTabTitle: 'Reference',\r\n  referenceSearchButtonTitle: 'Search',\r\n  referenceSearchButtonLabel: '{0} in {1}',\r\n  referenceRemoveButtonTitle: 'Remove',\r\n  referenceReplaceButtonTitle: 'Replace',\r\n  referencePanelOverrideNote: 'If you add a workspace reference, workspace name and other attributes will be overwritten with metadata of the business object.',\r\n  removeBOReferenceAlertTitle: 'Remove business object reference',\r\n  removeBOReferenceAlertDescription: 'Remove object reference {0} from this business workspace?',\r\n  removeBOReferenceSuccessMessage: 'Business object reference successfully removed.',\r\n  errorRemovingWorkspaceReference: 'Error removing workspace reference.'\r\n});\r\n\n","\n","csui.define('xecmpf/controls/property.panels/reference/impl/reference.panel.model',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'i18n!xecmpf/controls/property.panels/reference/impl/nls/lang'\r\n], function (_, $, Backbone, lang) {\r\n  'use strict';\r\n\r\n  var ReferencePanelModel = Backbone.Model.extend({\r\n\r\n    constructor: function ReferencePanelModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      this.set('id', 'conws-reference');\r\n      this.set('title', lang.referenceTabTitle);\r\n      \r\n    }\r\n    \r\n  });\r\n\r\n  return ReferencePanelModel;\r\n\r\n});\r\n\n","/**\r\n * Fetches the workspace info for a given node.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.category.model',['csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/url',\r\n    'csui/models/node/node.model',\r\n    'csui/models/mixins/fetchable/fetchable.mixin'\r\n], function ($, _,\r\n             Backbone,\r\n             log,\r\n             Url,\r\n             NodeModel,\r\n             FetchableMixin) {\r\n\r\n    var AttachmentContextCategoryModel = NodeModel.extend({\r\n\r\n        // constructor gives an explicit name to the object in the debugger\r\n        constructor: function AttachmentContextCategoryModel(attributes, options) {\r\n            options || (options = {});\r\n\r\n            NodeModel.prototype.constructor.call(this, attributes, options);\r\n            this.node = options.node;\r\n            this.category_id = options.category_id;\r\n\r\n        },\r\n        fetch: function (options) {\r\n            options || (options = {});\r\n            // If not overridden, Use the v1 URL for GET requests\r\n\t\t\tvar categoryOptions = _.extend({},options)\r\n\t\t\t if (!categoryOptions.url) {\r\n                categoryOptions.url = _.result(this, 'url');\r\n            }\r\n            if (this.node.get(\"id\")) {\r\n                return NodeModel.prototype.fetch.call(this, categoryOptions);\r\n            } else {\r\n                return $.Deferred().resolve().promise();\r\n            }\r\n        },\r\n\r\n        url: function () {\r\n            return Url.combine(this.connector.connection.url,\r\n                // yes, take v1\r\n                'nodes', this.node.get(\"id\"), 'categories', this.category_id).replace('/v2/', '/v1/');\r\n        },\r\n        parse: function (response) {\r\n            return response.data;\r\n        }\r\n    });\r\n    return AttachmentContextCategoryModel;\r\n});\r\n\r\n\n","csui.define('xecmpf/models/boattachmentcontext/attachmentcontext.category.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.category.model'\r\n], function (_,\r\n             ModelFactory,\r\n             ConnectorFactory,\r\n             NodeModelFactory,\r\n             AttachmentContextFactoryModel) {\r\n\r\n    var AttachmentContextCategoryFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContextCategory',\r\n\r\n        constructor: function AttachmentContextCategoryFactory(context, options) {\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n            options.attachmentContextCategory = options.attachmentContextCategory || {};\r\n\r\n            var node = options.attachmentContextCategory.node ||\r\n                    context.getModel(NodeModelFactory, options),\r\n                connector = options.attachmentContextCategory.connector ||\r\n                    context.getObject(ConnectorFactory, options);\r\n\r\n            this.property = new AttachmentContextFactoryModel({},\r\n                {\r\n                    category_id: options.attachmentContextCategory.category_id,\r\n                    connector: connector,\r\n                    node: node\r\n                });\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextCategoryFactory;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/boattachments/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('xecmpf/widgets/boattachments/impl/nls/root/lang',{\r\n    dialogTitle: 'Business attachments',\r\n    searchPlaceholder: 'Search %1',\r\n    noResultsPlaceholder: 'No business attachments to display.',\r\n    errorFieldFormatTagUnrecognized: 'Invalid format specification for {0}.',\r\n    errorCustomColumnConfigInvalid: \"Invalid custom column configuration: {0}.\",\r\n    errorCustomColumnMissingBraces: \"Missing curly braces in custom column configuration: {0}.\",\r\n    errorOrderByMustNotBeString: \"Configuration 'orderBy' must be an object not a string.\",\r\n    errorOrderByMissingBraces: \"Missing curly braces in 'orderBy' configuration.\",\r\n    errorFilteringFailed: 'Filtering of result list failed. Please contact your administrator.',\r\n    noAttachmentsFound: 'No business attachments found.',\r\n    businessAttachments: 'Business attachments',\r\n    CommandSnapshot: 'Snapshot',\r\n    addBusinessAttachment: 'Add business attachment',\r\n    fileSizeByte: \"Bytes\",\r\n    fileSizeKByte: \"KB\",\r\n    fileSizeMByte: \"MB\",\r\n    parent_id: 'Location',\r\n    reservedBy: 'Reserved by %1',\r\n    snaphotCreated: 'Snapshot created',\r\n    snaphotFailed: 'Snapshot creation failed',\r\n    CommandDoneVerbCreated: 'created',\r\n    fileSizeGByte: \"GB\",\r\n    items: 'items',\r\n    invalidConfigurationNoBusObjDisplay:'Cannot display business attachments because there is no business object defined.',\r\n    invalidConfigurationNoBusObjConfigured:'No business object type configured for workspace display.',\r\n    invalidConfigurationNoBusObjAvailable:'Cannot display business attachments because there is no business object available.',\r\n    noBusinessObjectFound: 'No business object found',\r\n    invalidConfiguration: 'Invalid widget configuration. Business object key, business object type and business application ID must be set.'\r\n});\r\n\n","\n","/**\r\n * Fetches the workspace info for a given node.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.model',['csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/url',\r\n    'csui/models/node/node.model',\r\n    'csui/dialogs/modal.alert/modal.alert',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.category.factory',\r\n    'i18n!xecmpf/widgets/boattachments/impl/nls/lang',\r\n    'csui/models/mixins/resource/resource.mixin'\r\n\r\n], function ($, _,\r\n             Backbone,\r\n             log,\r\n             Url,\r\n             NodeModel,\r\n             ModalAlert,\r\n             AttachmentContextCategoryFactory,\r\n             lang, ResourceMixin ) {\r\n\r\n    var AttachmentContextBusinessObjectInfoModel = Backbone.Model.extend({\r\n\r\n        // constructor gives an explicit name to the object in the debugger\r\n        constructor: function AttachmentContextBusinessObjectInfoModel(attributes, options) {\r\n            options || (options = {});\r\n\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n            this.makeResource(options);\r\n\r\n            this.node = options.node;\r\n            this.data = options.data;\r\n            this.connector = options.connector;\r\n            this.context = options.context;\r\n            this.invalidConfigurationShown = false;\r\n            this.invalidErrorMessage = lang.noBusinessObjectFound\r\n\r\n        },\r\n        _logInvalidConfiguration: function() {\r\n          this._isConfigEmpty(this.busObjectKey) && log.warn('Business object key is not set') && console && console.log(log.last);\r\n          this._isConfigEmpty(this.busObjectType) && log.warn('Business object type is not set') && console && console.log(log.last);\r\n          this._isConfigEmpty(this.extSystemId) && log.warn('Business application ID is not set')  && console && console.log(log.last);\r\n        },\r\n        _logEmptyBusObjKeyConfiguration: function() {\r\n          log.warn('Empty business object key in business attachment widget') && console && console.log(log.last);\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n        _logEmptyBusObjTypeConfiguration: function() {\r\n          log.warn('Empty business object type in business attachment widget') && console && console.log(log.last);\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n        _logEmptyBusAppIDConfiguration: function() {\r\n          log.warn('Empty business application ID in business attachment widget')  && console && console.log(log.last);\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n\r\n        _showInvalidConfigurationError: function(msg) {\r\n          !this.invalidConfigurationShown && ModalAlert.showError(msg);\r\n          this.invalidConfigurationShown = true;\r\n        },\r\n        _isConfigEmpty: function(config){\r\n          // For single Value attributes, config value is of type string.\r\n          // For multi value attribute, config value is of type object (ie., list of values).\r\n          // If a multi value attribute has a single value then checking wheter it is empty or not.\r\n          // If a multi value attribute has multiple empty/non empty values then it is considered as empty or non set configuration.\r\n          var isConfigEmpty = _.isObject(config) ? (config.length === 1 ? _.isEmpty(config[0]) : true) : _.isEmpty(config);\r\n          return isConfigEmpty\r\n\r\n        },\r\n        _isConfigValid: function() {\r\n          var isBusKeyEmpty = this._isConfigEmpty(this.busObjectKey),\r\n              isBusObjEmpty = this._isConfigEmpty(this.busObjectType),\r\n              isExtSystemEmpty = this._isConfigEmpty(this.extSystemId);\r\n\r\n          return !isBusObjEmpty &&  !isExtSystemEmpty && !isBusKeyEmpty;\r\n        },\r\n        _isWorkspaceWithoutConfig: function() {\r\n            return  _.isEmpty(this._getCategoryInfo(this.data.busObjectId)) &&\r\n                    _.isEmpty(this._getCategoryInfo(this.data.busObjectType)) &&\r\n                    _.isEmpty(this._getCategoryInfo(this.data.extSystemId)) &&\r\n                    this.node.get(\"id\") && this.node.get(\"type\") === 848;\r\n        },\r\n        _loadCategories: function() {\r\n            var promises = [],\r\n                self = this,\r\n                busObjectIdCatInfo = this._getCategoryInfo(this.data.busObjectId),\r\n                busObjectTypeCatInfo = this._getCategoryInfo(this.data.busObjectType),\r\n                extSystemIdCatInfo = this._getCategoryInfo(this.data.extSystemId);\r\n\r\n            if (busObjectIdCatInfo.categoryId) {\r\n                var catModelObjectId = this.context.getModel(AttachmentContextCategoryFactory,\r\n                    {\r\n                        attributes: {\r\n                            category_id: busObjectIdCatInfo.categoryId\r\n                        },\r\n                        category_id: busObjectIdCatInfo.categoryId,\r\n                        node: this.node,\r\n                        connector: this.connector\r\n                    });\r\n\r\n                // got the model for the bus. obj. id\r\n                promises.push(catModelObjectId.fetch());\r\n                this.listenTo(catModelObjectId, 'sync', function () {\r\n                        // object key must be set via category\r\n                        var catVal = catModelObjectId.get(busObjectIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectKey = catVal;\r\n                        }  else {\r\n                            self._logEmptyBusObjKeyConfiguration();\r\n                        }\r\n                        /*// but check if we can get also the business object type ....\r\n                        catVal = catModelObjectId.get(busObjectTypeCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectType = catVal;\r\n                        } else {\r\n                          self._logEmptyBusObjTypeConfiguration();\r\n                        }\r\n                                    // ... and the external system ...\r\n                                    catVal = catModelObjectId.get(extSystemIdCatInfo.categoryAttr);\r\n                                    if (!self._isConfigEmpty(catVal)) {\r\n                                        self.extSystemId = catVal;\r\n                                    } else {\r\n                          self._logEmptyBusAppIDConfiguration();\r\n                        }*/\r\n                    }\r\n                );\r\n                this.listenTo(catModelObjectId, \"error\", function () {\r\n                    this._showInvalidConfigurationError(arguments[1].responseJSON.error);\r\n                });\r\n\r\n            } else {\r\n                // key is fixed\r\n                this.busObjectKey = busObjectIdCatInfo.categoryAttr;\r\n            }\r\n            // load category for business object type if necessary\r\n            if (busObjectTypeCatInfo.categoryId) {\r\n                var catModelObjectType =\r\n                    this.context.getModel(AttachmentContextCategoryFactory,\r\n                        {\r\n                            attributes: {\r\n                                category_id: busObjectTypeCatInfo.categoryId\r\n                            },\r\n                            category_id: busObjectTypeCatInfo.categoryId,\r\n                            node: this.node,\r\n                            connector: this.connector\r\n                        });\r\n\r\n                promises.push(catModelObjectType.fetch());\r\n                this.listenTo(catModelObjectType, 'sync', function () {\r\n                        // check again if we can get from this category all entries\r\n                        // so we can skip further category calls\r\n                       /* var catVal = catModelObjectType.get(busObjectIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectKey = catVal;\r\n                        } else {\r\n\t\t\t\t\t\t              \tself._logEmptyBusObjKeyConfiguration();\r\n\t\t\t\t\t            \t}*/\r\n\r\n                        var catVal = catModelObjectType.get(busObjectTypeCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectType = catVal;\r\n                        } else {\r\n                            self._logEmptyBusObjTypeConfiguration();\r\n                        }\r\n\r\n                      /*  catVal = catModelObjectType.get(extSystemIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.extSystemId = catVal;\r\n                        } else {\r\n                          self._logEmptyBusAppIDConfiguration()\r\n                        }*/\r\n                    }\r\n                );\r\n                this.listenTo(catModelObjectType, \"error\", function () {\r\n                    this._showInvalidConfigurationError(arguments[1].responseJSON.error);\r\n                });\r\n            } else {\r\n                this.busObjectType = busObjectTypeCatInfo.categoryAttr;\r\n            }\r\n            // get external system category\r\n            if (extSystemIdCatInfo.categoryId) {\r\n                var catModelExtSystem = this.context.getModel(AttachmentContextCategoryFactory,\r\n                    {\r\n                        attributes: {\r\n                            category_id: extSystemIdCatInfo.categoryId\r\n                        },\r\n                        category_id: extSystemIdCatInfo.categoryId,\r\n                        node: this.node,\r\n                        connector: this.connector\r\n                    });\r\n\r\n\r\n                promises.push(catModelExtSystem.fetch());\r\n                this.listenTo(catModelExtSystem, 'sync', function () {\r\n                        // check again if we can get from this category all entries\r\n                        // so we can skip further category calls\r\n                       /* var catVal = catModelExtSystem.get(busObjectIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.busObjectKey = catVal;\r\n                        } else {\r\n                          self._logEmptyBusObjKeyConfiguration();\r\n                        }\r\n\r\n                                    catVal = catModelExtSystem.get(busObjectTypeCatInfo.categoryAttr);\r\n                                    if (!self._isConfigEmpty(catVal)) {\r\n                                        self.busObjectType = catVal;\r\n                                    } else {\r\n                           self._logEmptyBusObjTypeConfiguration();\r\n                        }*/\r\n\r\n                        var catVal = catModelExtSystem.get(extSystemIdCatInfo.categoryAttr);\r\n                        if (!self._isConfigEmpty(catVal)) {\r\n                            self.extSystemId = catVal;\r\n                        } else {\r\n                            self._logEmptyBusAppIDConfiguration();\r\n                        }\r\n                    }\r\n                );\r\n                this.listenTo(catModelExtSystem, \"error\", function () {\r\n                    this._showInvalidConfigurationError(arguments[1].responseJSON.error);\r\n                });\r\n            } else {\r\n                this.extSystemId = extSystemIdCatInfo.categoryAttr;\r\n            }\r\n            return promises;\r\n        },\r\n        _getCategoryInfo: function (configValue) {\r\n            var res, categoryId, categoryAttr;\r\n\r\n            if (!_.isEmpty(configValue)) {\r\n                var regExp = /{categories.(([0-9]+)_[0-9]+[_]?[0-9]*[_]?[0-9]*)}/g;\r\n                if (regExp.test(configValue)) {\r\n                    regExp.lastIndex = 0;\r\n                    res = regExp.exec(configValue);\r\n                    categoryId = res[2];\r\n                    categoryAttr = res[1];\r\n\r\n                    return {\r\n                        categoryId: categoryId,\r\n                        categoryAttr: categoryAttr\r\n                    }\r\n                } else {\r\n                    return {\r\n                        categoryId: \"\",\r\n                        categoryAttr: configValue\r\n                    };\r\n                }\r\n            }\r\n            return \"\";\r\n        },\r\n\r\n        // computes the REST API URL used to access the metadata.\r\n        url: function () {\r\n            var url;\r\n\r\n            if (this._isWorkspaceWithoutConfig() === true) {\r\n                url = Url.combine(this.connector.connection.url,\r\n                    'businessworkspaces/' + this.node.get(\"id\") + '?metadata');\r\n            } else {\r\n                url = Url.combine(this.connector.connection.url,\r\n                    'businessworkspacetypes' +\r\n                    '?ext_system_id=' + this.extSystemId +\r\n                    '&expand_templates=true&bo_type=' + this.busObjectType);\r\n            }\r\n            return url.replace('/v1/', '/v2/');\r\n        },\r\n        parse: function (response) {\r\n\r\n            if (this._isWorkspaceWithoutConfig() === true) {\r\n                var busProps =  _.find(response.results.data.workspace_references,\r\n                        function(wksp_ref) {\r\n                            return (wksp_ref.has_default_display === true)\r\n                        });\r\n                if (_.isUndefined(busProps)) {\r\n                    if ( response.results.data.business_properties.isEarly) {\r\n                        this.invalidConfigurationShown = true;\r\n                        this.invalidErrorMessage = lang.invalidConfigurationNoBusObjDisplay;\r\n                    } else {\r\n                        this.invalidConfigurationShown = true;\r\n                        this.invalidErrorMessage =lang.invalidConfigurationNoBusObjAvailable;\r\n                    }\r\n                    return null;\r\n                } else {\r\n                    return {\r\n                        busObjectKey: busProps.business_object_id,\r\n                        busObjectType: busProps.business_object_type,\r\n                        extSystemId: busProps.external_system_id,\r\n                        titleIcon: response.results.data.wksp_info.wksp_type_icon\r\n                    }\r\n                }\r\n            } else {\r\n                return {\r\n                    busObjectKey: this.busObjectKey,\r\n                    busObjectType: this.busObjectType,\r\n                    extSystemId: this.extSystemId,\r\n                    titleIcon: response.results.length > 0 &&\r\n                    response.results[0].data.wksp_info.wksp_type_icon\r\n                }\r\n            }\r\n        }\r\n    });\r\n    ResourceMixin.mixin(AttachmentContextBusinessObjectInfoModel.prototype);\r\n\r\n    var originalFetch = AttachmentContextBusinessObjectInfoModel.prototype.fetch;\r\n    AttachmentContextBusinessObjectInfoModel.prototype.fetch = function (options) {\r\n        var deferred = $.Deferred(),\r\n            promises = this._loadCategories(),\r\n            self = this;\r\n\r\n        if (promises.length > 0) {\r\n            $.when.apply($, promises).done(function () {\r\n                // if one setting is determined via category all entries\r\n                // must be set\r\n                if (self._isConfigValid() === true)\r\n                {\r\n                    originalFetch.call(self, options).done(function () {\r\n                        deferred.resolve();\r\n                    });\r\n                } else {\r\n                    self._logInvalidConfiguration();\r\n                    self._showInvalidConfigurationError(lang.invalidConfiguration);\r\n                    deferred.resolve();\r\n                }\r\n\r\n            })\r\n        } else {\r\n            if (this._isWorkspaceWithoutConfig() === true || this._isConfigValid() === true)\r\n            {\r\n                return originalFetch.call(this, options);\r\n            } else {\r\n                this._logInvalidConfiguration();\r\n                this._showInvalidConfigurationError(lang.invalidConfiguration);\r\n                return deferred.resolve().promise();\r\n            }\r\n\r\n        }\r\n        return deferred.promise();\r\n    };\r\n\r\n    return AttachmentContextBusinessObjectInfoModel;\r\n});\r\n\r\n\n","/**\r\n * Fetches the workspace id of the effective businessworkspace for a given node.\r\n */\r\n\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.node.model',['csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/url',\r\n    \"csui/models/resource\"\r\n], function ($, _, Backbone,\r\n             log,\r\n             Url,\r\n             ResourceModel) {\r\n\r\n    var AttachmentContextNode = Backbone.Model.extend(\r\n        _.defaults({\r\n\r\n            workspaceSpecific: true,\r\n\r\n            constructor: function AttachmentContextNode(attributes, options) {\r\n                options || (options = {});\r\n\r\n                Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n                this.options = options;\r\n                this.makeResource(options);\r\n                this.listenTo(this.options.node, 'change:id', this.syncToNode);\r\n\r\n                // and initially set id if it fits.\r\n                this.syncToNode();\r\n            },\r\n\r\n            syncToNode: function () {\r\n                var node = this.options.node;\r\n                var node_id = node.get(\"id\");\r\n                if (node.get(\"type\") === 848) {\r\n                    this.set({id: node_id, type: 848});\r\n                }\r\n            },\r\n\r\n            url: function () {\r\n                var nodeId = this.options.node.get('id');\r\n                var url;\r\n\r\n                if (this.options.data && this.options.data.busObjectId &&\r\n                    this.options.data.busObjectType &&\r\n                    this.options.data.extSystemId) {\r\n\r\n                    url = Url.combine(this.options.connector.connection.url,\r\n                        '/businessworkspaces');\r\n                    url += '?expanded_view=true&where_bo_type=' + this.options.data.busObjectType;\r\n                    url += '&where_ext_system_id=' + this.options.data.extSystemId;\r\n                    url += '&where_bo_id=' + this.options.data.busObjectId;\r\n                    url = url.replace('/v1', '/v2'); // yes, we need to send a v1 call!!!\r\n                } else {\r\n                    url = Url.combine(this.options.connector.connection.url, 'nodes', nodeId,\r\n                        'businessworkspace');\r\n                    url = url.replace('/v2', '/v1'); // yes, we need to send a v1 call!!!\r\n                }\r\n                return url;\r\n            },\r\n\r\n            fetch: function (options) {\r\n                if (this.options.node.get('id')) {\r\n                    if (this.options.node.get('type') !== 848) {\r\n                        log.debug(\"Fetching the workspace id for {0} from server.\", this) && console.log(log.last);\r\n                        options || (options = {});\r\n                        // If not overridden, Use the v1 URL for GET requests\r\n                        if (!options.url) {\r\n                            options.url = _.result(this, 'url');\r\n                        }\r\n                        return this.Fetchable.fetch.call(this, options);\r\n                    } else {\r\n                        log.debug(\"Fetching the workspace id for {0} from node.\", this) && console.log(log.last);\r\n                        this.set({id: this.options.node.get('id'), type: 848});\r\n                        return $.Deferred().resolve().promise();\r\n                    }\r\n\r\n                } else if (this.options.data && this.options.data.busObjectId && // integration scenario\r\n                            this.options.data.busObjectType &&\r\n                            this.options.data.extSystemId) {\r\n\r\n                    log.debug(\"Fetching the workspace id for {0} from server.\", this) && console.log(log.last);\r\n                    options || (options = {});\r\n                    // If not overridden, Use the v1 URL for GET requests\r\n                    if (!options.url) {\r\n                        options.url = _.result(this, 'url');\r\n                    }\r\n                    return this.Fetchable.fetch.call(this, options);\r\n\r\n                } else {\r\n                    return $.Deferred().resolve().promise();\r\n                }\r\n            },\r\n\r\n            parse: function (response) {\r\n                if (response.results) {\r\n                    response = response.results.length>0?response.results[0].data.properties:null;\r\n                }\r\n\r\n                if (response) {\r\n                    return {id: response.id, type: response.type};\r\n                }\r\n            },\r\n\r\n            toString: function () {\r\n                // Format a string for logging purposes\r\n                return \"node:\" + this.get('id');\r\n            }\r\n\r\n        }, ResourceModel(Backbone.Model)));\r\n\r\n    return AttachmentContextNode;\r\n\r\n});\r\n\n","csui.define('xecmpf/models/boattachmentcontext/attachmentcontext.node.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.node.model'\r\n], function (_,\r\n             ModelFactory,\r\n             ConnectorFactory,\r\n             NodeModelFactory,\r\n             AttachmentContextNodeModel) {\r\n\r\n    var AttachmentContextNodeFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContextNode',\r\n\r\n        constructor: function AttachmentContextNodeFactory(context, options) {\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var node = options.attachmentContextNode.node ||\r\n                    context.getModel(NodeModelFactory, {}),\r\n                connector = options.attachmentContextNode.connector ||\r\n                    context.getObject(ConnectorFactory, {});\r\n\r\n            this.property = new AttachmentContextNodeModel({}, {data: options.attachmentContextNode.data,\r\n                connector: connector, node: node});\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextNodeFactory;\r\n\r\n});\r\n\n","csui.define('xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'csui/utils/contexts/factories/connector',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.model'\r\n\r\n], function (_,\r\n             ModelFactory,\r\n             ConnectorFactory,\r\n             NodeModelFactory,\r\n             AttachmentContextBusinessObjectInfoModel) {\r\n\r\n    var AttachmentContextBusinessObjectInfoFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContextBusinessObjectInfo',\r\n\r\n        constructor: function AttachmentContextBusinessObjectInfoFactory(context, options) {\r\n            options = options || {};\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n            var node = options.node ||  context.getModel(NodeModelFactory, {}),\r\n                connector = options.connector || context.getObject(ConnectorFactory, {}),\r\n                data = options.attachmentContextBusinessObjectInfo.data || {};\r\n\r\n            _.defaults(data, {\r\n                busObjectId: \"\",\r\n                busObjectType: \"\",\r\n                extSystemId: \"\"\r\n            })\r\n\r\n            this.property = new AttachmentContextBusinessObjectInfoModel({},\r\n                {context: context, data: data, connector: connector, node: node});\r\n\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextBusinessObjectInfoFactory;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.model',['csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    \"csui/utils/log\",\r\n    'csui/utils/contexts/context',\r\n    'csui/utils/contexts/factories/node',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.node.factory',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.category.factory'\r\n\r\n], function ($, _, Backbone,\r\n             log,\r\n             Context,\r\n             NodeModelFactory,\r\n             AttachmentContextNodeFactory,\r\n             AttachmentContextBusinessObjectInfoFactory,\r\n             AttachmentContexCategoryFactory) {\r\n\r\n    var AttachmentContextModel = Context.extend({\r\n\r\n        constructor: function AttachmentContextModel(attributes, options) {\r\n            options || (options = {});\r\n\r\n            Context.prototype.constructor.apply(this, arguments);\r\n\r\n            this.options = options;\r\n\r\n            this.attachmentSpecific = {};\r\n            this.attachmentSpecific[NodeModelFactory.prototype.propertyPrefix] = true;\r\n            this.attachmentSpecific[AttachmentContextNodeFactory.prototype.propertyPrefix] = true;\r\n            this.attachmentSpecific[AttachmentContextBusinessObjectInfoFactory.prototype.propertyPrefix] = true;\r\n            this.attachmentSpecific[AttachmentContexCategoryFactory.prototype.propertyPrefix] = true;\r\n\r\n            this.attachmentSpecificFactories = [\r\n                NodeModelFactory,\r\n                AttachmentContextNodeFactory,\r\n                AttachmentContextBusinessObjectInfoFactory,\r\n                AttachmentContexCategoryFactory\r\n            ];\r\n\r\n            // get the navigation node, that triggers the attachment context node\r\n            this.options.node = this.options.context.getModel(NodeModelFactory);\r\n\r\n            // attachment context node is the first model in the attachment context and we fetch it first\r\n            this.wkspid = this.getModel(AttachmentContextNodeFactory,\r\n                {data: this.options.data, node: this.options.node, connector: this.options.node.connector});\r\n\r\n            // and provide an attachment node, for compatibility with the outer context\r\n            this.node = this.getModel(NodeModelFactory);\r\n\r\n            if (this.wkspid.get(\"id\") === this.options.node.get(\"id\")) {\r\n                this.node.set(this.options.node.attributes);\r\n            } else {\r\n                this.node.set(\"id\", this.wkspid.get(\"id\"));\r\n            }\r\n        },\r\n\r\n        setAttachmentSpecific: function (Factory) {\r\n            this.attachmentSpecific[Factory.prototype.propertyPrefix] = true;\r\n            if (!this._isAttachmentSpecificFactory(Factory)) {\r\n                this.attachmentSpecificFactories.push(Factory);\r\n            }\r\n        },\r\n\r\n        isAttachmentSpecific: function (Factory) {\r\n            var found = false;\r\n            if (this.attachmentSpecific[Factory.prototype.propertyPrefix]) {\r\n                found = true;\r\n            } else if (this._isAttachmentSpecificFactory(Factory)) {\r\n                // remember property prefix, so we find it faster next time.\r\n                this.attachmentSpecific[Factory.prototype.propertyPrefix] = true;\r\n                found = true;\r\n            }\r\n            return found;\r\n        },\r\n\r\n        _isAttachmentSpecificFactory: function (Factory) {\r\n            var found = false;\r\n            for (var ii = 0; ii < this.attachmentSpecificFactories.length; ii++) {\r\n                if (this.attachmentSpecificFactories[ii] === Factory) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            return found;\r\n        },\r\n\r\n        getOuterContext: function () {\r\n            return this.options.context;\r\n        },\r\n\r\n        getModel: function () {\r\n            return this._getAttachmentObject(\"getModel\", arguments);\r\n        },\r\n        getCollection: function () {\r\n            return this._getAttachmentObject(\"getCollection\", arguments);\r\n        },\r\n        getObject: function () {\r\n            return this._getAttachmentObject(\"getObject\", arguments);\r\n        },\r\n\r\n        _getAttachmentObject: function (methodName, params) {\r\n            var model;\r\n            if (this.isAttachmentSpecific(params[0])) {\r\n                model = Context.prototype[methodName].apply(this, params);\r\n            } else {\r\n                model = this.options.context[methodName].apply(this.options.context, params);\r\n            }\r\n\r\n            return model;\r\n        },\r\n\r\n        fetch: function (options) {\r\n            this.fetched = false;\r\n            var old_id = this.wkspid.get(\"id\"),\r\n                self   = this;\r\n            // First fetch attachment context node and wait for the result.\r\n            // As we do this in the fetch, we delay the slide-in animation of the perspective,\r\n            // so the perspective is sliding in only after we have triggered all fetches here.\r\n            // This is for sliding in smoothly, as otherwise it is stumbling on mobiles/tablets.\r\n\r\n            return this.wkspid // get workspace id for given node\r\n                .fetch()\r\n                .then(function () {\r\n                    self.fetched = true;\r\n                    var new_id = self.wkspid.get(\"id\");\r\n                    var promises;\r\n                    log.debug(\"wkspid old {0}, new {1}.\", old_id, new_id) &&\r\n                    console.log(log.last);\r\n                    // then, if possible, first get values for node models from context node\r\n                    // and for all other models do a normal fetch using the factory.\r\n                    // note: node models represent persisted or non persisted nodes for an id.\r\n                    // They are triggered from outside by setting the id.\r\n                    // So if the workspace id of the context node changes\r\n                    // we must set the id of all our node models in the attachment context.\r\n\r\n                    // get node factory\r\n                    var factories = self.getFactories ? self.getFactories() : self._factories;\r\n                    var obj = _.find(factories, function (f) {\r\n                        return f.property === self.node\r\n                    });\r\n                    log.debug(\"going to fetch {0}.\", obj.propertyPrefix) && console.log(log.last);\r\n                    var nodepromise, isWksp;\r\n                    // update inner node (inner context) !!!\r\n                    // Workspaces:\r\n                    // 1. From current navigation node we determine a parent workspace id\r\n                    // 2. Inner node is set to workspace node\r\n                    // Containers:\r\n                    // Current navigation node is set to inner node\r\n                    if (new_id === self.options.node.get(\"id\")) {\r\n                        self.node.set(self.options.node.attributes);\r\n                        // Check if the current workspace is already fetched.No need to fetch again\r\n                        // if the workspace is already fetched( breadcrumb/links from other widgets like\r\n                        // related,business attachments,workspaces etc.,)\r\n                        if (self.wkspStatus && self.wkspStatus.wksp_id === new_id &&\r\n                            self.wkspStatus.fetched) {\r\n                            return $.Deferred()\r\n                                .resolve(self, {}, options)\r\n                                .promise();\r\n                        }\r\n                        isWksp = true\r\n                    } else {\r\n                        isWksp = false;\r\n                        // drill down from workspace into folder\r\n                        if (new_id) {\r\n                            self.node.set(\"id\", new_id);\r\n                            self.node.set(\"type\", 848);\r\n                            if (obj.fetch) {\r\n                                // Node other than a workspace - accessed via bookmark/shortcut/direct-access\r\n                                // 1) Fetch if the node is accessed directly via bookmark and attachment context is\r\n                                //    not already fetched(!old_id)\r\n                                // 2) Fetch if the node is accessed via shortcut where the attachment context is\r\n                                //    changed (old_id !== new_id)\r\n                                // 3) Skip the fetch when the node belongs to already fetched attachment context\r\n                                if (!old_id || (old_id && new_id && old_id !== new_id)) {\r\n                                    nodepromise = obj.fetch();\r\n                                }\r\n                            }\r\n                        } else { // container is not a workspace\r\n\r\n                            self.node.set(self.options.node.attributes);\r\n                        }\r\n                    }\r\n\r\n                    // after setting the id in the node model, again get the factories to be sure, that\r\n                    // we have also the factories, that were added during the change:id propagation.\r\n                    factories = self.getFactories ? self.getFactories() : self._factories;\r\n                    // trigger business attachment call\r\n                    promises = _.chain(factories)\r\n                        .map(function (obj) {\r\n                            log.debug(\"going to fetch {0}.\", obj.propertyPrefix) &&\r\n                            console.log(log.last);\r\n                            if (obj.property !== self.wkspid &&\r\n                                obj.property !== self.node) {\r\n\r\n                                if (obj.fetch) {\r\n                                    // 1. Fetch if the workspace is accessed for the first time (isWksp)\r\n                                    // 2. Fetch if the node inside a workspace is accessed directly\r\n                                    //    and the workspace context is not fetched even once(!old_id)\r\n                                    // 3. Fetch if the workspace is changed (ie., old_id !== new_id)\r\n                                    if (isWksp || !old_id ||\r\n                                        (old_id && new_id && old_id !== new_id)) {\r\n                                        return obj.fetch();\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                        .compact()\r\n                        .value();\r\n                    if (nodepromise) {\r\n                        promises.unshift(nodepromise);\r\n                    }\r\n                    // Set the attachment fetched status for subsequent workspace access via other widgets/breadcrumbs\r\n                    if (promises.length > 0) {\r\n                        self.wkspStatus = {\r\n                            wksp_id: new_id,\r\n                            fetched: true\r\n                        }\r\n                    }\r\n\r\n                    return $.when.apply($, promises);\r\n                })\r\n        }\r\n    });\r\n\r\n    return AttachmentContextModel;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/boattachments/impl/boattachmentutil',[\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    \"i18n!xecmpf/widgets/boattachments/impl/nls/lang\",\r\n\r\n], function ($, _,\r\n             lang) {\r\n\r\n    function BOAttachmentUtil() {\r\n    }\r\n\r\n    _.extend(BOAttachmentUtil.prototype, {\r\n\r\n        formatFilzeSize: function (node) {\r\n            var size = node.size;\r\n            if (node.container!==undefined && node.container === true) {\r\n                return size + ' ' + lang.items;\r\n            } else {\r\n                var filesSize = lang.fileSizeByte;\r\n                if (size > 1024) {\r\n                    filesSize = lang.fileSizeKByte;\r\n                    size = size / 1024;\r\n                    if (size > 1024) {\r\n                        filesSize = lang.fileSizeMByte;\r\n                        size = size / 1024;\r\n                        if (size > 1024) {\r\n                            filesSize = lang.fileSizeGByte;\r\n                            size = size / 1024;\r\n                        }\r\n                    }\r\n                }\r\n                return Math.ceil(size) + ' ' + filesSize;\r\n            }\r\n        },\r\n        orderByAsString: function (orderBy, defCol, defOrd) {\r\n            var sc;\r\n\r\n            var ret, order = {sc: defCol, so: defOrd};\r\n            if (orderBy) {\r\n                order = _.defaults({sc: orderBy.sortColumn, so: orderBy.sortOrder}, order);\r\n            }\r\n            // strip curly braces from sortColumn\r\n            if (order.sc) {\r\n                // syntax of the sortColumn is to be checked in the constructors, so no need to\r\n                // raise a message here\r\n                var parameterPlaceholder = /{([^:}]+)(:([^}]+))?}/g;\r\n                var match = parameterPlaceholder.exec(order.sc);\r\n                if (match) {\r\n                    order.sc = match[1];\r\n                } else {\r\n                    order.sc = undefined;\r\n                }\r\n            }\r\n            // if one of column or order is defined, then we must deliver something defined\r\n            if (order.sc || order.so) {\r\n                // and use a constant default, if one is undefined\r\n                ret = _.str.sformat(\"{0} {1}\", order.sc ? order.sc : \"name\", order.so ? order.so : \"asc\");\r\n            }\r\n            return ret;\r\n        }\r\n\r\n    });\r\n\r\n    return new BOAttachmentUtil();\r\n});\r\n\n","/**\r\n * The business attachment model for fetching business attachments from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n */\r\ncsui.define('xecmpf/widgets/boattachments/impl/boattachment.model',[\r\n    'module',\r\n    'csui/lib/jquery',\r\n    'csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/models/node/node.model',\r\n    'csui/models/nodeancestors',\r\n    'csui/utils/contexts/factories/factory',\r\n    'xecmpf/widgets/boattachments/impl/boattachmentutil'\r\n\r\n\r\n], function (module, $, _, Backbone, NodeModel,\r\n             NodeAncestorCollection, ConnectorFactory, BOAttachmentUtil) {\r\n\r\n    var BOAttachmentModel = NodeModel.extend({\r\n\r\n        constructor: function BOAttachmentModel(attributes, options) {\r\n            // The connector needs to be passed to the NodeModel constructor\r\n            // to be processed correctly\r\n            options || (options = {});\r\n            if (!options.connector) {\r\n                options.connector = options.collection && options.collection.connector || undefined;\r\n            }\r\n            this.connector = options.connector;\r\n            NodeModel.prototype.constructor.call(this, attributes, options);\r\n\r\n        },\r\n\r\n        // Set id attribute to support endless scrolling\r\n        // Needed to support compare attachments and add attachments to a existing collection\r\n        idAttribute: 'id',\r\n\r\n        // Parse one workspace and add category properties\r\n        parse: function (response, options) {\r\n            var node = NodeModel.prototype.parse.call(this, response, options);\r\n\r\n            if (!node.size_formatted ) {\r\n                node.size_formatted =\r\n                    BOAttachmentUtil.formatFilzeSize(node);\r\n            }\r\n\r\n            // SAPRM-11354: If CS item has no version it should be blank\r\n            if ( node.version === 0 ){\r\n                node.version = \"\";\r\n            }\r\n\r\n            if (node.actions) {\r\n                node.actions[node.actions.length] = {\r\n                    body: \"\",\r\n                    content_type: \"\",\r\n                    form_href: \"\",\r\n                    href: \"\",\r\n                    method: \"GET\",\r\n                    name: \"Snapshot\",\r\n                    signature: \"Snapshot\"\r\n                }\r\n            }\r\n\r\n            node.ancestors = new NodeAncestorCollection(\r\n                response.data.ancestors, {\r\n                node: this, autofetch: false\r\n            });\r\n\r\n            return node;\r\n        }\r\n\r\n    });\r\n\r\n    return BOAttachmentModel;\r\n});\r\n\n","/**\r\n * The business attachment model for fetching the business attachments from the server.\r\n * Provides:\r\n *   - Endless scrolling\r\n *   - Fetch custom attributes (categories)\r\n *   - Provide Workspace type icon\r\n */\r\ncsui.define('xecmpf/widgets/boattachments/impl/boattachments.model',['module', 'csui/lib/jquery',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/url',\r\n  'csui/models/node/node.model',\r\n  'csui/models/connectable',\r\n  'csui/models/nodechildrencolumn',\r\n  'csui/models/nodechildrencolumns',\r\n  'csui/models/nodechildren',\r\n\r\n  'csui/models/nodes',\r\n  'csui/models/mixins/expandable/expandable.mixin',\r\n  'csui/models/mixins/node.resource/node.resource.mixin',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/browsable/v1.request.mixin',\r\n  'csui/models/mixins/resource/resource.mixin',\r\n  'csui/models/browsable/v1.response.mixin',\r\n  'csui/models/browsable/v2.response.mixin',\r\n\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',\r\n  'xecmpf/widgets/boattachments/impl/boattachment.model'\r\n], function (module, $, _, Backbone, Url,\r\n    NodeModel, ConnectableModel,\r\n    NodeChildrenColumnModel,\r\n    NodeChildrenColumnCollection,\r\n    NodeChildrenCollection,\r\n    NodeCollection,\r\n    ExpandableMixin,\r\n    NodeResourceMixin,\r\n    BrowsableMixin,\r\n    BrowsableV1RequestMixin,\r\n    ResourceMixin,\r\n    BrowsableV1ResponseMixin,\r\n    BrowsableV2ResponseMixin,\r\n    AttachmentContextBusinessObjectInfoFactory,\r\n    BOAttachmentModel) {\r\n\r\n  // Model for display columns in expanded view\r\n  var AttachmentsColumnModel = NodeChildrenColumnModel.extend({\r\n\r\n    constructor: function AttachmentsColumnModel() {\r\n      NodeChildrenColumnModel.prototype.constructor.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  // Collection for display columns in expanded view\r\n  var AttachmentsColumnCollection = NodeChildrenColumnCollection.extend({\r\n\r\n    dataCollectionName: \"properties\",\r\n    model: AttachmentsColumnModel,\r\n\r\n    constructor: function AttachmentsColumnCollection(dataCollectionName) {\r\n      dataCollectionName && (this.dataCollectionName = dataCollectionName);\r\n      NodeChildrenColumnCollection.prototype.constructor.apply(this);\r\n    },\r\n\r\n    resetColumns: function (response, options) {\r\n      this.resetCollection(this.getColumns(response), options);\r\n    },\r\n\r\n    getColumns: function (response) {\r\n\r\n      var definitions = response && response.meta_data && response.meta_data.properties || {};\r\n\r\n      if (definitions && !definitions['modified']) {\r\n        definitions['modified'] = definitions['modify_date'];\r\n      }\r\n\r\n      if (definitions && !definitions['size_formatted']) {\r\n        definitions['size_formatted'] = definitions['size'];\r\n      }\r\n      var columnKeys   = _.keys(definitions),\r\n          columnModels = this.getColumnModels(columnKeys, definitions);\r\n\r\n      _.each(columnModels, function (model) {\r\n        // To format user columns they must have type 14\r\n        if (model.persona === \"user\" || model.persona === \"member\") {\r\n          model.type = 14;\r\n        }\r\n      });\r\n\r\n      return columnModels\r\n    }\r\n\r\n  });\r\n  var config = module.config();\r\n\r\n  var BOAttachmentsCollection = NodeCollection.extend({\r\n\r\n    dataCollectionName: \"properties\",\r\n    model: BOAttachmentModel,\r\n\r\n    constructor: function BOAttachmentsCollection(models, options) {\r\n      NodeCollection.prototype.constructor.apply(this, arguments);\r\n      options || (options = {});\r\n      this.options = options;\r\n\r\n      this.makeNodeResource(options)\r\n          .makeExpandable(options)\r\n          .makeBrowsable(options)\r\n          .makeBrowsableV1Request(options)\r\n          .makeBrowsableV1Response(options);\r\n\r\n      this.columns = new AttachmentsColumnCollection(this.dataCollectionName);\r\n      this.totalCount = 0;\r\n      this.titleIcon = undefined;\r\n      // API returns if there are more pages to fetch or not\r\n      this.next = undefined;\r\n      this.busobjinfo = this.options.context.getModel(AttachmentContextBusinessObjectInfoFactory,\r\n          {\r\n            attributes: this.options.data.businessattachment.properties,\r\n            data: this.options.data.businessattachment.properties\r\n          });\r\n    },\r\n\r\n    url: function () {\r\n      var queryParams = this.options.query || {};\r\n      // Paging\r\n      queryParams = this.mergeUrlPaging(config, queryParams);\r\n      // Sorting\r\n      queryParams = this.mergeUrlSorting(queryParams);\r\n      // Filtering\r\n      queryParams = this.mergeUrlFiltering(queryParams);\r\n\r\n      var url = Url.combine(this.getBaseUrl(),\r\n          'businessobjects',\r\n          encodeURIComponent(this.busobjinfo.get(\"extSystemId\")),\r\n          encodeURIComponent(this.busobjinfo.get(\"busObjectType\")),\r\n          encodeURIComponent(this.busobjinfo.get(\"busObjectKey\")),\r\n\t\t  'businessattachments');\r\n\r\n      this.listenTo(this, \"sync\", this._cacheCollection);\r\n      url = url.replace('/v1', '/v2');\r\n      queryParams = _.omit(queryParams, function (value, key) {\r\n        return value == null || value === '';\r\n      });\r\n      queryParams.metadata = undefined;\r\n      return url + '?' + this.queryParamsToString(queryParams) + \"&expand=\" + encodeURIComponent(\r\n          'properties{original_id,ancestors,parent_id,reserved_user_id,createdby,modifiedby}');\r\n\r\n    },\r\n\r\n    fetch: function (options) {\r\n      var self = this,\r\n          df   = $.Deferred();\r\n      this.busobjinfo.fetch().done(function () {\r\n        if (!this.fetching) {\r\n          // reset total count\r\n          this.totalCount = 0;\r\n        }\r\n\r\n        if (self.busobjinfo.get(\"extSystemId\") &&\r\n            self.busobjinfo.get(\"busObjectType\") &&\r\n            self.busobjinfo.get(\"busObjectKey\")) {\r\n          self.Fetchable.fetch.call(self, options).done(function () {\r\n            df.resolve()\r\n          }).fail(function () {\r\n            df.resolve()\r\n          })\r\n        } else {\r\n          self.trigger('sync');\r\n          df.resolve()\r\n        }\r\n      });\r\n      return df.promise();\r\n    },\r\n\r\n    clone: function () {\r\n      // Don't share something between collapsed and expanded view (models, ...)\r\n      // Sorting, filtering, columns, ... must also be shared since e.g. the modal view has\r\n      // specific sorting\r\n      var options = $.extend(true, {}, this.options);\r\n      // remove filter parameter\r\n      options.query && options.query.where_name && (options.query.where_name = '');\r\n      var collection = new this.constructor([], options);\r\n\r\n      collection.connector = this.connector;\r\n      return collection;\r\n    },\r\n\r\n    parse: function (response) {\r\n      // In case api returns properties use them, otherwise use defaults\r\n      this.totalCount = response.paging.total_count;\r\n      this.options.orderBy = this.orderBy;\r\n      this.columns && this.columns.resetColumns(response, this.options);\r\n\r\n      // If more pages available set next to true, otherwise to false\r\n      this.next = response.paging.actions && response.paging.actions.next ? true : false;\r\n\r\n      this.businessObjectActions = response.businessObjectActions;\r\n\r\n      // pass the array of v2 nodes to the model parse methods\r\n      return response.results;\r\n    },\r\n    mergeUrlPaging: function (config, queryParams) {\r\n      var limit = this.topCount || config.defaultPageSize;\r\n      if (limit) {\r\n        queryParams.limit = limit;\r\n        queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    mergeUrlSorting: function (queryParams) {\r\n      var orderBy;\r\n      if (this.orderBy) {\r\n        orderBy = this.orderBy;\r\n        queryParams.sort = this._formatSorting(orderBy);\r\n      } else if (_.isUndefined(queryParams.sort)) {\r\n        queryParams.sort = \"asc_name\";\r\n        this.orderBy = \"name asc\";\r\n      } else if (queryParams.sort.indexOf(\" \") > -1) {\r\n        orderBy = queryParams.sort;\r\n        this.orderBy = queryParams.sort;\r\n        queryParams.sort = this._formatSorting(orderBy);\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    _formatSorting: function (orderBy) {\r\n      var slicePosition = orderBy.lastIndexOf(\" \");\r\n      return orderBy.slice(slicePosition + 1) + '_' + orderBy.slice(0, slicePosition);\r\n    },\r\n\r\n    mergeUrlFiltering: function (queryParams) {\r\n      if (!$.isEmptyObject(this.filters)) {\r\n        for (var name in this.filters) {\r\n          if (this.filters.hasOwnProperty(name)) {\r\n            if (this.filters[name] === \"\" || this.filters[name] === undefined) {\r\n              // Clear filter\r\n              delete queryParams[\"where_\" + name];\r\n              delete this.options.query[\"where_\" + name];\r\n            } else {\r\n              // API like search syntax: where_name=contains_street\r\n              // Currently it's only possible to filter for strings, since the\r\n              // API only returns for Strings that filtering is possible\r\n              queryParams[\"where_\" + name] = \"contains_\" +\r\n                                             encodeURIComponent(this.filters[name]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    queryParamsToString: function (params) {\r\n      var queryParamsStr = \"\";\r\n      for (var param in params) {\r\n        if (params.hasOwnProperty(param)) {\r\n          if (queryParamsStr.length > 0) {\r\n            queryParamsStr += \"&\"\r\n          }\r\n\r\n          if (params[param] === undefined) {\r\n            queryParamsStr += param;\r\n          } else {\r\n            queryParamsStr += param + \"=\" + params[param];\r\n          }\r\n        }\r\n      }\r\n      return queryParamsStr;\r\n    },\r\n\r\n    getBaseUrl: function () {\r\n      var url = this.connector && this.connector.connection &&\r\n                this.connector.connection.url;\r\n      if (_.isUndefined(url)) {\r\n        url = this.options.connector.connection.url;\r\n      }\r\n      return url;\r\n    }\r\n  });\r\n\r\n  BrowsableMixin.mixin(BOAttachmentsCollection.prototype);\r\n  ExpandableMixin.mixin(BOAttachmentsCollection.prototype);\r\n  NodeResourceMixin.mixin(BOAttachmentsCollection.prototype);\r\n  BrowsableV1RequestMixin.mixin(BOAttachmentsCollection.prototype);\r\n  BrowsableV1ResponseMixin.mixin(BOAttachmentsCollection.prototype);\r\n\r\n  // TODO: Remove this, as soon as all abandoned this.Fetchable.\r\n\r\n  var originalFetch = NodeCollection.prototype.fetch;\r\n  BOAttachmentsCollection.prototype.Fetchable = {\r\n\r\n    fetch: function (options) {\r\n      // log.warn('Using this.Fetchable.fetch has been deprecated.  ' +\r\n      //          'Use NodeChildrenCollection.prototype.fetch. ' +\r\n      //          'this.Fetchable is going to be removed.') && console.warn(log.last);\r\n      // log.warn('Occurred ' + log.getStackTrace(2)) && console.warn(log.last);\r\n      return originalFetch.call(this, options);\r\n    }\r\n\r\n  };\r\n\r\n  return BOAttachmentsCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/myattachments/metadata.attachment.model',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/log', 'csui/utils/url', 'csui/models/actions',\r\n    'csui/models/mixins/expandable/expandable.mixin',\r\n    'csui/models/mixins/resource/resource.mixin',\r\n    'csui/models/mixins/uploadable/uploadable.mixin',\r\n    'csui/lib/jquery'\r\n], function (module, _, Backbone, log, Url, ActionCollection,\r\n             ExpandableMixin, ResourceMixin, UploadableMixin, $) {\r\n    'use strict';\r\n\r\n    var AttachmentModel = Backbone.Model.extend({\r\n\r\n        // Not set this idAttribute as you can have the same bo_id for\r\n        // different external systems\r\n        // idAttribute: '_id',\r\n\r\n        constructor: function AttachmentModel(attributes, options) {\r\n            attributes || (attributes = {});\r\n            options = _.extend({expand: 'user'}, options);\r\n\r\n            if (!attributes.actions) {\r\n\t\t\t\tthis._setCollectionProperty('actions', ActionCollection,\r\n\t\t\t\t\tattributes, options);\r\n\t\t\t}\r\n\r\n            Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n\r\n            this.makeResource(options)\r\n                .makeUploadable(options)\r\n                .makeExpandable(options);\r\n        },\r\n\r\n        set: function (key, val, options) {\r\n            var attrs;\r\n            if (key == null) {\r\n                return this;\r\n            }\r\n\r\n            // Save actions\r\n            if (key.actions) {\r\n                this.actions = key.actions;\r\n                this._setCollectionProperty('actions', ActionCollection, key, options);\r\n            }\r\n            // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n            if (typeof key === 'object') {\r\n                if (key.data) {\r\n                    if (key.data.properties) {\r\n                        attrs = key.data.properties;\r\n                        // we need additional id for collapse of the table, see\r\n                        // table.view.js line 1525:\r\n                        // childRow.attr('id', \"csui-details-row-\" + aData.get('id'));\r\n                        // ........\r\n                        // aData could be an AttachmentModel\r\n                        this.id = attrs.ext_system_id + attrs.bo_type + attrs.bo_id;\r\n                        options = val;\r\n                    }\r\n                }\r\n                else {\r\n                    attrs = key;\r\n                    options = val;\r\n                }\r\n            } else {\r\n                (attrs = {})[key] = val;\r\n            }\r\n\r\n            options || (options = {});\r\n            return Backbone.Model.prototype.set.call(this, attrs, options);\r\n\r\n        },\r\n\r\n        isNew: function () {\r\n            if (this.id) {\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        },\r\n\r\n        isFetchable: function () {\r\n            return !!(this.get('id') && this.get('bo_id'));\r\n        },\r\n\r\n        url: function () {\r\n            var url = Url.combine(this.collection.node.urlBase(), 'businessattachments');\r\n            if (!this.isNew()) {\r\n                url = Url.combine(url, encodeURIComponent(this.get('ext_system_id')), encodeURIComponent(this.get('bo_type')), encodeURIComponent(this.get('bo_id')));\r\n            }\r\n            url = url.replace('/v1', '/v2');\r\n            return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n            var attachment;\r\n            if ( $.isArray(response.results) ){\r\n                attachment = response.results[0];\r\n            }\r\n            else {\r\n               attachment = response;\r\n            }\r\n\r\n            var attachmentActions = _.map(attachment, function (value, key) {\r\n\t\t\t\treturn {\r\n\t\t\t\t  id: key,\r\n\t\t\t\t  actions: _.map(value.data, function (value, key) {\r\n\t\t\t\t\tvalue.signature = key;\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t  })\r\n\t\t\t\t};\r\n\t\t\t}, {});\r\n\t\t\t\r\n\t\t\tattachment.actions = attachmentActions[0].actions;\r\n\r\n            return attachment;\r\n        },\r\n\r\n        _setCollectionProperty: function (attribute, Class, attributes, options) {\r\n            var property   = _.str.camelize(attribute),\r\n                models     = attributes[attribute];\t\t\t  \r\n            this[property] = new Class(models, {\r\n                connector: this.connector || options && options.connector\r\n            });\r\n          }\r\n\r\n    });\r\n\r\n    ExpandableMixin.mixin(AttachmentModel.prototype);\r\n    UploadableMixin.mixin(AttachmentModel.prototype);\r\n    ResourceMixin.mixin(AttachmentModel.prototype);\r\n\r\n    return AttachmentModel;\r\n\r\n});\r\n\r\n\n","csui.define('xecmpf/widgets/myattachments/metadata.attachments.model',[\"module\", \"csui/lib/backbone\", \"csui/utils/log\", \"xecmpf/widgets/myattachments/metadata.attachment.model\",\"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/utils/url\"\r\n], function (module, Backbone, log, AttachmentModel, $, _, Url) {\r\n  'use strict';\r\n\r\n  var AttachmentCollection = Backbone.Collection.extend({\r\n\r\n    model: AttachmentModel,\r\n\r\n    constructor: function AttachmentCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n      this.options = options || {};\r\n      if (this.options.connector) {\r\n        this.options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    setOrder: function (attributes, fetch) {\r\n      if (this.orderBy !== attributes) {\r\n        this.orderBy = attributes;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        //this._runAllOperations();\r\n        return true;\r\n      }\r\n    },\r\n\r\n    resetOrder: function (fetch) {\r\n      if (this.orderBy) {\r\n        this.orderBy = undefined;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        return true;\r\n      }\r\n    },\r\n\r\n    setLimit: function (skip, top, fetch) {\r\n      if (this.skipCount !== skip || this.topCount !== top) {\r\n        this.skipCount = skip;\r\n        this.topCount = top;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        return true;\r\n      }\r\n    },\r\n\r\n    resetLimit: function (fetch) {\r\n      if (this.skipCount) {\r\n        this.skipCount = 0;\r\n        if (fetch !== false) {\r\n          this.fetch();\r\n        }\r\n        return true;\r\n      }\r\n    },\r\n\r\n    setFilter: function (filters, fetch, options) {\r\n      if(this.filters) {\r\n        for (var tempKey in this.filters) {\r\n          if(this.filters[tempKey] === undefined) {\r\n            delete this.filters[tempKey];\r\n          }\r\n        }\r\n      }\r\n      for (var key in filters) {\r\n        if (!this.filters) {\r\n          this.filters = {};\r\n        }\r\n        this.filters[key] = filters[key];\r\n      }\r\n      if (fetch !== false) {\r\n        this.fetch(options);\r\n      }\r\n      return true;\r\n    }\r\n\r\n  });\r\n  AttachmentCollection.version = '1.0';\r\n\r\n  return AttachmentCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/myattachments/metadata.nodeattachments.model',['module', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/base', 'csui/utils/log', 'csui/utils/url',\r\n    'xecmpf/widgets/myattachments/metadata.attachments.model', 'csui/models/actions', 'csui/models/columns',\r\n    'csui/models/mixins/node.resource/node.resource.mixin',\r\n    'csui/models/mixins/expandable/expandable.mixin',\r\n    'csui/lib/jquery',\r\n    // 'csui/models/browsable/client-side.mixin',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (module, _, Backbone, base, log, Url, AttachmentCollection, ActionCollection,\r\n             NodeColumnCollection, NodeResourceMixin,\r\n             ExpandableMixin, $/* ClientSideBrowsableMixin */) {\r\n    'use strict';\r\n\r\n    var NodeAttachmentCollection = AttachmentCollection.extend({\r\n\r\n        constructor: function NodeAttachmentCollection(models, options) {\r\n            AttachmentCollection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.makeNodeResource(options)\r\n                .makeExpandable(options);\r\n            // .makeClientSideBrowsable(options);\r\n\r\n            this.columns = new NodeColumnCollection();\r\n        },\r\n\r\n        clone: function () {\r\n            return new this.constructor(this.models, {\r\n                node: this.node,\r\n                skip: this.skipCount,\r\n                top: this.topCount,\r\n                filter: _.deepClone(this.filters),\r\n                orderBy: _.clone(this.orderBy),\r\n                expand: _.clone(this.expand),\r\n                // TODO: Use commandable mixin.\r\n                commands: _.clone(this.options.commands)\r\n            });\r\n        },\r\n\r\n        mergeUrlPaging: function () {\r\n            var queryParams = {};\r\n            var limit = this.topCount;\r\n            if (limit) {\r\n                queryParams.limit = limit;\r\n                queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        mergeUrlFiltering: function () {\r\n            var queryParams = [];\r\n            if (!$.isEmptyObject(this.filters)) {\r\n                for (var name in this.filters) {\r\n                    if (this.filters.hasOwnProperty(name)) {\r\n                        if (this.filters[name] !== \"\" && this.filters[name] !== undefined) {\r\n                            queryParams[\"where_\" + name] = \"contains_\" + this.filters[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        mergeUrlSorting: function () {\r\n            var queryParams = [];\r\n            var orderBy;\r\n            if (this.orderBy) {\r\n                orderBy = this.orderBy;\r\n                queryParams.sort = this._formatSorting(orderBy);\r\n            } else if (_.isUndefined(queryParams.sort)) {\r\n                queryParams.sort = \"asc_name\";\r\n                this.orderBy = \"name asc\";\r\n            } else if (queryParams.sort.indexOf(\" \") > -1) {\r\n                orderBy = queryParams.sort;\r\n                this.orderBy = queryParams.sort;\r\n                queryParams.sort = this._formatSorting(orderBy);\r\n            }\r\n            return queryParams;\r\n        },\r\n\r\n        _formatSorting: function (orderBy) {\r\n            var slicePosition = orderBy.lastIndexOf(\" \");\r\n            return orderBy.slice(slicePosition + 1) + '_' + orderBy.slice(0, slicePosition);\r\n        },\r\n\r\n        url: function () {\r\n            var query = Url.combineQueryString(\r\n                this.getExpandableResourcesUrlQuery(),\r\n                'metadata',\r\n                this.mergeUrlPaging(),\r\n                this.mergeUrlFiltering(),\r\n                this.mergeUrlSorting()\r\n            );\r\n\r\n            var url = this.node.urlBase();\r\n            // SAPRM-9351:\r\n            // this does not work for machine names like\r\n            // http://xecmwinsrv12.eng-muc-test.opentext.net:8080/OTCS/cs.exe/api/v1/nodes/...\"\r\n            // we have to replace correctly\r\n            // url = url.replace(\"v1\", \"v2\");\r\n            url = url.replace('/v1', '/v2');\r\n            // End of SAPRM-9351\r\n            return Url.combine(url, '/businessattachments?' + query);\r\n        },\r\n\r\n        parse: function (response) {\r\n            this.actions = response.actions; // get actions independent from single bus. attachment, e.g. add attachment\r\n            this.totalCount = response.paging.total_count;\r\n\r\n            var metadata = response.meta_data;\r\n            var columnKeys = _.keys(metadata.properties);\r\n\r\n            if (!this.options.onlyClientSideDefinedColumns) {\r\n                // merge metadata_order into metadata as metadata_order attribute\r\n                if (response.metadata_order) {\r\n                    for (var idx = 0; idx < response.metadata_order.length; idx++) {\r\n                        var column_key = response.metadata_order[idx];\r\n                        metadata[column_key].metadata_order = 500 + idx;\r\n                    }\r\n                }\r\n            }\r\n            // do not reset the columns in case of filtering else the searchbox is removed\r\n            if (!this.filters) {\r\n                this.columns.reset(this.getColumnModels(columnKeys, metadata.properties));\r\n            }\r\n\r\n            return response.results;\r\n        },\r\n\r\n        getColumnModels: function (columnKeys, metadata) {\r\n            var columns = _.reduce(columnKeys, function (colArray, column) {\r\n                if (column.indexOf('_formatted') >= 0) {\r\n                    var shortColumnName = column.replace(/_formatted$/, '');\r\n                    if (metadata[shortColumnName]) {\r\n                        // there is also the column without the trailing _formatted: skip this and use this instead\r\n                        return colArray;\r\n                    }\r\n                } else {\r\n                    // copy the metadata_order from the *_formatted column to the non-formatted column\r\n                    // because it is assumed that the attributes form *_formatted column are more important\r\n                    var definition_short = metadata[column];\r\n                    if (!definition_short.metadata_order) {\r\n                        var definition_formatted = metadata[column + '_formatted'];\r\n                        if (definition_formatted && definition_formatted.metadata_order) {\r\n                            definition_short.metadata_order = definition_formatted.metadata_order;\r\n                        }\r\n                    }\r\n                }\r\n                var definition = metadata[column];\r\n\r\n                switch (column) {\r\n                    case \"name\":\r\n                        definition = _.extend(definition, {\r\n                            default_action: true,\r\n                            contextual_menu: false,\r\n                            editable: true,\r\n                            filter_key: \"name\"\r\n                        });\r\n                        break;\r\n                }\r\n\r\n                colArray.push(_.extend({column_key: column}, definition));\r\n                return colArray;\r\n            }, []);\r\n            return columns;\r\n        }\r\n\r\n    });\r\n\r\n    // ClientSideBrowsableMixin.mixin(NodeAttachmentCollection.prototype);\r\n    ExpandableMixin.mixin(NodeAttachmentCollection.prototype);\r\n    NodeResourceMixin.mixin(NodeAttachmentCollection.prototype);\r\n\r\n    return NodeAttachmentCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/dossier/impl/dossier.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/url', 'csui/models/mixins/connectable/connectable.mixin'\r\n], function (module, $, _, Backbone,\r\n             Url, ConnectableMixin) {\r\n\r\n    var DossierModel, DossierCollection;\r\n\r\n    DossierModel = Backbone.Model.extend({\r\n        constructor: function DossierModel(attributes, options) {\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n        },\r\n\r\n        parse: function (response) {\r\n            if (response && response.paging && response.paging.total_count > 0) {\r\n                return response;\r\n            }\r\n        }\r\n    });\r\n\r\n    DossierCollection = Backbone.Collection.extend({\r\n        model: DossierModel,\r\n\r\n        constructor: function DossierCollection(attributes, options) {\r\n            options || (options = {});\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n            this.options = _.pick(options, ['connector', 'nodeModel', 'query']);\r\n            this.makeConnectable(this.options);\r\n        },\r\n\r\n        parse: function (response, options) {\r\n            var data = response.results.data,\r\n                properties = response.results.properties;\r\n            this.total_documents = properties.total_documents;\r\n            data = _.filter(data, function (item) {\r\n                return item.paging.total_count > 0\r\n            });\r\n            return data;\r\n        },\r\n\r\n        queryParamsToString: function (params) {\r\n            return '?' + $.param(params);\r\n        },\r\n\r\n        fetch: function (options) {\r\n            options || (options = {});\r\n            if (options.query) {\r\n                this.url = this.getUrl() + this.queryParamsToString(options.query);\r\n            }\r\n            return Backbone.Collection.prototype.fetch.apply(this, arguments);\r\n        },\r\n\r\n        url: function () {\r\n            // Get query from options, e.g. group_by criterion already passed\r\n            var queryParams = this.options.query || {};\r\n\r\n            return this.getUrl() + this.queryParamsToString(queryParams);\r\n        },\r\n\r\n        getUrl: function () {\r\n            var url = this.connector.connection.url;\r\n            url = Url.combine(url, 'businessworkspaces', this.options.nodeModel.get('id'), 'dossier')\r\n                .replace('/v1', '/v2');\r\n            return url;\r\n        }\r\n    });\r\n\r\n    ConnectableMixin.mixin(DossierCollection.prototype);\r\n\r\n    return DossierCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/dossier/impl/documentslist/impl/documents.model',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/browsable/browsable.mixin',\r\n  'csui/models/node/node.model'\r\n], function (module, $, _, Backbone, Url,\r\n    ConnectableMixin, BrowsableMixin,\r\n    NodeModel) {\r\n\r\n  var config, DocumentModel, DocumentsCollection;\r\n\r\n  config = module.config();\r\n\r\n  DocumentModel = NodeModel.extend({\r\n\r\n    idAttribute: 'id',\r\n\r\n    constructor: function DocumentModel(attributes, options) {\r\n      options || (options = {});\r\n      // The connector needs to be passed to the NodeModel constructor\r\n      // to be processed correctly\r\n      if (!options.connector) {\r\n        options.connector = options.collection && options.collection.connector || undefined;\r\n      }\r\n      NodeModel.prototype.constructor.apply(this, arguments);\r\n      this.set(NodeModel.prototype.parse.call(this, attributes, options));\r\n    }\r\n  });\r\n\r\n  DocumentsCollection = Backbone.Collection.extend({\r\n\r\n    model: DocumentModel,\r\n\r\n    constructor: function DocumentsCollection(models, options) {\r\n      options || (options = {});\r\n      options.connector = options.nodeModel && options.nodeModel.connector;\r\n      this.options = _.pick(options, ['connector', 'nodeModel', 'query', 'paging', 'metadata']);\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n\r\n      this.makeConnectable(this.options)\r\n          .makeBrowsable(this.options);\r\n\r\n      this.totalCount = this.options.paging.total_count;\r\n      this.options.orderBy = this.orderBy;\r\n    },\r\n\r\n    fetch: function () {\r\n      return Backbone.Collection.prototype.fetch.apply(this, arguments);\r\n    },\r\n\r\n    parse: function (response, options) {\r\n      return response.results.data;\r\n    },\r\n\r\n    mergeUrlPaging: function (config, queryParams) {\r\n      var limit = this.topCount || config.defaultPageSize || 5;\r\n      if (limit) {\r\n        queryParams.limit = limit;\r\n        queryParams.page = this.skipCount ? (Math.floor(this.skipCount / limit)) + 1 : 1;\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    mergeUrlMetadata: function (queryParams) {\r\n      if (this.options.metadata) {\r\n        queryParams.metadata = '{' + this.options.metadata + '}';\r\n      }\r\n      return queryParams;\r\n    },\r\n\r\n    queryParamsToString: function (params) {\r\n      return '?' + $.param(params);\r\n    },\r\n\r\n    url: function () {\r\n      // Get query from options\r\n      var queryParams = this.options.query || {};\r\n\r\n      // Paging\r\n      queryParams = this.mergeUrlPaging(config, queryParams);\r\n\r\n      //metadata\r\n      queryParams = this.mergeUrlMetadata(queryParams);\r\n\r\n      var url = this.connector.connection.url;\r\n      url = Url.combine(url, 'businessworkspaces',\r\n          this.options.nodeModel && this.options.nodeModel.get('id'), 'dossier/documents');\r\n      url = url.replace('/v1', '/v2');\r\n\r\n      return url + this.queryParamsToString(queryParams);\r\n    }\r\n  });\r\n\r\n  ConnectableMixin.mixin(DocumentsCollection.prototype);\r\n  BrowsableMixin.mixin(DocumentsCollection.prototype);\r\n  return DocumentsCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/dossier/impl/documentslistitem/impl/metadata.model',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone'\r\n], function (_, $, Backbone) {\r\n  var MetadataCollection = Backbone.Collection.extend({\r\n\r\n    constructor: function MetadataCollection(models, options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n      if (!_.isEmpty(options.data)) {\r\n        this.hideEmptyFields = options.hideEmptyFields;\r\n        this.catsAndAttrs = options.catsAndAttrs;\r\n        this._addModels(options.data);\r\n      }\r\n    },\r\n\r\n    _addModels: function (data) {\r\n      _.each(this.catsAndAttrs, function (item) {\r\n        var itemType = typeof item,\r\n            label, value, type, attribute, category;\r\n\r\n        if (itemType === 'number') {\r\n          category = item;\r\n          if (data.hasOwnProperty(category)) {\r\n            for (attribute in data[category]['data']) {\r\n              if (data[category]['data'].hasOwnProperty(attribute)) {\r\n                label = data[category]['definitions'][attribute]['name'];\r\n                value = data[category]['data'][attribute];\r\n                type = data[category]['definitions'][attribute]['type_name'];\r\n                if (this.hideEmptyFields === true && value === null) {continue;}\r\n                this.add({label: label, value: value, type: type});\r\n              }\r\n            }\r\n          }\r\n        } else if (itemType === 'string') {\r\n          category = item.split('_')[0];\r\n          attribute = item;\r\n          if (data.hasOwnProperty(category) && data[category]['data'].hasOwnProperty(attribute)) {\r\n            label = data[category]['definitions'][attribute]['name'];\r\n            value = data[category]['data'][attribute];\r\n            type = data[category]['definitions'][attribute]['type_name'];\r\n            if (this.hideEmptyFields === true && value === undefined) {return;}\r\n            this.add({label: label, value: value, type: type});\r\n          }\r\n        }\r\n      }, this);\r\n    },\r\n\r\n    comparator: 'label'\r\n  });\r\n\r\n  return MetadataCollection;\r\n});\r\n\n","csui.define('xecmpf/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model',['csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/models/mixins/connectable/connectable.mixin', 'csui/utils/url'\r\n], function (_, Backbone, ConnectableMixin, Url) {\r\n    \r\n    var MissingDocumentModel = Backbone.Model.extend({\r\n\r\n        idAttribute: 'id',\r\n\r\n        constructor: function MissingDocumentModel(attributes, options) {\r\n            options || (options = {});\r\n            Backbone.Model.prototype.constructor.apply(this, arguments);\r\n            this.makeConnectable(options);\r\n        },\r\n\r\n        parse: function (response) {\r\n            return response;\r\n        }\r\n\r\n    });\r\n    ConnectableMixin.mixin(MissingDocumentModel.prototype);\r\n\r\n    var MissingDocumentCollection = Backbone.Collection.extend({\r\n\r\n        model: MissingDocumentModel,\r\n\r\n        constructor: function MissingDocumentCollection(models, options) {\r\n            this.options = options || {};\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n            this.makeConnectable(options);\r\n        },\r\n\r\n        url: function () {\r\n            var wrkspceId = this.options.node.get('id');\r\n            return Url.combine(new Url(this.connector.connection.url).getApiBase('v2'),\r\n                '/businessworkspaces/' + wrkspceId + '/missingdocuments');\r\n        },\r\n\r\n        parse: function (response) {\r\n            return response.results.data;\r\n        },\r\n\r\n        fetch: function () {\r\n            return Backbone.Collection.prototype.fetch.apply(this, arguments);\r\n        }\r\n    });\r\n    ConnectableMixin.mixin(MissingDocumentCollection.prototype);\r\n\r\n    return MissingDocumentCollection;\r\n});\r\n\n"," csui.define('xecmpf/widgets/workspaces/models/workspace.collection',['module', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'csui/models/nodes',\r\n    'csui/models/nodechildrencolumns',\r\n    'csui/models/browsable/browsable.mixin',\r\n    'csui/models/browsable/v1.request.mixin',\r\n    'csui/models/mixins/resource/resource.mixin',\r\n    'csui/models/browsable/v1.response.mixin',\r\n    'csui/models/browsable/v2.response.mixin',\r\n    'csui/utils/log',\r\n    'csui/utils/deepClone/deepClone'\r\n], function (module, $, _, Backbone, Url,\r\n             NodeCollection,\r\n             NodeChildrenColumnCollection,\r\n             BrowsableMixin,\r\n             BrowsableV1RequestMixin,\r\n             ResourceMixin,\r\n             BrowsableV1ResponseMixin,\r\n             BrowsableV2ResponseMixin,\r\n             log) {\r\n    'use strict';\r\n\r\n    var config = module.config();\r\n    _.defaults(config, {\r\n        defaultPageSize: 30\r\n    });\r\n\r\n    var WorkspaceCollection = NodeCollection.extend({\r\n\r\n        constructor: function WorkspaceCollection(models, options) {\r\n            options = _.defaults({}, options, {\r\n                top: config.defaultPageSize\r\n            }, options);\r\n\r\n            NodeCollection.prototype.constructor.call(this, models, options);\r\n            this.makeBrowsable(options)\r\n                .makeBrowsableV1Request(options)\r\n                .makeResource(options)\r\n                .makeBrowsableV2Response(options);\r\n\r\n            this.options = options;\r\n            this.orderBy = \"name asc\";\r\n        },\r\n\r\n        clone: function () {\r\n            return new this.constructor(this.models, {\r\n                skip: this.skipCount,\r\n                top: this.topCount,\r\n                orderBy: this.orderBy\r\n            });\r\n        },\r\n        getBaseUrl: function () {\r\n            //   return \"//server/otcs/cs/api/v2\";\r\n            return this.options.connector.connection.url.replace('/v1', '/v2');\r\n        },\r\n\r\n        url: function () {\r\n            var query = this.getBrowsableUrlQuery(),\r\n                url = Url.combine(this.getBaseUrl(),\r\n                    query ? '/businessworkspaces?' + query + \"&\" : '/businessworkspaces?');\r\n\r\n            url += 'metadata&expanded_view=true' +\r\n                '&where_bo_type=' + this.options.busObjectType +\r\n                '&where_ext_system_id=' + this.options.extSystemId;\r\n            if (this.options.early) {\r\n                url += '&where_is_early=true';\r\n            }\r\n            if (this.options.busObjectId) {\r\n                url += '&where_bo_id='+this.options.busObjectId;\r\n            }\r\n            url = url.replace(\"where_name=\", \"where_name=contains_\");\r\n            return url;\r\n        },\r\n        isFetchable: function () {\r\n            return true;\r\n        },\r\n        parse: function (response, options) {\r\n            var modifyDate = _.chain(response.meta_data.properties).pick(\"modify_date\").value().modify_date,\r\n                name = _.chain(response.meta_data.properties).pick(\"name\").value().name\r\n\r\n            this.columns = new NodeChildrenColumnCollection([\r\n                {\r\n                    align: modifyDate.align,\r\n                    column_key: \"modify_date\",\r\n                    name: modifyDate.name,\r\n                    persona: modifyDate.persona,\r\n                    sort: (modifyDate.sort ? true : false ),\r\n                    type: modifyDate.type,\r\n                    width_weight: modifyDate.width_weight\r\n                },\r\n                {\r\n                    column_key: \"name\",\r\n                    align: name.align,\r\n                    name: name.name,\r\n                    persona: name.persona,\r\n                    sort: (name ? name.sort : false ),\r\n                    type: name.type,\r\n                    width_weight: name.width_weight\r\n                }]);\r\n\r\n            this.parseBrowsedState(response, options);\r\n            return this.parseBrowsedItems(response, options);\r\n        }\r\n\r\n    });\r\n\r\n    BrowsableMixin.mixin(WorkspaceCollection.prototype);\r\n    BrowsableV1RequestMixin.mixin(WorkspaceCollection.prototype);\r\n    ResourceMixin.mixin(WorkspaceCollection.prototype);\r\n    BrowsableV2ResponseMixin.mixin(WorkspaceCollection.prototype);\r\n    // TODO: Remove this, as soon as all abandoned this.Fetchable.\r\n    var originalFetch = WorkspaceCollection.prototype.fetch;\r\n    WorkspaceCollection.prototype.Fetchable = {\r\n\r\n        fetch: function (options) {\r\n            // log.warn('Using this.Fetchable.fetch has been deprecated.  ' +\r\n            //          'Use NodeChildrenCollection.prototype.fetch. ' +\r\n            //          'this.Fetchable is going to be removed.') && console.warn(log.last);\r\n            // log.warn('Occurred ' + log.getStackTrace(2)) && console.warn(log.last);\r\n            return originalFetch.call(this, options);\r\n        }\r\n\r\n    };\r\n\r\n    return WorkspaceCollection;\r\n\r\n});\r\n\n","csui.define('xecmpf/widgets/workspaces/models/workspace.types.collection',['csui/lib/underscore',\r\n    'csui/lib/backbone',\r\n    'csui/utils/url',\r\n    'csui/models/mixins/resource/resource.mixin'\r\n], function (_,\r\n             Backbone,\r\n             Url,\r\n             ResourceMixin) {\r\n    'use strict';\r\n\r\n    var WorkspaceTypeModel = Backbone.Model.extend({\r\n\r\n         defaults: {\r\n            id: null,\r\n            name: null,\r\n            templates: null\r\n         }\r\n    });\r\n\r\n    var WorkspaceTypesCollection = Backbone.Collection.extend({\r\n\r\n        model: WorkspaceTypeModel,\r\n\r\n        constructor: function WorkspaceTypesCollection(models, options) {\r\n            this.options = options || (options = {});\r\n            Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n            this.makeResource(options);\r\n        },\r\n\r\n        getBaseUrl: function () {\r\n            // return \"//server/otcs/cs/api/v2\";\r\n            return this.options.connector.connection.url.replace('/v1', '/v2');\r\n        },\r\n        queryParamsToString: function (params) {\r\n            var queryParamsStr = \"\";\r\n            for (var param in params) {\r\n                if (params.hasOwnProperty(param)) {\r\n                    if (queryParamsStr.length > 0) {\r\n                        queryParamsStr += \"&\"\r\n                    }\r\n\r\n                    if (params[param] === undefined) {\r\n                        queryParamsStr += param;\r\n                    } else {\r\n                        queryParamsStr += param + \"=\" + params[param];\r\n                    }\r\n                }\r\n            }\r\n            return queryParamsStr;\r\n        },\r\n\r\n        url: function () {\r\n\r\n            var url = Url.combine(this.getBaseUrl(), '/businessworkspacetypes');\r\n            url += '?expand_templates=true' +\r\n                '&bo_type=' + this.options.config.busObjectType +\r\n                '&ext_system_id=' + this.options.config.extSystemId;\r\n\r\n            return url;\r\n\r\n        },\r\n\r\n        parse: function (response, options) {\r\n\r\n            var businessworkspacetypes = response.results;\r\n            return _.chain(businessworkspacetypes)\r\n                .map(function (elem, index, ref) {\r\n\r\n                    var props = elem.data.properties,\r\n                        businessworkspacetypeAttributes = {\r\n                            wksp_type_name: props.wksp_type_name,\r\n                            wksp_type_id: props.wksp_type_id,\r\n                            rm_enabled: props.rm_enabled,\r\n                            type: 848\r\n                        };\r\n                     businessworkspacetypeAttributes.templates =\r\n                        _.chain(props.templates)\r\n                            .map(function (elem, index, ref) {\r\n                                if (index === 0) {\r\n                                    return {\r\n                                        id: elem.id,\r\n                                        name: elem.name,\r\n                                        subType: elem.subtype\r\n                                    };\r\n                                }\r\n                            })\r\n                            .compact()\r\n                            .value();\r\n\r\n\r\n                    return businessworkspacetypeAttributes;\r\n                })\r\n                .compact()\r\n                .value();\r\n        }\r\n\r\n    });\r\n\r\n    ResourceMixin.mixin(WorkspaceTypesCollection.prototype);\r\n\r\n    return WorkspaceTypesCollection;\r\n\r\n});\r\n\n","/**\r\n * Created by stefang on 24.11.2015.\r\n */\r\ncsui.define('xecmpf/models/boattachmentcontext/attachmentcontext.factory',['csui/lib/underscore',\r\n    'csui/utils/contexts/factories/factory',\r\n    'xecmpf/models/boattachmentcontext/attachmentcontext.model'\r\n], function (_,\r\n             ModelFactory,\r\n             AttachmentContextModel) {\r\n\r\n    var AttachmentContextFactory = ModelFactory.extend({\r\n\r\n        propertyPrefix: 'attachmentContext',\r\n\r\n        constructor: function AttachmentContextFactory(context, options) {\r\n            ModelFactory.prototype.constructor.apply(this, arguments);\r\n            this.property = new AttachmentContextModel({}, {context: context, data: options.attachmentContext});\r\n        },\r\n\r\n        fetch: function (options) {\r\n            return this.property.fetch(options);\r\n        }\r\n\r\n    });\r\n\r\n    return AttachmentContextFactory;\r\n\r\n});\r\n\n","\r\ncsui.define('xecmpf/widgets/header/impl/completenesscheck/impl/missingdocuments.factory',[\r\n  'module',\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/utils/contexts/factories/factory',\r\n  'csui/utils/contexts/factories/connector',\r\n  'csui/utils/contexts/factories/node',\r\n  'xecmpf/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model'\r\n], function (module,\r\n    _,\r\n    Backbone,\r\n    CollectionFactory,\r\n    ConnectorFactory,\r\n    NodeFactory,\r\n    MissingReportCollection) {\r\n  var MissingDocumentsFactory = CollectionFactory.extend({\r\n    propertyPrefix: 'missingDocumentsCollection',\r\n    constructor: function MissingDocumentsFactory(context, options) {\r\n      CollectionFactory.prototype.constructor.apply(this, arguments);\r\n      var missingDocumentsCollection = this.options.missingDocumentsCollection || {};\r\n      if (!(missingDocumentsCollection instanceof Backbone.Collection)) {\r\n        var connector = context.getObject(ConnectorFactory, options),\r\n            node      = context.getModel(NodeFactory, options),\r\n            config    = module.config();\r\n        missingDocumentsCollection = new MissingReportCollection(missingDocumentsCollection.models, _.extend(\r\n            {\r\n              connector: connector,\r\n              node: node,\r\n              reportType: 'MissingDocuments'\r\n            }, missingDocumentsCollection.options, config.options, {\r\n              autofetch: true\r\n            }));\r\n      }\r\n      this.property = missingDocumentsCollection;\r\n    },\r\n    fetch: function (options) {\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n  return MissingDocumentsFactory;\r\n});\r\n\n","csui.define('bundles/xecmpf-core',[\r\n  'xecmpf/controls/bosearch/bosearch.model',\r\n  'xecmpf/controls/bosearch/searchform/bosearchform.model',\r\n  'xecmpf/controls/property.panels/reference/impl/workspace.reference.model',\r\n  'xecmpf/controls/property.panels/reference/impl/reference.panel.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.category.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.node.model',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.model',\r\n  'xecmpf/widgets/boattachments/impl/boattachment.model',\r\n  'xecmpf/widgets/boattachments/impl/boattachments.model',\r\n  'xecmpf/widgets/myattachments/metadata.attachment.model',\r\n  'xecmpf/widgets/myattachments/metadata.attachments.model',\r\n  'xecmpf/widgets/myattachments/metadata.nodeattachments.model',\r\n  'xecmpf/widgets/dossier/impl/dossier.model',\r\n  'xecmpf/widgets/dossier/impl/documentslist/impl/documents.model',\r\n  'xecmpf/widgets/dossier/impl/documentslistitem/impl/metadata.model',\r\n  'xecmpf/widgets/header/impl/completenesscheck/impl/models/missingdocuments.model',\r\n  'xecmpf/widgets/workspaces/models/workspace.collection',\r\n  'xecmpf/widgets/workspaces/models/workspace.types.collection',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.category.factory',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.busobjinfo.factory',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.factory',\r\n  'xecmpf/models/boattachmentcontext/attachmentcontext.node.factory',\r\n  'xecmpf/widgets/header/impl/completenesscheck/impl/missingdocuments.factory'\r\n], {});\n"]}