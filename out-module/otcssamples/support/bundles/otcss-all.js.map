{"version":3,"sources":["../../src/widgets/hello/impl/hello.model.js","../../src/widgets/hello/impl/hello.model.factory.js","../../src/widgets/hello/impl/nls/lang.js","../../src/widgets/hello/impl/nls/root/lang.js","../../src/widgets/hello/impl/hello!hbs","../../src/widgets/hello/impl/hello!css","../../src/widgets/hello/hello.view.js","../../src/widgets/hello/hello.manifest.json!json","../../src/widgets/noteview/impl/leftRegion/notecomments!hbs","../../src/widgets/noteview/impl/utils/headerlayout!css","../../src/widgets/noteview/impl/leftRegion/notecomments.view.js","../../src/widgets/noteview/impl/utils/csviewer!hbs","../../src/widgets/noteview/impl/utils/Utils.js","../../src/widgets/noteview/impl/utils/retrievingDocs.js","../../src/widgets/noteview/impl/centerRegion/viewerone!hbs","../../src/widgets/noteview/impl/centerRegion/viewerone.view.js","../../src/widgets/noteview/impl/rightregion/viewertwo!hbs","../../src/widgets/noteview/impl/rightregion/viewertwo.view.js","../../src/widgets/noteview/impl/nls/lang.js","../../src/widgets/noteview/impl/nls/root/lang.js","../../src/widgets/noteview/impl/noteview!hbs","../../src/widgets/noteview/impl/noteview!css","../../src/widgets/noteview/noteview.view.js","../../src/widgets/noteview/noteview.manifest.json!json","../../src/perspective.context.plugin/lp.perspective.context.plugin.js","../../src/perspective.routers/lp.perspective.router.js","../../src/pages/lp.json!json","../../src/commands/NoteComment/impl/nls/lang.js","../../src/commands/NoteComment/impl/nls/root/lang.js","../../src/commands/NoteComment/impl/nls/lang!i18n","../../src/commands/NoteComment/note.comment.command.js","../../src/commands/NoteComment/note.comment.nodestable.toolitems.js","../../src/commands/ViewNote/impl/nls/lang.js","../../src/commands/ViewNote/impl/nls/root/lang.js","../../src/commands/ViewNote/impl/nls/lang!i18n","../../src/commands/ViewNote/view.note.command.js","../../src/commands/ViewNote/view.note.nodestable.toolitems.js","../../src/widgets/getdeptnames/impl/utils/Utils.js","../../src/widgets/getdeptnames/impl/utils/retrievingDocs.js","../../src/widgets/getdeptnames/impl/getdeptnames!hbs","../../src/widgets/getdeptnames/impl/getdeptnames!css","../../src/widgets/getdeptnames/getdeptnames.view.js","../../src/widgets/getdeptnames/getdeptnames.manifest.json!json","../../src/widgets/dps/impl/dps.model.js","../../src/widgets/dps/impl/dps.model.factory.js","../../src/widgets/dps/impl/nls/lang.js","../../src/widgets/dps/impl/nls/root/lang.js","../../src/widgets/dps/impl/dps!hbs","../../src/widgets/dps/impl/dps!css","../../src/widgets/dps/dps.view.js","../../src/widgets/dps/dps.manifest.json!json","otcss-all.js"],"names":["csui","define","Backbone","Url","Model","extend","defaults","name","constructor","attributes","options","prototype","apply","this","arguments","connector","assignTo","url","combine","connection","parse","response","data","ModelFactory","ConnectorFactory","HelloModel","propertyPrefix","context","getObject","property","undefined","fetch","root","en-us","en","helloMessage","waitMessage","module","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","helper","escapeExpression","message","helperMissing","call","hash","registerPartial","_","Marionette","HelloModelFactory","lang","ItemView","className","templateHelpers","model","get","str","sformat","getModel","listenTo","render","$schema","title","description","kind","schema","type","properties","$","RichTextEditor","TextAreaFieldView","SelectFieldView","LayoutView","onRender","CKEDITOR","getRichTextEditor","ckDiv","$el","find","replace","csviewerhbs","getDropdownItems","namesOfDocs","id","collection","Collection","isMultiFieldItem","selected","mode","alpaca","setRequiredFieldsEditable","getCSViewer","docIds","currentPageObj","pageDropDownEvent","self","require","csv","csvRegion","Region","el","fieldvalue","csvView","show","bind","Connector","NodeModel","NodeChildren2Collection","supportPath","link","window","location","href","split","matchs","length","match","console","log","node","parseInt","Utils","RetrievingDocs","regions","selectDocument","csviewer","docsNames","docsIds","done","pluck","forEach","value","index","push","toString","docSelectField","on","obj","showChildView","NoteCommentsView","ViewerOneView","ViewerTwoView","leftRegion","centerRegion","rightRegion","ui","leftcollapsebtn","rightcollpsebtn","events","click @ui.leftcollapsebtn","click @ui.rightcollpsebtn","onLeftCollapseBtn","toggle","onRightCollapseBtn","ApplicationScopeModelFactory","PerspectiveContextPlugin","applicationScope","_fetchLPPerspective","loadPerspective","set","height","PerspectiveRouter","routes","lp","_updateUrl","openLP","navigate","rows","columns","sizes","xs","heights","widget","toolbarButtonTitle","dialogTitle","CommandModel","CommandHelper","signature","scope","enabled","status","getJustOneNode","execute","deferred","Deferred","Router","trigger","error","reject","promise","otherToolbar","inlineActionbar","DialogView","originatingView","$originatingView","append","dialog","parent","contentRegion","Size","control","csProperties","stylesSet","add","element","styles","background-color","uiColor","width","contentsCss","footer","r","ckeditordata","instances","editor1","getData","container","children","ajax","dataType","headers","Authorization","btoa","nodeid","DpsModel","DpsModelFactory","PageContext","TabbedPerspectiveView","makeAjaxCall","then","caseid","pageContext","factories","perspectiveConfig","header","workspace","info","perspectiveView","widgetsResolved","always","css","styleLoad"],"mappings":"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","file":"otcss-all.js","sourcesContent":["csui.define('otcss/widgets/hello/impl/hello.model',[\r\n  // MVC component support\r\n  'csui/lib/backbone',\r\n  // CS REST API URL parsing and combining\r\n  'csui/utils/url'\r\n], function (Backbone, Url) {\r\n  'use strict';\r\n\r\n  var HelloModel = Backbone.Model.extend({\r\n    // Declare model properties with default values\r\n    defaults: {\r\n      name: 'Unnamed'\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger\r\n    constructor: function HelloModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    // Computes the REST API URL using the connection options\r\n    url: function () {\r\n      // /auth returns information about the authenticated user\r\n      return Url.combine(this.connector.connection.url, '/auth');\r\n    },\r\n\r\n    // Massage the server response, so that it looks like object attributes\r\n    parse: function (response) {\r\n      // All attributes are placed below the `data` key\r\n      return response.data;\r\n    }\r\n  });\r\n\r\n  return HelloModel;\r\n});\r\n\n","csui.define('otcss/widgets/hello/impl/hello.model.factory',[\r\n  'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n  'csui/utils/contexts/factories/connector', // Factory for the server connector\r\n  'otcss/widgets/hello/impl/hello.model'     // Model to create the factory for\r\n], function (ModelFactory, ConnectorFactory, HelloModel) {\r\n  'use strict';\r\n\r\n  var HelloModelFactory = ModelFactory.extend({\r\n    // Unique prefix of the default model instance, when this model is placed\r\n    // to a context to be shared by multiple widgets\r\n    propertyPrefix: 'hello',\r\n\r\n    constructor: function HelloModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new HelloModel(undefined, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n      // Just fetch the model exposed by this factory\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n\r\n  return HelloModelFactory;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('otcss/widgets/hello/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('otcss/widgets/hello/impl/nls/root/lang',{\r\n  helloMessage: 'Hello {0} {1}!',\r\n  waitMessage: 'One moment, please...'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/hello/impl/hello',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<span>\"\n    + this.escapeExpression(((helper = (helper = helpers.message || (depth0 != null ? depth0.message : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"message\",\"hash\":{}}) : helper)))\n    + \"</span>\\r\\n\";\n}});\nHandlebars.registerPartial('otcss_widgets_hello_impl_hello', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcss/widgets/hello/impl/hello',[],function(){});\n","// An application widget is exposed via a RequireJS module\r\ncsui.define('otcss/widgets/hello/hello.view',[\r\n  'csui/lib/underscore',                           // Cross-browser utility belt\r\n  'csui/lib/marionette',                           // MVC application support\r\n  'otcss/widgets/hello/impl/hello.model.factory',  // Factory for the data model\r\n  'i18n!otcss/widgets/hello/impl/nls/lang',  // Use localizable texts\r\n  'hbs!otcss/widgets/hello/impl/hello',            // Template to render the HTML\r\n  'css!otcss/widgets/hello/impl/hello'             // Stylesheet needed for this view\r\n], function (_, Marionette, HelloModelFactory, lang, template) {\r\n  'use strict';\r\n\r\n  // An application widget is a view, because it should render a HTML fragment\r\n  var HelloView = Marionette.ItemView.extend({\r\n    // Outermost parent element should contain a unique widget-specific class\r\n    className: 'otcss--hello panel panel-default',\r\n\r\n    // Template method rendering the HTML for the view\r\n    template: template,\r\n\r\n    // Mix additional properties in the template input data\r\n    templateHelpers: function () {\r\n      // Say hello to the authenticated user, if the model has been fetched,\r\n      // otherwise show a waiting message\r\n      var message = this.model.get('id') ?\r\n                    _.str.sformat(lang.helloMessage,\r\n                        this.model.get('first_name'),\r\n                        this.model.get('last_name')) :\r\n                    lang.waitMessage;\r\n      return {\r\n        message: message\r\n      };\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger and\r\n    // can update the options for the parent view, which `initialize` cannot\r\n    constructor: function HelloView(options) {\r\n      // Obtain the model with the data shown by this view; using the model\r\n      // factory with the context makes the model instance not only shareable\r\n      // with other widgets through the context, but also fetched at the same\r\n      // moment as the other models.\r\n      options.model = options.context.getModel(HelloModelFactory);\r\n\r\n      // Models and collections passed via options to the parent constructor\r\n      // are wired to\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n\r\n      // Whenever properties of the model change, re-render the view\r\n      this.listenTo(this.model, 'change', this.render);\r\n    }\r\n  });\r\n\r\n  return HelloView;\r\n});\r\n\n","\ncsui.define('json!otcss/widgets/hello/hello.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"Hello\",\r\n  \"description\": \"Welcomes the current user.\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/noteview/impl/leftRegion/notecomments',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h2 id=\\\"title-header\\\">Note Comments</h2>\\r\\n<div class=\\\"ckeditor-widget\\\"><b>HI This is CKEDITOR Widget</b></div>\\r\\n\";\n}});\nHandlebars.registerPartial('otcss_widgets_noteview_impl_leftRegion_notecomments', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcss/widgets/noteview/impl/utils/headerlayout',[],function(){});\n","csui.define('otcss/widgets/noteview/impl/leftRegion/notecomments.view',[\r\n    'csui/lib/underscore',                           // Cross-browser utility belt\r\n    'csui/lib/backbone',\r\n    'csui/lib/marionette',\r\n    'csui/lib/jquery',\r\n    'csui/controls/rich.text.editor/rich.text.editor',\r\n    'csui/controls/form/fields/textareafield.view',\r\n    'csui/controls/form/fields/selectfield.view',\r\n    'hbs!otcss/widgets/noteview/impl/leftRegion/notecomments',\r\n    'css!otcss/widgets/noteview/impl/utils/headerlayout'\r\n], function (_, Backbone, Marionette, $, RichTextEditor, TextAreaFieldView, SelectFieldView, template) {\r\n\r\n\r\n    var NoteCommentsView = Marionette.LayoutView.extend({\r\n        className: 'viewerTwoView',\r\n        template: template,\r\n        onRender: function () {\r\n            var CKEDITOR = RichTextEditor.getRichTextEditor();\r\n            var ckDiv = this.$el.find('.ckeditor-widget')[0];\r\n            CKEDITOR.replace(ckDiv);\r\n        }\r\n    });\r\n    return NoteCommentsView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/noteview/impl/utils/csviewer',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csviewer\\\"></div>\";\n}});\nHandlebars.registerPartial('otcss_widgets_noteview_impl_utils_csviewer', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('otcss/widgets/noteview/impl/utils/Utils',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/lib/marionette',\r\n  'hbs!otcss/widgets/noteview/impl/utils/csviewer'\r\n], function (_, Backbone, Marionette, csviewerhbs) {\r\n  var Utils = {\r\n    getDropdownItems: function (namesOfDocs) {\r\n      return {\r\n        id: 'selectField',\r\n        collection: new Backbone.Collection(namesOfDocs),\r\n        model: new Backbone.Model({\r\n          options: {\r\n            isMultiFieldItem: false,\r\n            selected: true,\r\n            mode: 'read', // 'read', 'readonly', 'writeonly' ?\r\n          },\r\n        }),\r\n        mode: 'read',\r\n        alpaca: {\r\n          schema: {\r\n            title: 'URL',\r\n            type: 'string',\r\n          },\r\n          options: {\r\n            setRequiredFieldsEditable: false,\r\n          },\r\n        },\r\n      };\r\n    },\r\n    getCSViewer: function (docIds, currentPageObj, pageDropDownEvent) {\r\n      var csviewer = Marionette.ItemView.extend({\r\n        className: 'csv',\r\n        template: csviewerhbs,\r\n        constructor: function (options) {\r\n          options || (options = {});\r\n          Marionette.ItemView.prototype.constructor.apply(\r\n            this,\r\n            arguments\r\n          );\r\n        },\r\n        onRender: function () {\r\n          var self = this;\r\n          require(['csv/widgets/csviewer/csviewer.view'], function (\r\n            csv\r\n          ) {\r\n            this.csvRegion = new Marionette.Region({\r\n              el: self.$el,\r\n            });\r\n            this.options.data = { id: docIds[pageDropDownEvent.fieldvalue] };\r\n            this.csvView = new csv(_.extend({}, this.options));\r\n            this.csvRegion.show(this.csvView);\r\n          }.bind(currentPageObj));\r\n        },\r\n      });\r\n      return csviewer;\r\n    }\r\n  };\r\n  return Utils;\r\n});\r\n\n","csui.define('otcss/widgets/noteview/impl/utils/retrievingDocs',[\r\n  'csui/lib/jquery',\r\n  'csui/utils/connector',\r\n  'csui/models/node/node.model',\r\n  \"csui/models/node.children2/node.children2\"\r\n], function ($, Connector,NodeModel,NodeChildren2Collection) {\r\n      var names,ids;\r\n  var connection = {\r\n    url: \"http://localhost/otcs/cs.exe/api/v1\",\r\n    supportPath: \"/otcssamples\",\r\n  };\r\n  var connector = new Connector({\r\n    connection: connection\r\n  });\r\n  var link = window.location.href.split(\"/\");\r\n  var matchs =link[link.length - 1].match(/(\\d+)/);\r\n  console.log(matchs[0]);\r\n  var container = new NodeModel({ id: parseInt(matchs[0]) }, { connector: connector });\r\n  var children = new NodeChildren2Collection(undefined, { node: container });\r\n  return children;\r\n  });\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/noteview/impl/centerRegion/viewerone',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"center-header-toolbar\\\">\\r\\n    <button class=\\\"center-collapse-btn\\\" id=\\\"left\\\">\\r\\n    </button>\\r\\n    <i class=\\\"fas fa-heart\\\"></i>\\r\\n    <h2 id=\\\"title-header\\\">View Document</h2>\\r\\n    <button class=\\\"right-collapse-btn\\\" id=\\\"right\\\">\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"flex-containers\\\">\\r\\n    <div class=\\\"selectDocument-fieldname\\\">SelectDocument: </div>\\r\\n    <div id=\\\"selectDocument\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"viewer-flex-container\\\">\\r\\n    <div id=\\\"csviewer\\\"></div>\\r\\n</div>\\r\\n\\r\\n\";\n}});\nHandlebars.registerPartial('otcss_widgets_noteview_impl_centerRegion_viewerone', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('otcss/widgets/noteview/impl/centerRegion/viewerone.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/marionette',\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery',\r\n    'csui/controls/form/fields/selectfield.view',\r\n    'otcss/widgets/noteview/impl/utils/Utils',\r\n    'otcss/widgets/noteview/impl/utils/retrievingDocs',\r\n    'hbs!otcss/widgets/noteview/impl/centerRegion/viewerone',\r\n    'css!otcss/widgets/noteview/impl/utils/headerlayout'             // Stylesheet needed for this view\r\n\r\n], function (_, Marionette, Backbone, $, SelectFieldView, Utils, RetrievingDocs,  template) {\r\n\r\n    var ViewerOneView = Marionette.LayoutView.extend({\r\n        className: 'ViewerOneView',\r\n        template: template,\r\n        regions: {\r\n            selectDocument: '#selectDocument',\r\n            csviewer: '#csviewer'\r\n        },\r\n        onRender: function () {\r\n            var currentPageObj = this;\r\n            var docsNames, docsIds =[];\r\n            console.log(RetrievingDocs);\r\n              RetrievingDocs.fetch().done(function () {\r\n                        docsNames =RetrievingDocs.pluck('name');\r\n                        docsIds = RetrievingDocs.pluck('id');\r\n                        var namesOfDocs = [];\r\n                        var docIds = [];\r\n                        docsNames.forEach( function(value, index) {\r\n                            namesOfDocs.push({ id: index, name: value });\r\n                        });\r\n                    \r\n                        docsIds.forEach(function(value) {\r\n                            docIds.push(value.toString());\r\n                        });\r\n                        \r\n                        var docSelectField = new SelectFieldView(Utils.getDropdownItems(namesOfDocs));\r\n                        docSelectField.on('field:changed', function (pageDropDownEvent) {\r\n                        var csviewer = Utils.getCSViewer(docIds, currentPageObj.options.obj, pageDropDownEvent);\r\n                        currentPageObj.showChildView('csviewer', new csviewer());\r\n                            });\r\n                        currentPageObj.showChildView('selectDocument', docSelectField);\r\n                    });\r\n          \r\n                },\r\n            \r\n        }\r\n    );\r\n    return ViewerOneView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/noteview/impl/rightregion/viewertwo',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h2 id=\\\"title-header\\\">View Document</h2>\\r\\n<div class=\\\"flex-containers\\\">\\r\\n    <div class=\\\"selectDocument-fieldname\\\">SelectDocument: </div>\\r\\n    <div id=\\\"selectDocument\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"viewer-flex-container\\\">\\r\\n    <div id=\\\"csviewer\\\"></div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('otcss_widgets_noteview_impl_rightregion_viewertwo', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('otcss/widgets/noteview/impl/rightregion/viewertwo.view',[\r\n    'csui/lib/underscore',\r\n    'csui/lib/marionette',\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery',\r\n    'csui/controls/form/fields/selectfield.view',\r\n    'otcss/widgets/noteview/impl/utils/Utils',\r\n    'otcss/widgets/noteview/impl/utils/retrievingDocs',\r\n    'hbs!otcss/widgets/noteview/impl/rightregion/viewertwo',\r\n    'css!otcss/widgets/noteview/impl/utils/headerlayout'\r\n], function (_, Marionette, Backbone, $, SelectFieldView, Utils, RetrievingDocs, template) {\r\n\r\n    var ViewerTwoView = Marionette.LayoutView.extend({\r\n        className: 'viewerTwoView',\r\n        template: template,\r\n        regions: {\r\n            selectDocument: '#selectDocument',\r\n            csviewer: '#csviewer'\r\n        },\r\n        onRender: function () {\r\n            var currentPageObj = this;\r\n            var docsNames, docsIds =[];\r\n              RetrievingDocs\r\n                .fetch()\r\n                    .done(function () {\r\n                        docsNames =RetrievingDocs.pluck('name');\r\n                        docsIds = RetrievingDocs.pluck('id');\r\n                        var namesOfDocs = [];\r\n                        var docIds = [];\r\n                        console.log('viewerone');\r\n                        docsNames.forEach( function(value, index) {\r\n                            namesOfDocs.push({ id: index, name: value });\r\n                        });\r\n                       \r\n                        docsIds.forEach(function(value) {\r\n                            docIds.push(value.toString());\r\n                        });\r\n                        \r\n                        var docSelectField = new SelectFieldView(Utils.getDropdownItems(namesOfDocs));\r\n                        docSelectField.on('field:changed', function (pageDropDownEvent) {\r\n                        var csviewer = Utils.getCSViewer(docIds, currentPageObj.options.obj, pageDropDownEvent);\r\n                        currentPageObj.showChildView('csviewer', new csviewer());\r\n                        });\r\n                        currentPageObj.showChildView('selectDocument', docSelectField);\r\n                    });\r\n          \r\n        }\r\n    });\r\n    return ViewerTwoView;\r\n});\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('otcss/widgets/noteview/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('otcss/widgets/noteview/impl/nls/root/lang',{\r\n  helloMessage: 'Hello {0} {1}!',\r\n  waitMessage: 'One moment, please...'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/noteview/impl/noteview',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"flex-container\\\">\\r\\n        <div class=\\\"leftColumn\\\" id=\\\"leftRegion\\\"></div>\\r\\n        <div class=\\\"centerColumn\\\" id=\\\"centerRegion\\\"></div>\\r\\n        <div class=\\\"rightColumn\\\" id=\\\"rightRegion\\\"></div>\\r\\n    </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('otcss_widgets_noteview_impl_noteview', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcss/widgets/noteview/impl/noteview',[],function(){});\n","csui.define('otcss/widgets/noteview/noteview.view',[\r\n  'csui/lib/underscore',                           // Cross-browser utility belt\r\n  'csui/lib/marionette',                           // MVC application support\r\n  'otcss/widgets/noteview/impl/leftRegion/notecomments.view',\r\n  'otcss/widgets/noteview/impl/centerRegion/viewerone.view',\r\n  'otcss/widgets/noteview/impl/rightregion/viewertwo.view',\r\n  'i18n!otcss/widgets/noteview/impl/nls/lang',\r\n  'hbs!otcss/widgets/noteview/impl/noteview',            // Template to render the HTML\r\n  'css!otcss/widgets/noteview/impl/noteview'             // Stylesheet needed for this view\r\n], function (_, Marionette, NoteCommentsView, ViewerOneView,ViewerTwoView,  lang, template) {\r\n  'use strict';\r\n\r\n  var NoteviewView = Marionette.LayoutView.extend({\r\n    className: 'otcss--noteview panel panel-default',\r\n\r\n    template: template,\r\n    regions: {\r\n      leftRegion: '#leftRegion',\r\n      centerRegion: '#centerRegion',\r\n      rightRegion: '#rightRegion'\r\n    },\r\n\r\n    ui: {\r\n      leftcollapsebtn: '.center-collapse-btn',\r\n      rightcollpsebtn: '.right-collapse-btn',\r\n    },\r\n    events: {\r\n      'click @ui.leftcollapsebtn': 'onLeftCollapseBtn',\r\n      'click @ui.rightcollpsebtn': 'onRightCollapseBtn',\r\n    },\r\n    onLeftCollapseBtn: function () {\r\n      this.$('.leftColumn').toggle();\r\n    },\r\n    onRightCollapseBtn: function () {\r\n      this.$('.rightColumn').toggle();\r\n    },\r\n\r\n    constructor: function NoteviewView(options) {\r\n      Marionette.LayoutView.prototype.constructor.call(this, options);\r\n\r\n    },\r\n    onRender: function () {\r\n      this.options.obj = this;\r\n      this.showChildView('leftRegion', new NoteCommentsView());\r\n      this.showChildView('centerRegion', new ViewerOneView(this.options));\r\n     this.showChildView('rightRegion', new ViewerTwoView(this.options));\r\n    }\r\n  });\r\n\r\n  return NoteviewView;\r\n});\r\n\n","\ncsui.define('json!otcss/widgets/noteview/noteview.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"noteview\",\r\n  \"description\": \"Welcomes the current user.\",\r\n  \"kind\": \"fullpage\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","csui.define('otcss/perspective.context.plugin/lp.perspective.context.plugin',['csui/lib/underscore', 'csui/lib/backbone',\r\n'csui/lib/jquery',\r\n'csui/utils/contexts/factories/application.scope.factory',\r\n'csui/utils/contexts/perspective/perspective.context.plugin'], function(_, Backbone,$, ApplicationScopeModelFactory,\r\n     PerspectiveContextPlugin) {\r\n\r\n        var LPPerspectiveContextPlugin = PerspectiveContextPlugin.extend({\r\n\r\n            constructor: function LPPerspectiveContextPlugin(options) {\r\n                PerspectiveContextPlugin.prototype.constructor.apply(this, arguments);\r\n\r\n                this.applicationScope = this.context\r\n                    .getModel(ApplicationScopeModelFactory)\r\n                    .on('change', this._fetchLPPerspective, this);\r\n            },\r\n            _fetchLPPerspective: function() {\r\n                if(this.applicationScope.id !== 'lp'){\r\n                    return;\r\n                }\r\n                if (this.loadPerspective){\r\n                    return;\r\n                }\r\n                this.applicationScope.set('id', 'lp');\r\n                this.context.loadPerspective('json!otcss/pages/lp.json');\r\n                $('.otcss--noteview panel panel-default').height(100);\r\n            }\r\n        });\r\n\r\n        return LPPerspectiveContextPlugin;\r\n});\n","csui.define('otcss/perspective.routers/lp.perspective.router',[\r\n  \"csui/pages/start/perspective.router\",\r\n  \"csui/utils/contexts/factories/application.scope.factory\",\r\n], function (PerspectiveRouter, ApplicationScopeModelFactory) {\r\n  var LPPerspectiveRouter = PerspectiveRouter.extend({\r\n    routes: {\r\n      lp: \"openLP\",\r\n    },\r\n\r\n    constructor: function LPPerspectiveRouter(options) {\r\n      PerspectiveRouter.prototype.constructor.apply(this, arguments);\r\n\r\n      this.applicationScope = this.context.getModel(\r\n        ApplicationScopeModelFactory\r\n      );\r\n      this.listenTo(this.applicationScope, \"change\", this._updateUrl);\r\n    },\r\n    openLP: function () {\r\n      this.applicationScope.set(\"id\", \"lp\");\r\n    },\r\n    // onOtherRoute: function () {\r\n    //   this.applicationScope.clear({silent: true});\r\n    // },\r\n    _updateUrl: function () {\r\n      if (this.applicationScope.id !== 'lp') {\r\n        return;\r\n      }\r\n      this.navigate(\"lp\");\r\n    },\r\n  });\r\n  return LPPerspectiveRouter;\r\n});\r\n\n","\ncsui.define('json!otcss/pages/lp.json',{\r\n    \"type\": \"grid\",\r\n    \"kind\": \"fullpage\",\r\n    \"options\": {\r\n      \"rows\": [\r\n        {\r\n          \"columns\": [\r\n            {\r\n              \"sizes\": {\r\n                \"xs\": 12\r\n              },\r\n              \"heights\": {\r\n                \"xs\": \"full\"\r\n              },\r\n              \"widget\": {\r\n                \"type\": \"otcss/widgets/noteview\",\r\n                \"options\": {\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  );\n\n","csui.define('otcss/commands/NoteComment/impl/nls/lang',{\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('otcss/commands/NoteComment/impl/nls/root/lang',{\r\n\r\n  toolbarButtonTitle: 'Note Comment',\r\n  dialogTitle       : 'Note Comment',\r\n  message           : 'This is for Testing'\r\n\r\n});\r\n\n","\n","csui.define('otcss/commands/NoteComment/note.comment.command',['require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n'csui/models/command', 'csui/utils/commandhelper',\r\n'i18n!otcss/commands/NoteComment/impl/nls/lang'\r\n],function(require, _, $, CommandModel, CommandHelper,lang) {\r\n    var ModalAlert;\r\n\r\n  var NoteCommentCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'otcss-note-comment',\r\n      name     : lang.toolbarButtonTitle,\r\n      scope    : 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 848;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/lib/backbone'\r\n      ], function (Backbone) {\r\n        var Router = Backbone.Router.extend({});\r\n           \r\n        var routerobj = new Router();\r\n        routerobj.navigate(\"/lp\",{trigger : true,replace : true});\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return NoteCommentCommand;\r\n\r\n});\n","csui.define('otcss/commands/NoteComment/note.comment.nodestable.toolitems',['i18n!otcss/commands/NoteComment/impl/nls/lang'], function (lang) {\r\n  'use strict';\r\n\r\n  return {\r\n    //This adds the command in the upper toolbar\r\n    otherToolbar   : [\r\n      {\r\n        signature: 'otcss-note-comment',\r\n        name     : lang.toolbarButtonTitle\r\n      }\r\n    ],\r\n    //This will add the command in the context menu of nodes\r\n    inlineActionbar: [\r\n      {\r\n        signature: 'otcss-note-comment',\r\n        name     : lang.toolbarButtonTitle\r\n      }\r\n    ]\r\n  };\r\n\r\n});\r\n\n","csui.define('otcss/commands/ViewNote/impl/nls/lang',{\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('otcss/commands/ViewNote/impl/nls/root/lang',{\r\n\r\n  toolbarButtonTitle: 'Add Note Comment',\r\n  dialogTitle       : 'Add Note Comment',\r\n  message           : 'This is for Testing'\r\n\r\n});\r\n\n","\n","csui.define('otcss/commands/ViewNote/view.note.command',[\r\n  \"require\",\r\n  \"csui/lib/underscore\",\r\n  \"csui/lib/jquery\",\r\n  \"csui/models/command\",\r\n  \"csui/utils/commandhelper\",\r\n  \"i18n!otcss/commands/ViewNote/impl/nls/lang\",\r\n], function (require, _, $, CommandModel, CommandHelper, lang) {\r\n  var ModalAlert;\r\n\r\n  var ViewNoteCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"otcss-view-note\",\r\n      name: lang.toolbarButtonTitle,\r\n      scope: \"single\",\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get(\"type\") === 144;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        \"csui/lib/marionette\",\r\n        \"csui/lib/jquery\",\r\n        \"csui/utils/connector\",\r\n        \"csui/controls/rich.text.editor/rich.text.editor\",\r\n        \"csui/controls/dialog/dialog.view\",\r\n        \"csui/models/node/node.model\",\r\n        \"csui/models/node.children2/node.children2\",\r\n      ], function (\r\n        Marionette,\r\n        $,\r\n        Connector,\r\n        RichTextEditor,\r\n        DialogView,\r\n        NodeModel,\r\n        NodeChildren2Collection\r\n      ) {\r\n        var CKEDITOR = RichTextEditor.getRichTextEditor();\r\n        if (status.originatingView === undefined) {\r\n        } else {\r\n          var $originatingView = status.originatingView.$el;\r\n          $originatingView.append(\"<div class='dialogbox'></div>\");\r\n          //$originatingView.append('<input type=\"button\" value=\"new button\"/>');\r\n          var dialog = $originatingView.parent().find(\".dialogbox\")[0];\r\n          var contentRegion = new Marionette.Region({\r\n            el: dialog,\r\n          });\r\n          var options = { title: \"View Note\", Size: \"largeSize\" };\r\n          var control = new DialogView(options);\r\n          control.render();\r\n          contentRegion.show(control);\r\n\r\n          var csProperties = $originatingView\r\n            .parent()\r\n            .find(\".binf-modal-body\")[0];\r\n          CKEDITOR.stylesSet.add(\"my_styles\", [\r\n            // Block-level styles\r\n            {\r\n              name: \"Blue Title\",\r\n              element: \"div\",\r\n              styles: { \"background-color\": \"Blue\" },\r\n            },\r\n          ]);\r\n          CKEDITOR.replace(csProperties, {\r\n            height: \"20em\",\r\n            uiColor: \"#008000\",\r\n            width: \"48em\",\r\n            stylesSet: \"my_styles\",\r\n            contentsCss: \"style.css\",\r\n          });\r\n          $(\".binf-modal-content\").width(\"50em\");\r\n          $(\".binf-modal-content\").height(\"30em\");\r\n          var footer = $originatingView.parent().find(\".binf-modal-content\")[0];\r\n          var r = $('<input type=\"button\" value=\"SAVE\"/>');\r\n          $(footer).append(r);\r\n          $(\"input\").on(\"click\", function () {\r\n            var connection = {\r\n              url: \"http://localhost/otcs/cs.exe/api/v1\",\r\n              supportPath: \"/otcssamples\",\r\n            };\r\n            var connector = new Connector({\r\n              connection: connection,\r\n            });\r\n            var ckeditordata = CKEDITOR.instances.editor1.getData();\r\n            console.log(ckeditordata.replace(/<[^>]+>/g, \"\"));\r\n            var link = window.location.href.split(\"/\");\r\n            var matchs =link[link.length - 1].match(/(\\d+)/);\r\n            console.log(matchs[0]);\r\n            var container = new NodeModel(\r\n              { id: parseInt(matchs[0]) },\r\n              { connector: connector }\r\n            );\r\n            var children = new NodeChildren2Collection(undefined, {\r\n              node: container,\r\n            });\r\n            var docsIds = [];\r\n            var docIds = [];\r\n\r\n            children.fetch().done(function () {\r\n              docsIds = children.pluck(\"id\");\r\n              docsIds.forEach(function (value) {\r\n                docIds.push(value.toString());\r\n              });\r\n              $.ajax({\r\n                type: \"POST\",\r\n                url: \"http://localhost/otcs/cs.exe/api/v1/ckeditordata\",\r\n                dataType: \"json\",\r\n                headers: {\r\n                  Authorization: \"Basic \" + btoa(\"Admin\" + \":\" + \"Sedin@123\"),\r\n                },\r\n                data: {\r\n                  data: ckeditordata.replace(/<[^>]+>/g, \"\"),\r\n                  nodeid: docIds[0],\r\n                },\r\n              }).done(function (data) {\r\n                console.log(data);\r\n              });\r\n              // var data = ckeditordata.replace(/<[^>]+>/g, \"\");\r\n              // connector.makeAjaxCall({\r\n              //   type: \"POST\",\r\n              //   dataType: 'json',\r\n              //   contentType: \"application/x-www-form-urlencoded\",\r\n              //  data:{'data':data,'nodeid': docsIds[0]},\r\n              //   url:\r\n              //     \"api/v1/ckeditordata\",\r\n              // }).then(\r\n              //   function (response) {\r\n              //     console.log(response);\r\n              //   },\r\n              //   function (jqxhr) {\r\n              //     console.log(\"not authenticated\");\r\n              //   }\r\n              // );\r\n            });\r\n\r\n           \r\n          });\r\n        }\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n  });\r\n\r\n  return ViewNoteCommand;\r\n});\r\n\n","csui.define('otcss/commands/ViewNote/view.note.nodestable.toolitems',['i18n!otcss/commands/ViewNote/impl/nls/lang'], function (lang) {\r\n    'use strict';\r\n  \r\n    return {\r\n      //This adds the command in the upper toolbar\r\n      otherToolbar   : [\r\n        {\r\n          signature: 'otcss-view-note',\r\n          name     : lang.toolbarButtonTitle\r\n        }\r\n      ],\r\n      //This will add the command in the context menu of nodes\r\n      inlineActionbar: [\r\n        {\r\n          signature: 'otcss-view-note',\r\n          name     : lang.toolbarButtonTitle\r\n        }\r\n      ]\r\n    };\r\n  \r\n  });\r\n  \n","csui.define('otcss/widgets/getdeptnames/impl/utils/Utils',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/backbone',\r\n  'csui/lib/marionette',\r\n  'hbs!otcss/widgets/noteview/impl/utils/csviewer'\r\n], function (_, Backbone, Marionette, csviewerhbs) {\r\n  var Utils = {\r\n    getDropdownItems: function (namesOfDocs) {\r\n      return {\r\n        id: 'selectField',\r\n        collection: new Backbone.Collection(namesOfDocs),\r\n        model: new Backbone.Model({\r\n          options: {\r\n            isMultiFieldItem: false,\r\n            selected: true,\r\n            mode: 'read', // 'read', 'readonly', 'writeonly' ?\r\n          },\r\n        }),\r\n        mode: 'read',\r\n        alpaca: {\r\n          schema: {\r\n            title: 'URL',\r\n            type: 'string',\r\n          },\r\n          options: {\r\n            setRequiredFieldsEditable: false,\r\n          },\r\n        },\r\n      };\r\n    },\r\n    getCSViewer: function (docIds, currentPageObj, pageDropDownEvent) {\r\n      var csviewer = Marionette.ItemView.extend({\r\n        className: 'csv',\r\n        template: csviewerhbs,\r\n        constructor: function (options) {\r\n          options || (options = {});\r\n          Marionette.ItemView.prototype.constructor.apply(\r\n            this,\r\n            arguments\r\n          );\r\n        },\r\n        onRender: function () {\r\n          var self = this;\r\n          require(['csv/widgets/csviewer/csviewer.view'], function (\r\n            csv\r\n          ) {\r\n            this.csvRegion = new Marionette.Region({\r\n              el: self.$el,\r\n            });\r\n            this.options.data = { id: docIds[pageDropDownEvent.fieldvalue] };\r\n            this.csvView = new csv(_.extend({}, this.options));\r\n            this.csvRegion.show(this.csvView);\r\n          }.bind(currentPageObj));\r\n        },\r\n      });\r\n      return csviewer;\r\n    }\r\n  };\r\n  return Utils;\r\n});\r\n\n","csui.define('otcss/widgets/getdeptnames/impl/utils/retrievingDocs',[\r\n  'csui/lib/jquery',\r\n  'csui/utils/connector',\r\n  'csui/models/node/node.model',\r\n  \"csui/models/node.children2/node.children2\"\r\n], function ($, Connector,NodeModel,NodeChildren2Collection) {\r\n      var names,ids;\r\n  var connection = {\r\n    url: \"http://localhost/otcs/cs.exe/api/v1\",\r\n    supportPath: \"/otcssamples\",\r\n  };\r\n  var connector = new Connector({\r\n    connection: connection\r\n  });\r\n  var container = new NodeModel({ id: 306006 }, { connector: connector });\r\n  var children = new NodeChildren2Collection(undefined, { node: container });\r\n  return children;\r\n  });\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/getdeptnames/impl/getdeptnames',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"selectDocument\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('otcss_widgets_getdeptnames_impl_getdeptnames', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcss/widgets/getdeptnames/impl/getdeptnames',[],function(){});\n","// An application widget is exposed via a RequireJS module\r\ncsui.define('otcss/widgets/getdeptnames/getdeptnames.view',[\r\n  'csui/lib/underscore',                           // Cross-browser utility belt\r\n  'csui/lib/marionette',                           // MVC application support\r\n  'csui/controls/form/fields/selectfield.view',\r\n  'otcss/widgets/getdeptnames/impl/utils/Utils',\r\n  'otcss/widgets/getdeptnames/impl/utils/retrievingDocs',\r\n  'hbs!otcss/widgets/getdeptnames/impl/getdeptnames',            // Template to render the HTML\r\n  'css!otcss/widgets/getdeptnames/impl/getdeptnames'             // Stylesheet needed for this view\r\n], function (_, Marionette,SelectFieldView ,Utils, RetrievingDocs,template) {\r\n  'use strict';\r\n\r\n  // An application widget is a view, because it should render a HTML fragment\r\n  var GetdeptnamesView = Marionette.LayoutView.extend({\r\n    // Outermost parent element should contain a unique widget-specific class\r\n    className: 'otcss--getdeptnames panel panel-default',\r\n\r\n    // Template method rendering the HTML for the view\r\n    template: template,\r\n    regions: {\r\n      selectDocument: '.selectDocument'\r\n  },\r\n  onRender: function () {\r\n    var currentPageObj = this;\r\n    var docsNames, docsIds =[];\r\n      RetrievingDocs.fetch().done(function () {\r\n                docsNames =RetrievingDocs.pluck('name');\r\n                docsIds = RetrievingDocs.pluck('id');\r\n                var namesOfDocs = [];\r\n                var docIds = [];\r\n                docsNames.forEach( function(value, index) {\r\n                    namesOfDocs.push({ id: index, name: value });\r\n                });\r\n               \r\n                docsIds.forEach(function(value) {\r\n                    docIds.push(value.toString());\r\n                });\r\n                \r\n                var docSelectField = new SelectFieldView(Utils.getDropdownItems(namesOfDocs));\r\n                docSelectField.on('field:changed', function (pageDropDownEvent) {\r\n                  \r\n                    });\r\n                currentPageObj.showChildView('selectDocument', docSelectField);\r\n            });\r\n  \r\n        },\r\n  \r\n  });\r\n\r\n  return GetdeptnamesView;\r\n});\r\n\n","\ncsui.define('json!otcss/widgets/getdeptnames/getdeptnames.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"getdeptnames\",\r\n  \"description\": \"Welcomes the current user.\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","csui.define('otcss/widgets/dps/impl/dps.model',[\r\n  // MVC component support\r\n  'csui/lib/backbone',\r\n  // CS REST API URL parsing and combining\r\n  'csui/utils/url'\r\n], function (Backbone, Url) {\r\n  'use strict';\r\n\r\n  var DpsModel = Backbone.Model.extend({\r\n    // Declare model properties with default values\r\n    defaults: {\r\n      name: 'Unnamed'\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger\r\n    constructor: function DpsModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    // Computes the REST API URL using the connection options\r\n    url: function () {\r\n      // /auth returns information about the authenticated user\r\n      return Url.combine(this.connector.connection.url, '/auth');\r\n    },\r\n\r\n    // Massage the server response, so that it looks like object attributes\r\n    parse: function (response) {\r\n      // All attributes are placed below the `data` key\r\n      return response.data;\r\n    }\r\n  });\r\n\r\n  return DpsModel;\r\n});\r\n\n","csui.define('otcss/widgets/dps/impl/dps.model.factory',[\r\n  'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n  'csui/utils/contexts/factories/connector', // Factory for the server connector\r\n  'otcss/widgets/dps/impl/dps.model'     // Model to create the factory for\r\n], function (ModelFactory, ConnectorFactory, DpsModel) {\r\n  'use strict';\r\n\r\n  var DpsModelFactory = ModelFactory.extend({\r\n    // Unique prefix of the default model instance, when this model is placed\r\n    // to a context to be shared by multiple widgets\r\n    propertyPrefix: 'dps',\r\n\r\n    constructor: function DpsModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new DpsModel(undefined, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n      // Just fetch the model exposed by this factory\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n\r\n  return DpsModelFactory;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('otcss/widgets/dps/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('otcss/widgets/dps/impl/nls/root/lang',{\r\n  helloMessage: 'Hello {0} {1}!',\r\n  waitMessage: 'One moment, please...'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcss/widgets/dps/impl/dps',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"dps\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('otcss_widgets_dps_impl_dps', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcss/widgets/dps/impl/dps',[],function(){});\n","csui.define('otcss/widgets/dps/dps.view',[\r\n  \"csui/lib/underscore\", \r\n  \"csui/lib/marionette\",\r\n  \"csui/lib/jquery\",\r\n  \"csui/utils/connector\", \r\n  \"otcss/widgets/dps/impl/dps.model.factory\", \r\n  \"i18n!otcss/widgets/dps/impl/nls/lang\",\r\n  \"csui/utils/contexts/page/page.context\",\r\n  \"csui/perspectives/tabbed/tabbed.perspective.view\",\r\n  //\"otcss/widgets/testing/testing.view\", \r\n  \"hbs!otcss/widgets/dps/impl/dps\",\r\n  \"css!otcss/widgets/dps/impl/dps\", \r\n], function (\r\n  _,\r\n  Marionette,\r\n  $,\r\n  Connector,\r\n  DpsModelFactory,\r\n  lang,\r\n  PageContext,\r\n  TabbedPerspectiveView,\r\n  template\r\n) {\r\n  \"use strict\";\r\n  var DpsView = Marionette.ItemView.extend({\r\n    className: \"otcss--dps panel panel-default\",\r\n    template: template,\r\n    constructor: function DpsView(options) {\r\n      options.model = options.context.getModel(DpsModelFactory);\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n      this.listenTo(this.model, \"change\", this.render);\r\n    },\r\n    onRender: function () {\r\n      var contentRegion = new Marionette.Region({\r\n        el: \".cs-header\",\r\n      });\r\n      var connection = {\r\n        url: \"http://localhost/otcs/cs.exe/api/v1\",\r\n        supportPath: \"/otcssamples\",\r\n      };\r\n      var connector = new Connector({\r\n        connection: connection,\r\n      });\r\n      connector\r\n        .makeAjaxCall({\r\n          type: \"GET\",\r\n          url: \"http://localhost/otcs/cs.exe/api/v1/auth\",\r\n          dataType: \"json\",\r\n        })\r\n        .then(function (response) {\r\n          var id = response.data.id;\r\n          console.log(id);\r\n          connector\r\n            .makeAjaxCall({\r\n              type: \"GET\",\r\n              url:\r\n                \"http://localhost/otcs/cs.exe/api/v1/groupname/\" +\r\n                id.toString(),\r\n              dataType: \"json\",\r\n            })\r\n            .then(function (response) {\r\n              var caseid = window.location.href.split(\"/\");\r\n              var pageContext = new PageContext({\r\n                factories: {\r\n                  connector: connector,\r\n                  node: {\r\n                    attributes: { id: parseInt(caseid[caseid.length - 1]) },\r\n                  },\r\n                },\r\n              });\r\n\r\n              var perspectiveConfig = {\r\n                header: {\r\n                  widget: {\r\n                    type: \"conws/widgets/header\",\r\n                    options: {\r\n                      workspace: {\r\n                        properties: {\r\n                          title: \"{name}\",\r\n                          type: \"{business_properties.workspace_type_name}\",\r\n                          description: response.message,\r\n                          info:\r\n                            \"{categories.20368_3}.\\n\\nValid from: {categories.23228_2_1_39}\\nValid to: {categories.23228_2_1_40}\",\r\n                        },\r\n                      },\r\n                      widget: { type: \"activityfeed\" },\r\n                    },\r\n                  },\r\n                },\r\n              };\r\n\r\n              var perspectiveView = new TabbedPerspectiveView(\r\n                _.defaults({ context: pageContext }, perspectiveConfig)\r\n              );\r\n              perspectiveView.widgetsResolved.always(function () {\r\n                contentRegion.show(perspectiveView);\r\n                pageContext.fetch();\r\n              });\r\n              \r\n              \r\n             // document.getElementsByClassName('cs-header').style.height=\"126px\";\r\n            });\r\n        });\r\n    \r\n        $(\".cs-header\").height(\"126px\");\r\n      },\r\n  });\r\n\r\n  return DpsView;\r\n});\r\n\n","\ncsui.define('json!otcss/widgets/dps/dps.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"dps\",\r\n  \"description\": \"Welcomes the current user.\",\r\n  \"kind\": \"header\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n});\n\n","// Placeholder for the build target file; the name must be the same,\n// include public modules from this component\n\ncsui.define('bundles/otcss-all',[\n  'otcss/widgets/hello/hello.view',\n  'json!otcss/widgets/hello/hello.manifest.json',\n  'otcss/widgets/noteview/noteview.view',\n  'json!otcss/widgets/noteview/noteview.manifest.json',\n  'otcss/perspective.context.plugin/lp.perspective.context.plugin',\n  'otcss/perspective.routers/lp.perspective.router',\n  'json!otcss/pages/lp.json',\n  'otcss/commands/NoteComment/note.comment.command',\n  'otcss/commands/NoteComment/note.comment.nodestable.toolitems',\n  'otcss/commands/ViewNote/view.note.command',\n  'otcss/commands/ViewNote/view.note.nodestable.toolitems',\n  'otcss/widgets/getdeptnames/getdeptnames.view',\n  'json!otcss/widgets/getdeptnames/getdeptnames.manifest.json',\n  'otcss/widgets/dps/dps.view',\n  'json!otcss/widgets/dps/dps.manifest.json'\n], {});\n\ncsui.require([\n  'require',\n  'css'\n], function (require, css) {\n\n  // Load the bundle-specific stylesheet\n  css.styleLoad(require, 'otcss/bundles/otcss-all');\n});\n"]}